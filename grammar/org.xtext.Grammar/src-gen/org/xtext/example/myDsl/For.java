/**
 * generated by Xtext 2.35.0-SNAPSHOT
 */
package org.xtext.example.myDsl;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>For</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.myDsl.For#getIncrement <em>Increment</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.For#getInitWithVariable <em>Init With Variable</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.For#getInitWithInteger <em>Init With Integer</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.For#getEndWithVariable <em>End With Variable</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.For#getObjectC <em>Object C</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.For#getEndWithInteger <em>End With Integer</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.For#getOtherElement <em>Other Element</em>}</li>
 * </ul>
 *
 * @see org.xtext.example.myDsl.MyDslPackage#getFor()
 * @model
 * @generated
 */
public interface For extends EObject
{
  /**
   * Returns the value of the '<em><b>Increment</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Increment</em>' containment reference.
   * @see #setIncrement(Variable)
   * @see org.xtext.example.myDsl.MyDslPackage#getFor_Increment()
   * @model containment="true"
   * @generated
   */
  Variable getIncrement();

  /**
   * Sets the value of the '{@link org.xtext.example.myDsl.For#getIncrement <em>Increment</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Increment</em>' containment reference.
   * @see #getIncrement()
   * @generated
   */
  void setIncrement(Variable value);

  /**
   * Returns the value of the '<em><b>Init With Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Init With Variable</em>' containment reference.
   * @see #setInitWithVariable(Variable)
   * @see org.xtext.example.myDsl.MyDslPackage#getFor_InitWithVariable()
   * @model containment="true"
   * @generated
   */
  Variable getInitWithVariable();

  /**
   * Sets the value of the '{@link org.xtext.example.myDsl.For#getInitWithVariable <em>Init With Variable</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Init With Variable</em>' containment reference.
   * @see #getInitWithVariable()
   * @generated
   */
  void setInitWithVariable(Variable value);

  /**
   * Returns the value of the '<em><b>Init With Integer</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Init With Integer</em>' attribute.
   * @see #setInitWithInteger(int)
   * @see org.xtext.example.myDsl.MyDslPackage#getFor_InitWithInteger()
   * @model
   * @generated
   */
  int getInitWithInteger();

  /**
   * Sets the value of the '{@link org.xtext.example.myDsl.For#getInitWithInteger <em>Init With Integer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Init With Integer</em>' attribute.
   * @see #getInitWithInteger()
   * @generated
   */
  void setInitWithInteger(int value);

  /**
   * Returns the value of the '<em><b>End With Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>End With Variable</em>' containment reference.
   * @see #setEndWithVariable(Variable)
   * @see org.xtext.example.myDsl.MyDslPackage#getFor_EndWithVariable()
   * @model containment="true"
   * @generated
   */
  Variable getEndWithVariable();

  /**
   * Sets the value of the '{@link org.xtext.example.myDsl.For#getEndWithVariable <em>End With Variable</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>End With Variable</em>' containment reference.
   * @see #getEndWithVariable()
   * @generated
   */
  void setEndWithVariable(Variable value);

  /**
   * Returns the value of the '<em><b>Object C</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Object C</em>' containment reference.
   * @see #setObjectC(ObjectC)
   * @see org.xtext.example.myDsl.MyDslPackage#getFor_ObjectC()
   * @model containment="true"
   * @generated
   */
  ObjectC getObjectC();

  /**
   * Sets the value of the '{@link org.xtext.example.myDsl.For#getObjectC <em>Object C</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Object C</em>' containment reference.
   * @see #getObjectC()
   * @generated
   */
  void setObjectC(ObjectC value);

  /**
   * Returns the value of the '<em><b>End With Integer</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>End With Integer</em>' attribute.
   * @see #setEndWithInteger(int)
   * @see org.xtext.example.myDsl.MyDslPackage#getFor_EndWithInteger()
   * @model
   * @generated
   */
  int getEndWithInteger();

  /**
   * Sets the value of the '{@link org.xtext.example.myDsl.For#getEndWithInteger <em>End With Integer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>End With Integer</em>' attribute.
   * @see #getEndWithInteger()
   * @generated
   */
  void setEndWithInteger(int value);

  /**
   * Returns the value of the '<em><b>Other Element</b></em>' containment reference list.
   * The list contents are of type {@link org.xtext.example.myDsl.OtherElement}.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the value of the '<em>Other Element</em>' containment reference list.
   * @see org.xtext.example.myDsl.MyDslPackage#getFor_OtherElement()
   * @model containment="true"
   * @generated
   */
  EList<OtherElement> getOtherElement();

} // For
