/**
 * generated by Xtext 2.35.0-SNAPSHOT
 */
package org.xtext.example.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.myDsl.Conditional;
import org.xtext.example.myDsl.ElseCondition;
import org.xtext.example.myDsl.IfCondition;
import org.xtext.example.myDsl.MyDslPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Conditional</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.myDsl.impl.ConditionalImpl#getIfCondition <em>If Condition</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.ConditionalImpl#getElseCondion <em>Else Condion</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConditionalImpl extends MinimalEObjectImpl.Container implements Conditional
{
  /**
   * The cached value of the '{@link #getIfCondition() <em>If Condition</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIfCondition()
   * @generated
   * @ordered
   */
  protected IfCondition ifCondition;

  /**
   * The cached value of the '{@link #getElseCondion() <em>Else Condion</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElseCondion()
   * @generated
   * @ordered
   */
  protected EList<ElseCondition> elseCondion;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConditionalImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.CONDITIONAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public IfCondition getIfCondition()
  {
    return ifCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIfCondition(IfCondition newIfCondition, NotificationChain msgs)
  {
    IfCondition oldIfCondition = ifCondition;
    ifCondition = newIfCondition;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.CONDITIONAL__IF_CONDITION, oldIfCondition, newIfCondition);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIfCondition(IfCondition newIfCondition)
  {
    if (newIfCondition != ifCondition)
    {
      NotificationChain msgs = null;
      if (ifCondition != null)
        msgs = ((InternalEObject)ifCondition).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.CONDITIONAL__IF_CONDITION, null, msgs);
      if (newIfCondition != null)
        msgs = ((InternalEObject)newIfCondition).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.CONDITIONAL__IF_CONDITION, null, msgs);
      msgs = basicSetIfCondition(newIfCondition, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.CONDITIONAL__IF_CONDITION, newIfCondition, newIfCondition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ElseCondition> getElseCondion()
  {
    if (elseCondion == null)
    {
      elseCondion = new EObjectContainmentEList<ElseCondition>(ElseCondition.class, this, MyDslPackage.CONDITIONAL__ELSE_CONDION);
    }
    return elseCondion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.CONDITIONAL__IF_CONDITION:
        return basicSetIfCondition(null, msgs);
      case MyDslPackage.CONDITIONAL__ELSE_CONDION:
        return ((InternalEList<?>)getElseCondion()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.CONDITIONAL__IF_CONDITION:
        return getIfCondition();
      case MyDslPackage.CONDITIONAL__ELSE_CONDION:
        return getElseCondion();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.CONDITIONAL__IF_CONDITION:
        setIfCondition((IfCondition)newValue);
        return;
      case MyDslPackage.CONDITIONAL__ELSE_CONDION:
        getElseCondion().clear();
        getElseCondion().addAll((Collection<? extends ElseCondition>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.CONDITIONAL__IF_CONDITION:
        setIfCondition((IfCondition)null);
        return;
      case MyDslPackage.CONDITIONAL__ELSE_CONDION:
        getElseCondion().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.CONDITIONAL__IF_CONDITION:
        return ifCondition != null;
      case MyDslPackage.CONDITIONAL__ELSE_CONDION:
        return elseCondion != null && !elseCondion.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //ConditionalImpl
