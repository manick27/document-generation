/**
 * generated by Xtext 2.35.0-SNAPSHOT
 */
package org.xtext.example.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.myDsl.Col;
import org.xtext.example.myDsl.Conditional;
import org.xtext.example.myDsl.Loop;
import org.xtext.example.myDsl.MyDslPackage;
import org.xtext.example.myDsl.OtherElement;
import org.xtext.example.myDsl.Page;
import org.xtext.example.myDsl.Row;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Other Element</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.myDsl.impl.OtherElementImpl#getPage <em>Page</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.OtherElementImpl#getRow <em>Row</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.OtherElementImpl#getCol <em>Col</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.OtherElementImpl#getLoop <em>Loop</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.OtherElementImpl#getConditional <em>Conditional</em>}</li>
 * </ul>
 *
 * @generated
 */
public class OtherElementImpl extends MinimalEObjectImpl.Container implements OtherElement
{
  /**
   * The cached value of the '{@link #getPage() <em>Page</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPage()
   * @generated
   * @ordered
   */
  protected Page page;

  /**
   * The cached value of the '{@link #getRow() <em>Row</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRow()
   * @generated
   * @ordered
   */
  protected Row row;

  /**
   * The cached value of the '{@link #getCol() <em>Col</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCol()
   * @generated
   * @ordered
   */
  protected Col col;

  /**
   * The cached value of the '{@link #getLoop() <em>Loop</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLoop()
   * @generated
   * @ordered
   */
  protected Loop loop;

  /**
   * The cached value of the '{@link #getConditional() <em>Conditional</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConditional()
   * @generated
   * @ordered
   */
  protected Conditional conditional;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected OtherElementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.OTHER_ELEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Page getPage()
  {
    return page;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPage(Page newPage, NotificationChain msgs)
  {
    Page oldPage = page;
    page = newPage;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.OTHER_ELEMENT__PAGE, oldPage, newPage);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPage(Page newPage)
  {
    if (newPage != page)
    {
      NotificationChain msgs = null;
      if (page != null)
        msgs = ((InternalEObject)page).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.OTHER_ELEMENT__PAGE, null, msgs);
      if (newPage != null)
        msgs = ((InternalEObject)newPage).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.OTHER_ELEMENT__PAGE, null, msgs);
      msgs = basicSetPage(newPage, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.OTHER_ELEMENT__PAGE, newPage, newPage));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Row getRow()
  {
    return row;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRow(Row newRow, NotificationChain msgs)
  {
    Row oldRow = row;
    row = newRow;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.OTHER_ELEMENT__ROW, oldRow, newRow);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRow(Row newRow)
  {
    if (newRow != row)
    {
      NotificationChain msgs = null;
      if (row != null)
        msgs = ((InternalEObject)row).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.OTHER_ELEMENT__ROW, null, msgs);
      if (newRow != null)
        msgs = ((InternalEObject)newRow).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.OTHER_ELEMENT__ROW, null, msgs);
      msgs = basicSetRow(newRow, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.OTHER_ELEMENT__ROW, newRow, newRow));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Col getCol()
  {
    return col;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetCol(Col newCol, NotificationChain msgs)
  {
    Col oldCol = col;
    col = newCol;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.OTHER_ELEMENT__COL, oldCol, newCol);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCol(Col newCol)
  {
    if (newCol != col)
    {
      NotificationChain msgs = null;
      if (col != null)
        msgs = ((InternalEObject)col).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.OTHER_ELEMENT__COL, null, msgs);
      if (newCol != null)
        msgs = ((InternalEObject)newCol).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.OTHER_ELEMENT__COL, null, msgs);
      msgs = basicSetCol(newCol, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.OTHER_ELEMENT__COL, newCol, newCol));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Loop getLoop()
  {
    return loop;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLoop(Loop newLoop, NotificationChain msgs)
  {
    Loop oldLoop = loop;
    loop = newLoop;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.OTHER_ELEMENT__LOOP, oldLoop, newLoop);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLoop(Loop newLoop)
  {
    if (newLoop != loop)
    {
      NotificationChain msgs = null;
      if (loop != null)
        msgs = ((InternalEObject)loop).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.OTHER_ELEMENT__LOOP, null, msgs);
      if (newLoop != null)
        msgs = ((InternalEObject)newLoop).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.OTHER_ELEMENT__LOOP, null, msgs);
      msgs = basicSetLoop(newLoop, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.OTHER_ELEMENT__LOOP, newLoop, newLoop));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Conditional getConditional()
  {
    return conditional;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConditional(Conditional newConditional, NotificationChain msgs)
  {
    Conditional oldConditional = conditional;
    conditional = newConditional;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.OTHER_ELEMENT__CONDITIONAL, oldConditional, newConditional);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConditional(Conditional newConditional)
  {
    if (newConditional != conditional)
    {
      NotificationChain msgs = null;
      if (conditional != null)
        msgs = ((InternalEObject)conditional).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.OTHER_ELEMENT__CONDITIONAL, null, msgs);
      if (newConditional != null)
        msgs = ((InternalEObject)newConditional).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.OTHER_ELEMENT__CONDITIONAL, null, msgs);
      msgs = basicSetConditional(newConditional, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.OTHER_ELEMENT__CONDITIONAL, newConditional, newConditional));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.OTHER_ELEMENT__PAGE:
        return basicSetPage(null, msgs);
      case MyDslPackage.OTHER_ELEMENT__ROW:
        return basicSetRow(null, msgs);
      case MyDslPackage.OTHER_ELEMENT__COL:
        return basicSetCol(null, msgs);
      case MyDslPackage.OTHER_ELEMENT__LOOP:
        return basicSetLoop(null, msgs);
      case MyDslPackage.OTHER_ELEMENT__CONDITIONAL:
        return basicSetConditional(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.OTHER_ELEMENT__PAGE:
        return getPage();
      case MyDslPackage.OTHER_ELEMENT__ROW:
        return getRow();
      case MyDslPackage.OTHER_ELEMENT__COL:
        return getCol();
      case MyDslPackage.OTHER_ELEMENT__LOOP:
        return getLoop();
      case MyDslPackage.OTHER_ELEMENT__CONDITIONAL:
        return getConditional();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.OTHER_ELEMENT__PAGE:
        setPage((Page)newValue);
        return;
      case MyDslPackage.OTHER_ELEMENT__ROW:
        setRow((Row)newValue);
        return;
      case MyDslPackage.OTHER_ELEMENT__COL:
        setCol((Col)newValue);
        return;
      case MyDslPackage.OTHER_ELEMENT__LOOP:
        setLoop((Loop)newValue);
        return;
      case MyDslPackage.OTHER_ELEMENT__CONDITIONAL:
        setConditional((Conditional)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.OTHER_ELEMENT__PAGE:
        setPage((Page)null);
        return;
      case MyDslPackage.OTHER_ELEMENT__ROW:
        setRow((Row)null);
        return;
      case MyDslPackage.OTHER_ELEMENT__COL:
        setCol((Col)null);
        return;
      case MyDslPackage.OTHER_ELEMENT__LOOP:
        setLoop((Loop)null);
        return;
      case MyDslPackage.OTHER_ELEMENT__CONDITIONAL:
        setConditional((Conditional)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.OTHER_ELEMENT__PAGE:
        return page != null;
      case MyDslPackage.OTHER_ELEMENT__ROW:
        return row != null;
      case MyDslPackage.OTHER_ELEMENT__COL:
        return col != null;
      case MyDslPackage.OTHER_ELEMENT__LOOP:
        return loop != null;
      case MyDslPackage.OTHER_ELEMENT__CONDITIONAL:
        return conditional != null;
    }
    return super.eIsSet(featureID);
  }

} //OtherElementImpl
