/**
 * generated by Xtext 2.35.0-SNAPSHOT
 */
package org.xtext.example.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.myDsl.Condition1;
import org.xtext.example.myDsl.MyDslPackage;
import org.xtext.example.myDsl.Part;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Condition1</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.myDsl.impl.Condition1Impl#getFirstPart <em>First Part</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.Condition1Impl#getCompare <em>Compare</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.Condition1Impl#getSecondPart <em>Second Part</em>}</li>
 * </ul>
 *
 * @generated
 */
public class Condition1Impl extends MinimalEObjectImpl.Container implements Condition1
{
  /**
   * The cached value of the '{@link #getFirstPart() <em>First Part</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFirstPart()
   * @generated
   * @ordered
   */
  protected Part firstPart;

  /**
   * The default value of the '{@link #getCompare() <em>Compare</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCompare()
   * @generated
   * @ordered
   */
  protected static final String COMPARE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCompare() <em>Compare</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCompare()
   * @generated
   * @ordered
   */
  protected String compare = COMPARE_EDEFAULT;

  /**
   * The cached value of the '{@link #getSecondPart() <em>Second Part</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSecondPart()
   * @generated
   * @ordered
   */
  protected Part secondPart;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected Condition1Impl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.CONDITION1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Part getFirstPart()
  {
    return firstPart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFirstPart(Part newFirstPart, NotificationChain msgs)
  {
    Part oldFirstPart = firstPart;
    firstPart = newFirstPart;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.CONDITION1__FIRST_PART, oldFirstPart, newFirstPart);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFirstPart(Part newFirstPart)
  {
    if (newFirstPart != firstPart)
    {
      NotificationChain msgs = null;
      if (firstPart != null)
        msgs = ((InternalEObject)firstPart).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.CONDITION1__FIRST_PART, null, msgs);
      if (newFirstPart != null)
        msgs = ((InternalEObject)newFirstPart).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.CONDITION1__FIRST_PART, null, msgs);
      msgs = basicSetFirstPart(newFirstPart, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.CONDITION1__FIRST_PART, newFirstPart, newFirstPart));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCompare()
  {
    return compare;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCompare(String newCompare)
  {
    String oldCompare = compare;
    compare = newCompare;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.CONDITION1__COMPARE, oldCompare, compare));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Part getSecondPart()
  {
    return secondPart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSecondPart(Part newSecondPart, NotificationChain msgs)
  {
    Part oldSecondPart = secondPart;
    secondPart = newSecondPart;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.CONDITION1__SECOND_PART, oldSecondPart, newSecondPart);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSecondPart(Part newSecondPart)
  {
    if (newSecondPart != secondPart)
    {
      NotificationChain msgs = null;
      if (secondPart != null)
        msgs = ((InternalEObject)secondPart).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.CONDITION1__SECOND_PART, null, msgs);
      if (newSecondPart != null)
        msgs = ((InternalEObject)newSecondPart).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.CONDITION1__SECOND_PART, null, msgs);
      msgs = basicSetSecondPart(newSecondPart, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.CONDITION1__SECOND_PART, newSecondPart, newSecondPart));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.CONDITION1__FIRST_PART:
        return basicSetFirstPart(null, msgs);
      case MyDslPackage.CONDITION1__SECOND_PART:
        return basicSetSecondPart(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.CONDITION1__FIRST_PART:
        return getFirstPart();
      case MyDslPackage.CONDITION1__COMPARE:
        return getCompare();
      case MyDslPackage.CONDITION1__SECOND_PART:
        return getSecondPart();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.CONDITION1__FIRST_PART:
        setFirstPart((Part)newValue);
        return;
      case MyDslPackage.CONDITION1__COMPARE:
        setCompare((String)newValue);
        return;
      case MyDslPackage.CONDITION1__SECOND_PART:
        setSecondPart((Part)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.CONDITION1__FIRST_PART:
        setFirstPart((Part)null);
        return;
      case MyDslPackage.CONDITION1__COMPARE:
        setCompare(COMPARE_EDEFAULT);
        return;
      case MyDslPackage.CONDITION1__SECOND_PART:
        setSecondPart((Part)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.CONDITION1__FIRST_PART:
        return firstPart != null;
      case MyDslPackage.CONDITION1__COMPARE:
        return COMPARE_EDEFAULT == null ? compare != null : !COMPARE_EDEFAULT.equals(compare);
      case MyDslPackage.CONDITION1__SECOND_PART:
        return secondPart != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (compare: ");
    result.append(compare);
    result.append(')');
    return result.toString();
  }

} //Condition1Impl
