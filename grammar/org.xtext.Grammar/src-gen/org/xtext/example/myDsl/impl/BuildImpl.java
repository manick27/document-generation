/**
 * generated by Xtext 2.35.0-SNAPSHOT
 */
package org.xtext.example.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.myDsl.Build;
import org.xtext.example.myDsl.ElementBuild;
import org.xtext.example.myDsl.ExtensionList;
import org.xtext.example.myDsl.MyDslPackage;
import org.xtext.example.myDsl.Variable;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Build</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.myDsl.impl.BuildImpl#getVariable <em>Variable</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.BuildImpl#getExtensions <em>Extensions</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.BuildImpl#getAllInOne <em>All In One</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.BuildImpl#getTrueV <em>True V</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.BuildImpl#getFalseF <em>False F</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.BuildImpl#getElementBuild <em>Element Build</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BuildImpl extends MinimalEObjectImpl.Container implements Build
{
  /**
   * The cached value of the '{@link #getVariable() <em>Variable</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariable()
   * @generated
   * @ordered
   */
  protected Variable variable;

  /**
   * The cached value of the '{@link #getExtensions() <em>Extensions</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExtensions()
   * @generated
   * @ordered
   */
  protected ExtensionList extensions;

  /**
   * The default value of the '{@link #getAllInOne() <em>All In One</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAllInOne()
   * @generated
   * @ordered
   */
  protected static final String ALL_IN_ONE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAllInOne() <em>All In One</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAllInOne()
   * @generated
   * @ordered
   */
  protected String allInOne = ALL_IN_ONE_EDEFAULT;

  /**
   * The default value of the '{@link #getTrueV() <em>True V</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrueV()
   * @generated
   * @ordered
   */
  protected static final String TRUE_V_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTrueV() <em>True V</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrueV()
   * @generated
   * @ordered
   */
  protected String trueV = TRUE_V_EDEFAULT;

  /**
   * The default value of the '{@link #getFalseF() <em>False F</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFalseF()
   * @generated
   * @ordered
   */
  protected static final String FALSE_F_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getFalseF() <em>False F</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFalseF()
   * @generated
   * @ordered
   */
  protected String falseF = FALSE_F_EDEFAULT;

  /**
   * The cached value of the '{@link #getElementBuild() <em>Element Build</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElementBuild()
   * @generated
   * @ordered
   */
  protected EList<ElementBuild> elementBuild;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BuildImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.BUILD;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Variable getVariable()
  {
    return variable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVariable(Variable newVariable, NotificationChain msgs)
  {
    Variable oldVariable = variable;
    variable = newVariable;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.BUILD__VARIABLE, oldVariable, newVariable);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVariable(Variable newVariable)
  {
    if (newVariable != variable)
    {
      NotificationChain msgs = null;
      if (variable != null)
        msgs = ((InternalEObject)variable).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.BUILD__VARIABLE, null, msgs);
      if (newVariable != null)
        msgs = ((InternalEObject)newVariable).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.BUILD__VARIABLE, null, msgs);
      msgs = basicSetVariable(newVariable, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.BUILD__VARIABLE, newVariable, newVariable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ExtensionList getExtensions()
  {
    return extensions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExtensions(ExtensionList newExtensions, NotificationChain msgs)
  {
    ExtensionList oldExtensions = extensions;
    extensions = newExtensions;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.BUILD__EXTENSIONS, oldExtensions, newExtensions);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExtensions(ExtensionList newExtensions)
  {
    if (newExtensions != extensions)
    {
      NotificationChain msgs = null;
      if (extensions != null)
        msgs = ((InternalEObject)extensions).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.BUILD__EXTENSIONS, null, msgs);
      if (newExtensions != null)
        msgs = ((InternalEObject)newExtensions).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.BUILD__EXTENSIONS, null, msgs);
      msgs = basicSetExtensions(newExtensions, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.BUILD__EXTENSIONS, newExtensions, newExtensions));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAllInOne()
  {
    return allInOne;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAllInOne(String newAllInOne)
  {
    String oldAllInOne = allInOne;
    allInOne = newAllInOne;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.BUILD__ALL_IN_ONE, oldAllInOne, allInOne));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTrueV()
  {
    return trueV;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTrueV(String newTrueV)
  {
    String oldTrueV = trueV;
    trueV = newTrueV;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.BUILD__TRUE_V, oldTrueV, trueV));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getFalseF()
  {
    return falseF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFalseF(String newFalseF)
  {
    String oldFalseF = falseF;
    falseF = newFalseF;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.BUILD__FALSE_F, oldFalseF, falseF));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<ElementBuild> getElementBuild()
  {
    if (elementBuild == null)
    {
      elementBuild = new EObjectContainmentEList<ElementBuild>(ElementBuild.class, this, MyDslPackage.BUILD__ELEMENT_BUILD);
    }
    return elementBuild;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.BUILD__VARIABLE:
        return basicSetVariable(null, msgs);
      case MyDslPackage.BUILD__EXTENSIONS:
        return basicSetExtensions(null, msgs);
      case MyDslPackage.BUILD__ELEMENT_BUILD:
        return ((InternalEList<?>)getElementBuild()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.BUILD__VARIABLE:
        return getVariable();
      case MyDslPackage.BUILD__EXTENSIONS:
        return getExtensions();
      case MyDslPackage.BUILD__ALL_IN_ONE:
        return getAllInOne();
      case MyDslPackage.BUILD__TRUE_V:
        return getTrueV();
      case MyDslPackage.BUILD__FALSE_F:
        return getFalseF();
      case MyDslPackage.BUILD__ELEMENT_BUILD:
        return getElementBuild();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.BUILD__VARIABLE:
        setVariable((Variable)newValue);
        return;
      case MyDslPackage.BUILD__EXTENSIONS:
        setExtensions((ExtensionList)newValue);
        return;
      case MyDslPackage.BUILD__ALL_IN_ONE:
        setAllInOne((String)newValue);
        return;
      case MyDslPackage.BUILD__TRUE_V:
        setTrueV((String)newValue);
        return;
      case MyDslPackage.BUILD__FALSE_F:
        setFalseF((String)newValue);
        return;
      case MyDslPackage.BUILD__ELEMENT_BUILD:
        getElementBuild().clear();
        getElementBuild().addAll((Collection<? extends ElementBuild>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.BUILD__VARIABLE:
        setVariable((Variable)null);
        return;
      case MyDslPackage.BUILD__EXTENSIONS:
        setExtensions((ExtensionList)null);
        return;
      case MyDslPackage.BUILD__ALL_IN_ONE:
        setAllInOne(ALL_IN_ONE_EDEFAULT);
        return;
      case MyDslPackage.BUILD__TRUE_V:
        setTrueV(TRUE_V_EDEFAULT);
        return;
      case MyDslPackage.BUILD__FALSE_F:
        setFalseF(FALSE_F_EDEFAULT);
        return;
      case MyDslPackage.BUILD__ELEMENT_BUILD:
        getElementBuild().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.BUILD__VARIABLE:
        return variable != null;
      case MyDslPackage.BUILD__EXTENSIONS:
        return extensions != null;
      case MyDslPackage.BUILD__ALL_IN_ONE:
        return ALL_IN_ONE_EDEFAULT == null ? allInOne != null : !ALL_IN_ONE_EDEFAULT.equals(allInOne);
      case MyDslPackage.BUILD__TRUE_V:
        return TRUE_V_EDEFAULT == null ? trueV != null : !TRUE_V_EDEFAULT.equals(trueV);
      case MyDslPackage.BUILD__FALSE_F:
        return FALSE_F_EDEFAULT == null ? falseF != null : !FALSE_F_EDEFAULT.equals(falseF);
      case MyDslPackage.BUILD__ELEMENT_BUILD:
        return elementBuild != null && !elementBuild.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (allInOne: ");
    result.append(allInOne);
    result.append(", trueV: ");
    result.append(trueV);
    result.append(", falseF: ");
    result.append(falseF);
    result.append(')');
    return result.toString();
  }

} //BuildImpl
