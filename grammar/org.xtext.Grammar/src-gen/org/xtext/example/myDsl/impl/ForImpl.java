/**
 * generated by Xtext 2.35.0-SNAPSHOT
 */
package org.xtext.example.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.myDsl.For;
import org.xtext.example.myDsl.MyDslPackage;
import org.xtext.example.myDsl.ObjectC;
import org.xtext.example.myDsl.OtherElement;
import org.xtext.example.myDsl.Variable;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>For</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.myDsl.impl.ForImpl#getIncrement <em>Increment</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.ForImpl#getInitWithVariable <em>Init With Variable</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.ForImpl#getInitWithInteger <em>Init With Integer</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.ForImpl#getEndWithVariable <em>End With Variable</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.ForImpl#getObjectC <em>Object C</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.ForImpl#getEndWithInteger <em>End With Integer</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.ForImpl#getOtherElement <em>Other Element</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ForImpl extends MinimalEObjectImpl.Container implements For
{
  /**
   * The cached value of the '{@link #getIncrement() <em>Increment</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIncrement()
   * @generated
   * @ordered
   */
  protected Variable increment;

  /**
   * The cached value of the '{@link #getInitWithVariable() <em>Init With Variable</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitWithVariable()
   * @generated
   * @ordered
   */
  protected Variable initWithVariable;

  /**
   * The default value of the '{@link #getInitWithInteger() <em>Init With Integer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitWithInteger()
   * @generated
   * @ordered
   */
  protected static final int INIT_WITH_INTEGER_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getInitWithInteger() <em>Init With Integer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getInitWithInteger()
   * @generated
   * @ordered
   */
  protected int initWithInteger = INIT_WITH_INTEGER_EDEFAULT;

  /**
   * The cached value of the '{@link #getEndWithVariable() <em>End With Variable</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEndWithVariable()
   * @generated
   * @ordered
   */
  protected Variable endWithVariable;

  /**
   * The cached value of the '{@link #getObjectC() <em>Object C</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjectC()
   * @generated
   * @ordered
   */
  protected ObjectC objectC;

  /**
   * The default value of the '{@link #getEndWithInteger() <em>End With Integer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEndWithInteger()
   * @generated
   * @ordered
   */
  protected static final int END_WITH_INTEGER_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getEndWithInteger() <em>End With Integer</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEndWithInteger()
   * @generated
   * @ordered
   */
  protected int endWithInteger = END_WITH_INTEGER_EDEFAULT;

  /**
   * The cached value of the '{@link #getOtherElement() <em>Other Element</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOtherElement()
   * @generated
   * @ordered
   */
  protected EList<OtherElement> otherElement;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ForImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.FOR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Variable getIncrement()
  {
    return increment;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIncrement(Variable newIncrement, NotificationChain msgs)
  {
    Variable oldIncrement = increment;
    increment = newIncrement;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR__INCREMENT, oldIncrement, newIncrement);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIncrement(Variable newIncrement)
  {
    if (newIncrement != increment)
    {
      NotificationChain msgs = null;
      if (increment != null)
        msgs = ((InternalEObject)increment).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.FOR__INCREMENT, null, msgs);
      if (newIncrement != null)
        msgs = ((InternalEObject)newIncrement).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.FOR__INCREMENT, null, msgs);
      msgs = basicSetIncrement(newIncrement, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR__INCREMENT, newIncrement, newIncrement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Variable getInitWithVariable()
  {
    return initWithVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetInitWithVariable(Variable newInitWithVariable, NotificationChain msgs)
  {
    Variable oldInitWithVariable = initWithVariable;
    initWithVariable = newInitWithVariable;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR__INIT_WITH_VARIABLE, oldInitWithVariable, newInitWithVariable);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInitWithVariable(Variable newInitWithVariable)
  {
    if (newInitWithVariable != initWithVariable)
    {
      NotificationChain msgs = null;
      if (initWithVariable != null)
        msgs = ((InternalEObject)initWithVariable).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.FOR__INIT_WITH_VARIABLE, null, msgs);
      if (newInitWithVariable != null)
        msgs = ((InternalEObject)newInitWithVariable).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.FOR__INIT_WITH_VARIABLE, null, msgs);
      msgs = basicSetInitWithVariable(newInitWithVariable, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR__INIT_WITH_VARIABLE, newInitWithVariable, newInitWithVariable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getInitWithInteger()
  {
    return initWithInteger;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setInitWithInteger(int newInitWithInteger)
  {
    int oldInitWithInteger = initWithInteger;
    initWithInteger = newInitWithInteger;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR__INIT_WITH_INTEGER, oldInitWithInteger, initWithInteger));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Variable getEndWithVariable()
  {
    return endWithVariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEndWithVariable(Variable newEndWithVariable, NotificationChain msgs)
  {
    Variable oldEndWithVariable = endWithVariable;
    endWithVariable = newEndWithVariable;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR__END_WITH_VARIABLE, oldEndWithVariable, newEndWithVariable);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEndWithVariable(Variable newEndWithVariable)
  {
    if (newEndWithVariable != endWithVariable)
    {
      NotificationChain msgs = null;
      if (endWithVariable != null)
        msgs = ((InternalEObject)endWithVariable).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.FOR__END_WITH_VARIABLE, null, msgs);
      if (newEndWithVariable != null)
        msgs = ((InternalEObject)newEndWithVariable).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.FOR__END_WITH_VARIABLE, null, msgs);
      msgs = basicSetEndWithVariable(newEndWithVariable, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR__END_WITH_VARIABLE, newEndWithVariable, newEndWithVariable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ObjectC getObjectC()
  {
    return objectC;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetObjectC(ObjectC newObjectC, NotificationChain msgs)
  {
    ObjectC oldObjectC = objectC;
    objectC = newObjectC;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR__OBJECT_C, oldObjectC, newObjectC);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setObjectC(ObjectC newObjectC)
  {
    if (newObjectC != objectC)
    {
      NotificationChain msgs = null;
      if (objectC != null)
        msgs = ((InternalEObject)objectC).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.FOR__OBJECT_C, null, msgs);
      if (newObjectC != null)
        msgs = ((InternalEObject)newObjectC).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.FOR__OBJECT_C, null, msgs);
      msgs = basicSetObjectC(newObjectC, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR__OBJECT_C, newObjectC, newObjectC));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getEndWithInteger()
  {
    return endWithInteger;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEndWithInteger(int newEndWithInteger)
  {
    int oldEndWithInteger = endWithInteger;
    endWithInteger = newEndWithInteger;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.FOR__END_WITH_INTEGER, oldEndWithInteger, endWithInteger));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<OtherElement> getOtherElement()
  {
    if (otherElement == null)
    {
      otherElement = new EObjectContainmentEList<OtherElement>(OtherElement.class, this, MyDslPackage.FOR__OTHER_ELEMENT);
    }
    return otherElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.FOR__INCREMENT:
        return basicSetIncrement(null, msgs);
      case MyDslPackage.FOR__INIT_WITH_VARIABLE:
        return basicSetInitWithVariable(null, msgs);
      case MyDslPackage.FOR__END_WITH_VARIABLE:
        return basicSetEndWithVariable(null, msgs);
      case MyDslPackage.FOR__OBJECT_C:
        return basicSetObjectC(null, msgs);
      case MyDslPackage.FOR__OTHER_ELEMENT:
        return ((InternalEList<?>)getOtherElement()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.FOR__INCREMENT:
        return getIncrement();
      case MyDslPackage.FOR__INIT_WITH_VARIABLE:
        return getInitWithVariable();
      case MyDslPackage.FOR__INIT_WITH_INTEGER:
        return getInitWithInteger();
      case MyDslPackage.FOR__END_WITH_VARIABLE:
        return getEndWithVariable();
      case MyDslPackage.FOR__OBJECT_C:
        return getObjectC();
      case MyDslPackage.FOR__END_WITH_INTEGER:
        return getEndWithInteger();
      case MyDslPackage.FOR__OTHER_ELEMENT:
        return getOtherElement();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.FOR__INCREMENT:
        setIncrement((Variable)newValue);
        return;
      case MyDslPackage.FOR__INIT_WITH_VARIABLE:
        setInitWithVariable((Variable)newValue);
        return;
      case MyDslPackage.FOR__INIT_WITH_INTEGER:
        setInitWithInteger((Integer)newValue);
        return;
      case MyDslPackage.FOR__END_WITH_VARIABLE:
        setEndWithVariable((Variable)newValue);
        return;
      case MyDslPackage.FOR__OBJECT_C:
        setObjectC((ObjectC)newValue);
        return;
      case MyDslPackage.FOR__END_WITH_INTEGER:
        setEndWithInteger((Integer)newValue);
        return;
      case MyDslPackage.FOR__OTHER_ELEMENT:
        getOtherElement().clear();
        getOtherElement().addAll((Collection<? extends OtherElement>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.FOR__INCREMENT:
        setIncrement((Variable)null);
        return;
      case MyDslPackage.FOR__INIT_WITH_VARIABLE:
        setInitWithVariable((Variable)null);
        return;
      case MyDslPackage.FOR__INIT_WITH_INTEGER:
        setInitWithInteger(INIT_WITH_INTEGER_EDEFAULT);
        return;
      case MyDslPackage.FOR__END_WITH_VARIABLE:
        setEndWithVariable((Variable)null);
        return;
      case MyDslPackage.FOR__OBJECT_C:
        setObjectC((ObjectC)null);
        return;
      case MyDslPackage.FOR__END_WITH_INTEGER:
        setEndWithInteger(END_WITH_INTEGER_EDEFAULT);
        return;
      case MyDslPackage.FOR__OTHER_ELEMENT:
        getOtherElement().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.FOR__INCREMENT:
        return increment != null;
      case MyDslPackage.FOR__INIT_WITH_VARIABLE:
        return initWithVariable != null;
      case MyDslPackage.FOR__INIT_WITH_INTEGER:
        return initWithInteger != INIT_WITH_INTEGER_EDEFAULT;
      case MyDslPackage.FOR__END_WITH_VARIABLE:
        return endWithVariable != null;
      case MyDslPackage.FOR__OBJECT_C:
        return objectC != null;
      case MyDslPackage.FOR__END_WITH_INTEGER:
        return endWithInteger != END_WITH_INTEGER_EDEFAULT;
      case MyDslPackage.FOR__OTHER_ELEMENT:
        return otherElement != null && !otherElement.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (initWithInteger: ");
    result.append(initWithInteger);
    result.append(", endWithInteger: ");
    result.append(endWithInteger);
    result.append(')');
    return result.toString();
  }

} //ForImpl
