/**
 * generated by Xtext 2.35.0-SNAPSHOT
 */
package org.xtext.example.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.myDsl.BigTitle;
import org.xtext.example.myDsl.MyDslPackage;
import org.xtext.example.myDsl.SubSubTitle;
import org.xtext.example.myDsl.SubTitle;
import org.xtext.example.myDsl.Title;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Title</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.myDsl.impl.TitleImpl#getBigTitle <em>Big Title</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.TitleImpl#getSubTitle <em>Sub Title</em>}</li>
 *   <li>{@link org.xtext.example.myDsl.impl.TitleImpl#getSubSubTitle <em>Sub Sub Title</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TitleImpl extends MinimalEObjectImpl.Container implements Title
{
  /**
   * The cached value of the '{@link #getBigTitle() <em>Big Title</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBigTitle()
   * @generated
   * @ordered
   */
  protected BigTitle bigTitle;

  /**
   * The cached value of the '{@link #getSubTitle() <em>Sub Title</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubTitle()
   * @generated
   * @ordered
   */
  protected SubTitle subTitle;

  /**
   * The cached value of the '{@link #getSubSubTitle() <em>Sub Sub Title</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubSubTitle()
   * @generated
   * @ordered
   */
  protected SubSubTitle subSubTitle;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TitleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.TITLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BigTitle getBigTitle()
  {
    return bigTitle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBigTitle(BigTitle newBigTitle, NotificationChain msgs)
  {
    BigTitle oldBigTitle = bigTitle;
    bigTitle = newBigTitle;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TITLE__BIG_TITLE, oldBigTitle, newBigTitle);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBigTitle(BigTitle newBigTitle)
  {
    if (newBigTitle != bigTitle)
    {
      NotificationChain msgs = null;
      if (bigTitle != null)
        msgs = ((InternalEObject)bigTitle).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TITLE__BIG_TITLE, null, msgs);
      if (newBigTitle != null)
        msgs = ((InternalEObject)newBigTitle).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TITLE__BIG_TITLE, null, msgs);
      msgs = basicSetBigTitle(newBigTitle, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TITLE__BIG_TITLE, newBigTitle, newBigTitle));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SubTitle getSubTitle()
  {
    return subTitle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSubTitle(SubTitle newSubTitle, NotificationChain msgs)
  {
    SubTitle oldSubTitle = subTitle;
    subTitle = newSubTitle;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TITLE__SUB_TITLE, oldSubTitle, newSubTitle);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSubTitle(SubTitle newSubTitle)
  {
    if (newSubTitle != subTitle)
    {
      NotificationChain msgs = null;
      if (subTitle != null)
        msgs = ((InternalEObject)subTitle).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TITLE__SUB_TITLE, null, msgs);
      if (newSubTitle != null)
        msgs = ((InternalEObject)newSubTitle).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TITLE__SUB_TITLE, null, msgs);
      msgs = basicSetSubTitle(newSubTitle, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TITLE__SUB_TITLE, newSubTitle, newSubTitle));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SubSubTitle getSubSubTitle()
  {
    return subSubTitle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSubSubTitle(SubSubTitle newSubSubTitle, NotificationChain msgs)
  {
    SubSubTitle oldSubSubTitle = subSubTitle;
    subSubTitle = newSubSubTitle;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MyDslPackage.TITLE__SUB_SUB_TITLE, oldSubSubTitle, newSubSubTitle);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSubSubTitle(SubSubTitle newSubSubTitle)
  {
    if (newSubSubTitle != subSubTitle)
    {
      NotificationChain msgs = null;
      if (subSubTitle != null)
        msgs = ((InternalEObject)subSubTitle).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TITLE__SUB_SUB_TITLE, null, msgs);
      if (newSubSubTitle != null)
        msgs = ((InternalEObject)newSubSubTitle).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MyDslPackage.TITLE__SUB_SUB_TITLE, null, msgs);
      msgs = basicSetSubSubTitle(newSubSubTitle, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.TITLE__SUB_SUB_TITLE, newSubSubTitle, newSubSubTitle));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.TITLE__BIG_TITLE:
        return basicSetBigTitle(null, msgs);
      case MyDslPackage.TITLE__SUB_TITLE:
        return basicSetSubTitle(null, msgs);
      case MyDslPackage.TITLE__SUB_SUB_TITLE:
        return basicSetSubSubTitle(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.TITLE__BIG_TITLE:
        return getBigTitle();
      case MyDslPackage.TITLE__SUB_TITLE:
        return getSubTitle();
      case MyDslPackage.TITLE__SUB_SUB_TITLE:
        return getSubSubTitle();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.TITLE__BIG_TITLE:
        setBigTitle((BigTitle)newValue);
        return;
      case MyDslPackage.TITLE__SUB_TITLE:
        setSubTitle((SubTitle)newValue);
        return;
      case MyDslPackage.TITLE__SUB_SUB_TITLE:
        setSubSubTitle((SubSubTitle)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.TITLE__BIG_TITLE:
        setBigTitle((BigTitle)null);
        return;
      case MyDslPackage.TITLE__SUB_TITLE:
        setSubTitle((SubTitle)null);
        return;
      case MyDslPackage.TITLE__SUB_SUB_TITLE:
        setSubSubTitle((SubSubTitle)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.TITLE__BIG_TITLE:
        return bigTitle != null;
      case MyDslPackage.TITLE__SUB_TITLE:
        return subTitle != null;
      case MyDslPackage.TITLE__SUB_SUB_TITLE:
        return subSubTitle != null;
    }
    return super.eIsSet(featureID);
  }

} //TitleImpl
