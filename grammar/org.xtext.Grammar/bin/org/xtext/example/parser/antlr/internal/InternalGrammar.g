/*
 * generated by Xtext 2.35.0-SNAPSHOT
 */
grammar InternalGrammar;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.services.GrammarGrammarAccess;

}

@parser::members {

 	private GrammarGrammarAccess grammarAccess;

    public InternalGrammarParser(TokenStream input, GrammarGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected GrammarGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getDocumentDocumentParserRuleCall_0());
			}
			lv_document_0_0=ruleDocument
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"document",
					lv_document_0_0,
					"org.xtext.example.Grammar.Document");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleDocument
entryRuleDocument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDocumentRule()); }
	iv_ruleDocument=ruleDocument
	{ $current=$iv_ruleDocument.current; }
	EOF;

// Rule Document
ruleDocument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDocumentAccess().getDataDataParserRuleCall_0_0());
				}
				lv_data_0_0=ruleData
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDocumentRule());
					}
					set(
						$current,
						"data",
						lv_data_0_0,
						"org.xtext.example.Grammar.Data");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDocumentAccess().getBuildBuildParserRuleCall_1_0());
				}
				lv_build_1_0=ruleBuild
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDocumentRule());
					}
					set(
						$current,
						"build",
						lv_build_1_0,
						"org.xtext.example.Grammar.Build");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDocumentAccess().getStyleStyleParserRuleCall_2_0());
				}
				lv_style_2_0=ruleStyle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDocumentRule());
					}
					set(
						$current,
						"style",
						lv_style_2_0,
						"org.xtext.example.Grammar.Style");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleData
entryRuleData returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDataRule()); }
	iv_ruleData=ruleData
	{ $current=$iv_ruleData.current; }
	EOF;

// Rule Data
ruleData returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='data'
		{
			newLeafNode(otherlv_0, grammarAccess.getDataAccess().getDataKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getDataAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDataAccess().getKeyValueKeyValueParserRuleCall_2_0_0());
					}
					lv_keyValue_2_0=ruleKeyValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDataRule());
						}
						add(
							$current,
							"keyValue",
							lv_keyValue_2_0,
							"org.xtext.example.Grammar.KeyValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getDataAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDataAccess().getKeyValueKeyValueParserRuleCall_2_1_1_0());
						}
						lv_keyValue_4_0=ruleKeyValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDataRule());
							}
							add(
								$current,
								"keyValue",
								lv_keyValue_4_0,
								"org.xtext.example.Grammar.KeyValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getDataAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleKeyValue
entryRuleKeyValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeyValueRule()); }
	iv_ruleKeyValue=ruleKeyValue
	{ $current=$iv_ruleKeyValue.current; }
	EOF;

// Rule KeyValue
ruleKeyValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_string_0_0=RULE_STRING
				{
					newLeafNode(lv_string_0_0, grammarAccess.getKeyValueAccess().getStringSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getKeyValueRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_0_0,
						"org.xtext.example.Grammar.STRING");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getKeyValueAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKeyValueAccess().getValueValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKeyValueRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"org.xtext.example.Grammar.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_string_0_0=RULE_STRING
				{
					newLeafNode(lv_string_0_0, grammarAccess.getValueAccess().getStringSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_0_0,
						"org.xtext.example.Grammar.STRING");
				}
			)
		)
		    |
		(
			(
				lv_integer_1_0=RULE_INT
				{
					newLeafNode(lv_integer_1_0, grammarAccess.getValueAccess().getIntegerINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getValueRule());
					}
					setWithLastConsumed(
						$current,
						"integer",
						lv_integer_1_0,
						"org.xtext.example.Grammar.INT");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getFloatValueFloatParserRuleCall_2_0());
				}
				lv_floatValue_2_0=ruleFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"floatValue",
						lv_floatValue_2_0,
						"org.xtext.example.Grammar.Float");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getTrueVTRUEParserRuleCall_3_0());
				}
				lv_trueV_3_0=ruleTRUE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"trueV",
						lv_trueV_3_0,
						"org.xtext.example.Grammar.TRUE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getFalseVFALSEParserRuleCall_4_0());
				}
				lv_falseV_4_0=ruleFALSE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"falseV",
						lv_falseV_4_0,
						"org.xtext.example.Grammar.FALSE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getArrayArrayParserRuleCall_5_0());
				}
				lv_array_5_0=ruleArray
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"array",
						lv_array_5_0,
						"org.xtext.example.Grammar.Array");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getNestedObjectNestedObjectParserRuleCall_6_0());
				}
				lv_nestedObject_6_0=ruleNestedObject
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"nestedObject",
						lv_nestedObject_6_0,
						"org.xtext.example.Grammar.NestedObject");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getValueAccess().getVariableVariableParserRuleCall_7_0());
				}
				lv_variable_7_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueRule());
					}
					set(
						$current,
						"variable",
						lv_variable_7_0,
						"org.xtext.example.Grammar.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleArray
entryRuleArray returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayRule()); }
	iv_ruleArray=ruleArray
	{ $current=$iv_ruleArray.current; }
	EOF;

// Rule Array
ruleArray returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_1_0_0());
					}
					lv_values_1_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArrayRule());
						}
						add(
							$current,
							"values",
							lv_values_1_0,
							"org.xtext.example.Grammar.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getArrayAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_1_1_1_0());
						}
						lv_values_3_0=ruleValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArrayRule());
							}
							add(
								$current,
								"values",
								lv_values_3_0,
								"org.xtext.example.Grammar.Value");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getArrayAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleNestedObject
entryRuleNestedObject returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNestedObjectRule()); }
	iv_ruleNestedObject=ruleNestedObject
	{ $current=$iv_ruleNestedObject.current; }
	EOF;

// Rule NestedObject
ruleNestedObject returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='{'
		{
			newLeafNode(otherlv_0, grammarAccess.getNestedObjectAccess().getLeftCurlyBracketKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getNestedObjectAccess().getKeyValueKeyValueParserRuleCall_1_0_0());
					}
					lv_keyValue_1_0=ruleKeyValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNestedObjectRule());
						}
						add(
							$current,
							"keyValue",
							lv_keyValue_1_0,
							"org.xtext.example.Grammar.KeyValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_2=','
				{
					newLeafNode(otherlv_2, grammarAccess.getNestedObjectAccess().getCommaKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNestedObjectAccess().getKeyValueKeyValueParserRuleCall_1_1_1_0());
						}
						lv_keyValue_3_0=ruleKeyValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNestedObjectRule());
							}
							add(
								$current,
								"keyValue",
								lv_keyValue_3_0,
								"org.xtext.example.Grammar.KeyValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getNestedObjectAccess().getRightCurlyBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleBuild
entryRuleBuild returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBuildRule()); }
	iv_ruleBuild=ruleBuild
	{ $current=$iv_ruleBuild.current; }
	EOF;

// Rule Build
ruleBuild returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='document'
		{
			newLeafNode(otherlv_0, grammarAccess.getBuildAccess().getDocumentKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBuildAccess().getVariableVariableParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBuildRule());
					}
					set(
						$current,
						"variable",
						lv_variable_1_0,
						"org.xtext.example.Grammar.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					lv_allInOne_2_0='allInOne'
					{
						newLeafNode(lv_allInOne_2_0, grammarAccess.getBuildAccess().getAllInOneAllInOneKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBuildRule());
						}
						setWithLastConsumed($current, "allInOne", lv_allInOne_2_0, "allInOne");
					}
				)
			)
			otherlv_3='='
			{
				newLeafNode(otherlv_3, grammarAccess.getBuildAccess().getEqualsSignKeyword_2_1());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBuildAccess().getTrueVTRUEParserRuleCall_2_2_0_0());
						}
						lv_trueV_4_0=ruleTRUE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBuildRule());
							}
							set(
								$current,
								"trueV",
								lv_trueV_4_0,
								"org.xtext.example.Grammar.TRUE");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						{
							newCompositeNode(grammarAccess.getBuildAccess().getFalseFFALSEParserRuleCall_2_2_1_0());
						}
						lv_falseF_5_0=ruleFALSE
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBuildRule());
							}
							set(
								$current,
								"falseF",
								lv_falseF_5_0,
								"org.xtext.example.Grammar.FALSE");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getBuildAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBuildAccess().getElementBuildElementBuildParserRuleCall_4_0());
				}
				lv_elementBuild_7_0=ruleElementBuild
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBuildRule());
					}
					add(
						$current,
						"elementBuild",
						lv_elementBuild_7_0,
						"org.xtext.example.Grammar.ElementBuild");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getBuildAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleElementBuild
entryRuleElementBuild returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementBuildRule()); }
	iv_ruleElementBuild=ruleElementBuild
	{ $current=$iv_ruleElementBuild.current; }
	EOF;

// Rule ElementBuild
ruleElementBuild returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getElementBuildAccess().getVariableDVariableDParserRuleCall_0_0());
				}
				lv_variableD_0_0=ruleVariableD
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementBuildRule());
					}
					set(
						$current,
						"variableD",
						lv_variableD_0_0,
						"org.xtext.example.Grammar.VariableD");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementBuildAccess().getPagePageParserRuleCall_1_0());
				}
				lv_page_1_0=rulePage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementBuildRule());
					}
					set(
						$current,
						"page",
						lv_page_1_0,
						"org.xtext.example.Grammar.Page");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementBuildAccess().getLoopLoopParserRuleCall_2_0());
				}
				lv_loop_2_0=ruleLoop
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementBuildRule());
					}
					set(
						$current,
						"loop",
						lv_loop_2_0,
						"org.xtext.example.Grammar.Loop");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementBuildAccess().getConditionalConditionalParserRuleCall_3_0());
				}
				lv_conditional_3_0=ruleConditional
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementBuildRule());
					}
					set(
						$current,
						"conditional",
						lv_conditional_3_0,
						"org.xtext.example.Grammar.Conditional");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='$'
		{
			newLeafNode(otherlv_0, grammarAccess.getVariableAccess().getDollarSignKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.Grammar.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleSuperVariable
entryRuleSuperVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSuperVariableRule()); }
	iv_ruleSuperVariable=ruleSuperVariable
	{ $current=$iv_ruleSuperVariable.current; }
	EOF;

// Rule SuperVariable
ruleSuperVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getSuperVariableAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getSuperVariableRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.xtext.example.Grammar.ID");
			}
		)
	)
;

// Entry rule entryRuleVariableD
entryRuleVariableD returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableDRule()); }
	iv_ruleVariableD=ruleVariableD
	{ $current=$iv_ruleVariableD.current; }
	EOF;

// Rule VariableD
ruleVariableD returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableDAccess().getSuperVariableSuperVariableParserRuleCall_0_0());
				}
				lv_superVariable_0_0=ruleSuperVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableDRule());
					}
					set(
						$current,
						"superVariable",
						lv_superVariable_0_0,
						"org.xtext.example.Grammar.SuperVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getVariableDAccess().getEqualsSignKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableDAccess().getValueValueParserRuleCall_2_0_0());
					}
					lv_value_2_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableDRule());
						}
						set(
							$current,
							"value",
							lv_value_2_0,
							"org.xtext.example.Grammar.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableDAccess().getClassVariableClassVariableParserRuleCall_2_1_0());
					}
					lv_classVariable_3_0=ruleClassVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableDRule());
						}
						set(
							$current,
							"classVariable",
							lv_classVariable_3_0,
							"org.xtext.example.Grammar.ClassVariable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableDAccess().getFunctionFunctionParserRuleCall_2_2_0());
					}
					lv_function_4_0=ruleFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableDRule());
						}
						add(
							$current,
							"function",
							lv_function_4_0,
							"org.xtext.example.Grammar.Function");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulePage
entryRulePage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPageRule()); }
	iv_rulePage=rulePage
	{ $current=$iv_rulePage.current; }
	EOF;

// Rule Page
rulePage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='page'
		{
			newLeafNode(otherlv_0, grammarAccess.getPageAccess().getPageKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getPageAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPageAccess().getVariableVariableParserRuleCall_2_0_0_0());
						}
						lv_variable_2_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPageRule());
							}
							set(
								$current,
								"variable",
								lv_variable_2_0,
								"org.xtext.example.Grammar.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getPageAccess().getObjectCObjectCParserRuleCall_2_0_1_0());
						}
						lv_objectC_3_0=ruleObjectC
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPageRule());
							}
							set(
								$current,
								"objectC",
								lv_objectC_3_0,
								"org.xtext.example.Grammar.ObjectC");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getPageAccess().getArrayCArrayCParserRuleCall_2_0_2_0());
						}
						lv_arrayC_4_0=ruleArrayC
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPageRule());
							}
							set(
								$current,
								"arrayC",
								lv_arrayC_4_0,
								"org.xtext.example.Grammar.ArrayC");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
			    |
			(
				(
					lv_string_5_0=RULE_STRING
					{
						newLeafNode(lv_string_5_0, grammarAccess.getPageAccess().getStringSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPageRule());
						}
						setWithLastConsumed(
							$current,
							"string",
							lv_string_5_0,
							"org.xtext.example.Grammar.STRING");
					}
				)
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getPageAccess().getRightParenthesisKeyword_3());
		}
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getPageAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPageAccess().getTitlesTitleParserRuleCall_5_0());
				}
				lv_titles_8_0=ruleTitle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPageRule());
					}
					add(
						$current,
						"titles",
						lv_titles_8_0,
						"org.xtext.example.Grammar.Title");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPageAccess().getElementPageElementPageParserRuleCall_6_0());
				}
				lv_elementPage_9_0=ruleElementPage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPageRule());
					}
					add(
						$current,
						"elementPage",
						lv_elementPage_9_0,
						"org.xtext.example.Grammar.ElementPage");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getPageAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleElementPage
entryRuleElementPage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementPageRule()); }
	iv_ruleElementPage=ruleElementPage
	{ $current=$iv_ruleElementPage.current; }
	EOF;

// Rule ElementPage
ruleElementPage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getElementPageAccess().getRowRowParserRuleCall_0_0());
				}
				lv_row_0_0=ruleRow
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementPageRule());
					}
					set(
						$current,
						"row",
						lv_row_0_0,
						"org.xtext.example.Grammar.Row");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementPageAccess().getLoopLoopParserRuleCall_1_0());
				}
				lv_loop_1_0=ruleLoop
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementPageRule());
					}
					set(
						$current,
						"loop",
						lv_loop_1_0,
						"org.xtext.example.Grammar.Loop");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementPageAccess().getConditionalConditionalParserRuleCall_2_0());
				}
				lv_conditional_2_0=ruleConditional
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementPageRule());
					}
					set(
						$current,
						"conditional",
						lv_conditional_2_0,
						"org.xtext.example.Grammar.Conditional");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getElementPageAccess().getVariableVariableDParserRuleCall_3_0_0());
					}
					lv_variable_3_0=ruleVariableD
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElementPageRule());
						}
						set(
							$current,
							"variable",
							lv_variable_3_0,
							"org.xtext.example.Grammar.VariableD");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=';'
			{
				newLeafNode(otherlv_4, grammarAccess.getElementPageAccess().getSemicolonKeyword_3_1());
			}
		)
	)
;

// Entry rule entryRuleTitle
entryRuleTitle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTitleRule()); }
	iv_ruleTitle=ruleTitle
	{ $current=$iv_ruleTitle.current; }
	EOF;

// Rule Title
ruleTitle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getTitleAccess().getBigTitleBigTitleParserRuleCall_0_0());
				}
				lv_bigTitle_0_0=ruleBigTitle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTitleRule());
					}
					set(
						$current,
						"bigTitle",
						lv_bigTitle_0_0,
						"org.xtext.example.Grammar.BigTitle");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTitleAccess().getSubTitleSubTitleParserRuleCall_1_0());
				}
				lv_subTitle_1_0=ruleSubTitle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTitleRule());
					}
					set(
						$current,
						"subTitle",
						lv_subTitle_1_0,
						"org.xtext.example.Grammar.SubTitle");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getTitleAccess().getSubSubTitleSubSubTitleParserRuleCall_2_0());
				}
				lv_subSubTitle_2_0=ruleSubSubTitle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTitleRule());
					}
					set(
						$current,
						"subSubTitle",
						lv_subSubTitle_2_0,
						"org.xtext.example.Grammar.SubSubTitle");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBigTitle
entryRuleBigTitle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBigTitleRule()); }
	iv_ruleBigTitle=ruleBigTitle
	{ $current=$iv_ruleBigTitle.current; }
	EOF;

// Rule BigTitle
ruleBigTitle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='title'
		{
			newLeafNode(otherlv_0, grammarAccess.getBigTitleAccess().getTitleKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getBigTitleAccess().getColonKeyword_1());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getBigTitleAccess().getVariableVariableParserRuleCall_2_0_0_0());
						}
						lv_variable_2_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBigTitleRule());
							}
							set(
								$current,
								"variable",
								lv_variable_2_0,
								"org.xtext.example.Grammar.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getBigTitleAccess().getObjectCObjectCParserRuleCall_2_0_1_0());
						}
						lv_objectC_3_0=ruleObjectC
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBigTitleRule());
							}
							set(
								$current,
								"objectC",
								lv_objectC_3_0,
								"org.xtext.example.Grammar.ObjectC");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getBigTitleAccess().getArrayCArrayCParserRuleCall_2_0_2_0());
						}
						lv_arrayC_4_0=ruleArrayC
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBigTitleRule());
							}
							set(
								$current,
								"arrayC",
								lv_arrayC_4_0,
								"org.xtext.example.Grammar.ArrayC");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
			    |
			(
				(
					lv_string_5_0=RULE_STRING
					{
						newLeafNode(lv_string_5_0, grammarAccess.getBigTitleAccess().getStringSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBigTitleRule());
						}
						setWithLastConsumed(
							$current,
							"string",
							lv_string_5_0,
							"org.xtext.example.Grammar.STRING");
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBigTitleAccess().getClassDClassDParserRuleCall_3_0());
				}
				lv_classD_6_0=ruleClassD
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBigTitleRule());
					}
					set(
						$current,
						"classD",
						lv_classD_6_0,
						"org.xtext.example.Grammar.ClassD");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSubTitle
entryRuleSubTitle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubTitleRule()); }
	iv_ruleSubTitle=ruleSubTitle
	{ $current=$iv_ruleSubTitle.current; }
	EOF;

// Rule SubTitle
ruleSubTitle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='subtitle'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubTitleAccess().getSubtitleKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSubTitleAccess().getColonKeyword_1());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSubTitleAccess().getVariableVariableParserRuleCall_2_0_0_0());
						}
						lv_variable_2_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSubTitleRule());
							}
							set(
								$current,
								"variable",
								lv_variable_2_0,
								"org.xtext.example.Grammar.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSubTitleAccess().getObjectCObjectCParserRuleCall_2_0_1_0());
						}
						lv_objectC_3_0=ruleObjectC
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSubTitleRule());
							}
							set(
								$current,
								"objectC",
								lv_objectC_3_0,
								"org.xtext.example.Grammar.ObjectC");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getSubTitleAccess().getArrayCArrayCParserRuleCall_2_0_2_0());
						}
						lv_arrayC_4_0=ruleArrayC
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSubTitleRule());
							}
							set(
								$current,
								"arrayC",
								lv_arrayC_4_0,
								"org.xtext.example.Grammar.ArrayC");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
			    |
			(
				(
					lv_string_5_0=RULE_STRING
					{
						newLeafNode(lv_string_5_0, grammarAccess.getSubTitleAccess().getStringSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSubTitleRule());
						}
						setWithLastConsumed(
							$current,
							"string",
							lv_string_5_0,
							"org.xtext.example.Grammar.STRING");
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSubTitleAccess().getClassDClassDParserRuleCall_3_0());
				}
				lv_classD_6_0=ruleClassD
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubTitleRule());
					}
					set(
						$current,
						"classD",
						lv_classD_6_0,
						"org.xtext.example.Grammar.ClassD");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSubSubTitle
entryRuleSubSubTitle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubSubTitleRule()); }
	iv_ruleSubSubTitle=ruleSubSubTitle
	{ $current=$iv_ruleSubSubTitle.current; }
	EOF;

// Rule SubSubTitle
ruleSubSubTitle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='subsubtitle'
		{
			newLeafNode(otherlv_0, grammarAccess.getSubSubTitleAccess().getSubsubtitleKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSubSubTitleAccess().getColonKeyword_1());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSubSubTitleAccess().getVariableVariableParserRuleCall_2_0_0_0());
						}
						lv_variable_2_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSubSubTitleRule());
							}
							set(
								$current,
								"variable",
								lv_variable_2_0,
								"org.xtext.example.Grammar.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getSubSubTitleAccess().getObjectCObjectCParserRuleCall_2_0_1_0());
						}
						lv_objectC_3_0=ruleObjectC
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSubSubTitleRule());
							}
							set(
								$current,
								"objectC",
								lv_objectC_3_0,
								"org.xtext.example.Grammar.ObjectC");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getSubSubTitleAccess().getArrayCArrayCParserRuleCall_2_0_2_0());
						}
						lv_arrayC_4_0=ruleArrayC
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSubSubTitleRule());
							}
							set(
								$current,
								"arrayC",
								lv_arrayC_4_0,
								"org.xtext.example.Grammar.ArrayC");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
			    |
			(
				(
					lv_string_5_0=RULE_STRING
					{
						newLeafNode(lv_string_5_0, grammarAccess.getSubSubTitleAccess().getStringSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSubSubTitleRule());
						}
						setWithLastConsumed(
							$current,
							"string",
							lv_string_5_0,
							"org.xtext.example.Grammar.STRING");
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSubSubTitleAccess().getClassDClassDParserRuleCall_3_0());
				}
				lv_classD_6_0=ruleClassD
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubSubTitleRule());
					}
					set(
						$current,
						"classD",
						lv_classD_6_0,
						"org.xtext.example.Grammar.ClassD");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRow
entryRuleRow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRowRule()); }
	iv_ruleRow=ruleRow
	{ $current=$iv_ruleRow.current; }
	EOF;

// Rule Row
ruleRow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='row'
		{
			newLeafNode(otherlv_0, grammarAccess.getRowAccess().getRowKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRowAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRowAccess().getElementRowElementRowParserRuleCall_2_0());
				}
				lv_elementRow_2_0=ruleElementRow
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRowRule());
					}
					add(
						$current,
						"elementRow",
						lv_elementRow_2_0,
						"org.xtext.example.Grammar.ElementRow");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getRowAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleElementRow
entryRuleElementRow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRowRule()); }
	iv_ruleElementRow=ruleElementRow
	{ $current=$iv_ruleElementRow.current; }
	EOF;

// Rule ElementRow
ruleElementRow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getElementRowAccess().getVariableVariableParserRuleCall_0_0());
				}
				lv_variable_0_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRowRule());
					}
					set(
						$current,
						"variable",
						lv_variable_0_0,
						"org.xtext.example.Grammar.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementRowAccess().getVariableDVariableDParserRuleCall_1_0());
				}
				lv_variableD_1_0=ruleVariableD
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRowRule());
					}
					set(
						$current,
						"variableD",
						lv_variableD_1_0,
						"org.xtext.example.Grammar.VariableD");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementRowAccess().getColColParserRuleCall_2_0());
				}
				lv_col_2_0=ruleCol
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRowRule());
					}
					set(
						$current,
						"col",
						lv_col_2_0,
						"org.xtext.example.Grammar.Col");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementRowAccess().getConditionalConditionalParserRuleCall_3_0());
				}
				lv_conditional_3_0=ruleConditional
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRowRule());
					}
					set(
						$current,
						"conditional",
						lv_conditional_3_0,
						"org.xtext.example.Grammar.Conditional");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getElementRowAccess().getLoopLoopParserRuleCall_4_0());
				}
				lv_loop_4_0=ruleLoop
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementRowRule());
					}
					set(
						$current,
						"loop",
						lv_loop_4_0,
						"org.xtext.example.Grammar.Loop");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCol
entryRuleCol returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColRule()); }
	iv_ruleCol=ruleCol
	{ $current=$iv_ruleCol.current; }
	EOF;

// Rule Col
ruleCol returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='col'
		{
			newLeafNode(otherlv_0, grammarAccess.getColAccess().getColKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColAccess().getFusionFusionParserRuleCall_1_0());
				}
				lv_fusion_1_0=ruleFusion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColRule());
					}
					set(
						$current,
						"fusion",
						lv_fusion_1_0,
						"org.xtext.example.Grammar.Fusion");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getColAccess().getImgImgParserRuleCall_2_0_0());
					}
					lv_img_2_0=ruleImg
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColRule());
						}
						set(
							$current,
							"img",
							lv_img_2_0,
							"org.xtext.example.Grammar.Img");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getColAccess().getVariableVariableParserRuleCall_2_1_0_0());
						}
						lv_variable_3_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getColRule());
							}
							set(
								$current,
								"variable",
								lv_variable_3_0,
								"org.xtext.example.Grammar.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getColAccess().getObjectCObjectCParserRuleCall_2_1_1_0());
						}
						lv_objectC_4_0=ruleObjectC
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getColRule());
							}
							set(
								$current,
								"objectC",
								lv_objectC_4_0,
								"org.xtext.example.Grammar.ObjectC");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getColAccess().getArrayCArrayCParserRuleCall_2_1_2_0());
						}
						lv_arrayC_5_0=ruleArrayC
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getColRule());
							}
							set(
								$current,
								"arrayC",
								lv_arrayC_5_0,
								"org.xtext.example.Grammar.ArrayC");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getColAccess().getVariableDVariableDParserRuleCall_2_2_0());
					}
					lv_variableD_6_0=ruleVariableD
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColRule());
						}
						set(
							$current,
							"variableD",
							lv_variableD_6_0,
							"org.xtext.example.Grammar.VariableD");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_string_7_0=RULE_STRING
					{
						newLeafNode(lv_string_7_0, grammarAccess.getColAccess().getStringSTRINGTerminalRuleCall_2_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getColRule());
						}
						setWithLastConsumed(
							$current,
							"string",
							lv_string_7_0,
							"org.xtext.example.Grammar.STRING");
					}
				)
			)
			    |
			(
				(
					lv_integer_8_0=RULE_INT
					{
						newLeafNode(lv_integer_8_0, grammarAccess.getColAccess().getIntegerINTTerminalRuleCall_2_4_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getColRule());
						}
						setWithLastConsumed(
							$current,
							"integer",
							lv_integer_8_0,
							"org.xtext.example.Grammar.INT");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getColAccess().getFloatValueFloatParserRuleCall_2_5_0());
					}
					lv_floatValue_9_0=ruleFloat
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColRule());
						}
						set(
							$current,
							"floatValue",
							lv_floatValue_9_0,
							"org.xtext.example.Grammar.Float");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getColAccess().getFunctionFunctionParserRuleCall_2_6_0());
					}
					lv_function_10_0=ruleFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColRule());
						}
						set(
							$current,
							"function",
							lv_function_10_0,
							"org.xtext.example.Grammar.Function");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getColAccess().getClassDClassDParserRuleCall_3_0());
				}
				lv_classD_11_0=ruleClassD
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColRule());
					}
					set(
						$current,
						"classD",
						lv_classD_11_0,
						"org.xtext.example.Grammar.ClassD");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleArrayC
entryRuleArrayC returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArrayCRule()); }
	iv_ruleArrayC=ruleArrayC
	{ $current=$iv_ruleArrayC.current; }
	EOF;

// Rule ArrayC
ruleArrayC returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getArrayCAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getArrayCAccess().getPositionPositionParserRuleCall_1_0());
				}
				lv_position_1_0=rulePosition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArrayCRule());
					}
					set(
						$current,
						"position",
						lv_position_1_0,
						"org.xtext.example.Grammar.Position");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getArrayCAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRulePosition
entryRulePosition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPositionRule()); }
	iv_rulePosition=rulePosition
	{ $current=$iv_rulePosition.current; }
	EOF;

// Rule Position
rulePosition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_integer_0_0=RULE_INT
				{
					newLeafNode(lv_integer_0_0, grammarAccess.getPositionAccess().getIntegerINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPositionRule());
					}
					setWithLastConsumed(
						$current,
						"integer",
						lv_integer_0_0,
						"org.xtext.example.Grammar.INT");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getPositionAccess().getVariableVariableParserRuleCall_1_0());
				}
				lv_variable_1_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPositionRule());
					}
					set(
						$current,
						"variable",
						lv_variable_1_0,
						"org.xtext.example.Grammar.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleObjectC
entryRuleObjectC returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectCRule()); }
	iv_ruleObjectC=ruleObjectC
	{ $current=$iv_ruleObjectC.current; }
	EOF;

// Rule ObjectC
ruleObjectC returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.'
		{
			newLeafNode(otherlv_0, grammarAccess.getObjectCAccess().getFullStopKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getObjectCAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getObjectCRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.Grammar.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleImg
entryRuleImg returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImgRule()); }
	iv_ruleImg=ruleImg
	{ $current=$iv_ruleImg.current; }
	EOF;

// Rule Img
ruleImg returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='img'
		{
			newLeafNode(otherlv_0, grammarAccess.getImgAccess().getImgKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImgAccess().getClassDClassDParserRuleCall_1_0());
				}
				lv_classD_1_0=ruleClassD
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImgRule());
					}
					set(
						$current,
						"classD",
						lv_classD_1_0,
						"org.xtext.example.Grammar.ClassD");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='src'
		{
			newLeafNode(otherlv_2, grammarAccess.getImgAccess().getSrcKeyword_2());
		}
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getImgAccess().getColonKeyword_3());
		}
		(
			(
				(
					lv_string_4_0=RULE_STRING
					{
						newLeafNode(lv_string_4_0, grammarAccess.getImgAccess().getStringSTRINGTerminalRuleCall_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImgRule());
						}
						setWithLastConsumed(
							$current,
							"string",
							lv_string_4_0,
							"org.xtext.example.Grammar.STRING");
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getImgAccess().getVariableVariableParserRuleCall_4_1_0_0());
						}
						lv_variable_5_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImgRule());
							}
							set(
								$current,
								"variable",
								lv_variable_5_0,
								"org.xtext.example.Grammar.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getImgAccess().getObjectCObjectCParserRuleCall_4_1_1_0());
						}
						lv_objectC_6_0=ruleObjectC
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImgRule());
							}
							set(
								$current,
								"objectC",
								lv_objectC_6_0,
								"org.xtext.example.Grammar.ObjectC");
							afterParserOrEnumRuleCall();
						}
					)
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getImgAccess().getArrayCArrayCParserRuleCall_4_1_2_0());
						}
						lv_arrayC_7_0=ruleArrayC
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImgRule());
							}
							set(
								$current,
								"arrayC",
								lv_arrayC_7_0,
								"org.xtext.example.Grammar.ArrayC");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
		)
		(
			otherlv_8='alt'
			{
				newLeafNode(otherlv_8, grammarAccess.getImgAccess().getAltKeyword_5_0());
			}
			otherlv_9=':'
			{
				newLeafNode(otherlv_9, grammarAccess.getImgAccess().getColonKeyword_5_1());
			}
			(
				(
					lv_stringAlt_10_0=RULE_STRING
					{
						newLeafNode(lv_stringAlt_10_0, grammarAccess.getImgAccess().getStringAltSTRINGTerminalRuleCall_5_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImgRule());
						}
						setWithLastConsumed(
							$current,
							"stringAlt",
							lv_stringAlt_10_0,
							"org.xtext.example.Grammar.STRING");
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleClassD
entryRuleClassD returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassDRule()); }
	iv_ruleClassD=ruleClassD
	{ $current=$iv_ruleClassD.current; }
	EOF;

// Rule ClassD
ruleClassD returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='class'
		{
			newLeafNode(otherlv_0, grammarAccess.getClassDAccess().getClassKeyword_0());
		}
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getClassDAccess().getEqualsSignKeyword_1());
		}
		(
			(
				lv_string_2_0=RULE_STRING
				{
					newLeafNode(lv_string_2_0, grammarAccess.getClassDAccess().getStringSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassDRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_2_0,
						"org.xtext.example.Grammar.STRING");
				}
			)
		)
	)?
;

// Entry rule entryRuleFusion
entryRuleFusion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFusionRule()); }
	iv_ruleFusion=ruleFusion
	{ $current=$iv_ruleFusion.current; }
	EOF;

// Rule Fusion
ruleFusion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFusionAccess().getColspanColspanParserRuleCall_0_0());
				}
				lv_colspan_0_0=ruleColspan
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFusionRule());
					}
					set(
						$current,
						"colspan",
						lv_colspan_0_0,
						"org.xtext.example.Grammar.Colspan");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getFusionAccess().getRowspanRowspanParserRuleCall_1_0());
				}
				lv_rowspan_1_0=ruleRowspan
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFusionRule());
					}
					set(
						$current,
						"rowspan",
						lv_rowspan_1_0,
						"org.xtext.example.Grammar.Rowspan");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)?
;

// Entry rule entryRuleColspan
entryRuleColspan returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColspanRule()); }
	iv_ruleColspan=ruleColspan
	{ $current=$iv_ruleColspan.current; }
	EOF;

// Rule Colspan
ruleColspan returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='colspan'
		{
			newLeafNode(otherlv_0, grammarAccess.getColspanAccess().getColspanKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getColspanAccess().getColonKeyword_1());
		}
		(
			(
				(
					lv_integer_2_0=RULE_INT
					{
						newLeafNode(lv_integer_2_0, grammarAccess.getColspanAccess().getIntegerINTTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getColspanRule());
						}
						setWithLastConsumed(
							$current,
							"integer",
							lv_integer_2_0,
							"org.xtext.example.Grammar.INT");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getColspanAccess().getVariableVariableParserRuleCall_2_1_0());
					}
					lv_variable_3_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColspanRule());
						}
						set(
							$current,
							"variable",
							lv_variable_3_0,
							"org.xtext.example.Grammar.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleRowspan
entryRuleRowspan returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRowspanRule()); }
	iv_ruleRowspan=ruleRowspan
	{ $current=$iv_ruleRowspan.current; }
	EOF;

// Rule Rowspan
ruleRowspan returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='rowspan'
		{
			newLeafNode(otherlv_0, grammarAccess.getRowspanAccess().getRowspanKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getRowspanAccess().getColonKeyword_1());
		}
		(
			(
				(
					lv_integer_2_0=RULE_INT
					{
						newLeafNode(lv_integer_2_0, grammarAccess.getRowspanAccess().getIntegerINTTerminalRuleCall_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRowspanRule());
						}
						setWithLastConsumed(
							$current,
							"integer",
							lv_integer_2_0,
							"org.xtext.example.Grammar.INT");
					}
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getRowspanAccess().getVariableVariableParserRuleCall_2_1_0());
					}
					lv_variable_3_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRowspanRule());
						}
						set(
							$current,
							"variable",
							lv_variable_3_0,
							"org.xtext.example.Grammar.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getSumFunctionSumFunctionParserRuleCall_0_0());
				}
				lv_sumFunction_0_0=ruleSumFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"sumFunction",
						lv_sumFunction_0_0,
						"org.xtext.example.Grammar.SumFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getProdFunctionProdFunctionParserRuleCall_1_0());
				}
				lv_prodFunction_1_0=ruleProdFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"prodFunction",
						lv_prodFunction_1_0,
						"org.xtext.example.Grammar.ProdFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getDivFunctionDivFunctionParserRuleCall_2_0());
				}
				lv_divFunction_2_0=ruleDivFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"divFunction",
						lv_divFunction_2_0,
						"org.xtext.example.Grammar.DivFunction");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSumFunction
entryRuleSumFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSumFunctionRule()); }
	iv_ruleSumFunction=ruleSumFunction
	{ $current=$iv_ruleSumFunction.current; }
	EOF;

// Rule SumFunction
ruleSumFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='SUM'
		{
			newLeafNode(otherlv_0, grammarAccess.getSumFunctionAccess().getSUMKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getSumFunctionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSumFunctionAccess().getArgument1Argument1ParserRuleCall_2_0_0_0());
						}
						lv_argument1_2_0=ruleArgument1
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSumFunctionRule());
							}
							add(
								$current,
								"argument1",
								lv_argument1_2_0,
								"org.xtext.example.Grammar.Argument1");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getSumFunctionAccess().getCommaKeyword_2_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSumFunctionAccess().getArgument1Argument1ParserRuleCall_2_0_1_1_0());
							}
							lv_argument1_4_0=ruleArgument1
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSumFunctionRule());
								}
								add(
									$current,
									"argument1",
									lv_argument1_4_0,
									"org.xtext.example.Grammar.Argument1");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			    |
			(
				otherlv_5='['
				{
					newLeafNode(otherlv_5, grammarAccess.getSumFunctionAccess().getLeftSquareBracketKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSumFunctionAccess().getArgument2Argument2ParserRuleCall_2_1_1_0());
						}
						lv_argument2_6_0=ruleArgument2
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSumFunctionRule());
							}
							add(
								$current,
								"argument2",
								lv_argument2_6_0,
								"org.xtext.example.Grammar.Argument2");
							afterParserOrEnumRuleCall();
						}
					)
				)+
				otherlv_7=']'
				{
					newLeafNode(otherlv_7, grammarAccess.getSumFunctionAccess().getRightSquareBracketKeyword_2_1_2());
				}
			)
		)
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getSumFunctionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleProdFunction
entryRuleProdFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProdFunctionRule()); }
	iv_ruleProdFunction=ruleProdFunction
	{ $current=$iv_ruleProdFunction.current; }
	EOF;

// Rule ProdFunction
ruleProdFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='PROD'
		{
			newLeafNode(otherlv_0, grammarAccess.getProdFunctionAccess().getPRODKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getProdFunctionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getProdFunctionAccess().getArgument1Argument1ParserRuleCall_2_0_0_0());
						}
						lv_argument1_2_0=ruleArgument1
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProdFunctionRule());
							}
							add(
								$current,
								"argument1",
								lv_argument1_2_0,
								"org.xtext.example.Grammar.Argument1");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getProdFunctionAccess().getCommaKeyword_2_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getProdFunctionAccess().getArgument1Argument1ParserRuleCall_2_0_1_1_0());
							}
							lv_argument1_4_0=ruleArgument1
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getProdFunctionRule());
								}
								add(
									$current,
									"argument1",
									lv_argument1_4_0,
									"org.xtext.example.Grammar.Argument1");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			    |
			(
				otherlv_5='['
				{
					newLeafNode(otherlv_5, grammarAccess.getProdFunctionAccess().getLeftSquareBracketKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getProdFunctionAccess().getArgument2Argument2ParserRuleCall_2_1_1_0());
						}
						lv_argument2_6_0=ruleArgument2
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProdFunctionRule());
							}
							add(
								$current,
								"argument2",
								lv_argument2_6_0,
								"org.xtext.example.Grammar.Argument2");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_7=']'
				{
					newLeafNode(otherlv_7, grammarAccess.getProdFunctionAccess().getRightSquareBracketKeyword_2_1_2());
				}
			)
		)
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getProdFunctionAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleDivFunction
entryRuleDivFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDivFunctionRule()); }
	iv_ruleDivFunction=ruleDivFunction
	{ $current=$iv_ruleDivFunction.current; }
	EOF;

// Rule DivFunction
ruleDivFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='DIV'
		{
			newLeafNode(otherlv_0, grammarAccess.getDivFunctionAccess().getDIVKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getDivFunctionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDivFunctionAccess().getArgument1Argument1ParserRuleCall_2_0());
				}
				lv_argument1_2_0=ruleArgument1
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDivFunctionRule());
					}
					add(
						$current,
						"argument1",
						lv_argument1_2_0,
						"org.xtext.example.Grammar.Argument1");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getDivFunctionAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDivFunctionAccess().getArgument1Argument1ParserRuleCall_4_0());
				}
				lv_argument1_4_0=ruleArgument1
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDivFunctionRule());
					}
					add(
						$current,
						"argument1",
						lv_argument1_4_0,
						"org.xtext.example.Grammar.Argument1");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getDivFunctionAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleArgument1
entryRuleArgument1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgument1Rule()); }
	iv_ruleArgument1=ruleArgument1
	{ $current=$iv_ruleArgument1.current; }
	EOF;

// Rule Argument1
ruleArgument1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_integer_0_0=RULE_INT
				{
					newLeafNode(lv_integer_0_0, grammarAccess.getArgument1Access().getIntegerINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArgument1Rule());
					}
					setWithLastConsumed(
						$current,
						"integer",
						lv_integer_0_0,
						"org.xtext.example.Grammar.INT");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getArgument1Access().getFloatValueFloatParserRuleCall_1_0());
				}
				lv_floatValue_1_0=ruleFloat
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgument1Rule());
					}
					set(
						$current,
						"floatValue",
						lv_floatValue_1_0,
						"org.xtext.example.Grammar.Float");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				lv_string_2_0=RULE_STRING
				{
					newLeafNode(lv_string_2_0, grammarAccess.getArgument1Access().getStringSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getArgument1Rule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_2_0,
						"org.xtext.example.Grammar.STRING");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getArgument1Access().getClassVariableClassVariableParserRuleCall_3_0());
				}
				lv_classVariable_3_0=ruleClassVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArgument1Rule());
					}
					set(
						$current,
						"classVariable",
						lv_classVariable_3_0,
						"org.xtext.example.Grammar.ClassVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArgument1Access().getVariableVariableParserRuleCall_4_0_0());
					}
					lv_variable_4_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgument1Rule());
						}
						set(
							$current,
							"variable",
							lv_variable_4_0,
							"org.xtext.example.Grammar.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getArgument1Access().getObjectCObjectCParserRuleCall_4_1_0());
					}
					lv_objectC_5_0=ruleObjectC
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgument1Rule());
						}
						set(
							$current,
							"objectC",
							lv_objectC_5_0,
							"org.xtext.example.Grammar.ObjectC");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getArgument1Access().getArrayCArrayCParserRuleCall_4_2_0());
					}
					lv_arrayC_6_0=ruleArrayC
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgument1Rule());
						}
						set(
							$current,
							"arrayC",
							lv_arrayC_6_0,
							"org.xtext.example.Grammar.ArrayC");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
	)
;

// Entry rule entryRuleArgument2
entryRuleArgument2 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgument2Rule()); }
	iv_ruleArgument2=ruleArgument2
	{ $current=$iv_ruleArgument2.current; }
	EOF;

// Rule Argument2
ruleArgument2 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArgument2Access().getVariableVariableParserRuleCall_0_0_0());
					}
					lv_variable_0_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgument2Rule());
						}
						add(
							$current,
							"variable",
							lv_variable_0_0,
							"org.xtext.example.Grammar.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_integer_1_0=RULE_INT
					{
						newLeafNode(lv_integer_1_0, grammarAccess.getArgument2Access().getIntegerINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArgument2Rule());
						}
						setWithLastConsumed(
							$current,
							"integer",
							lv_integer_1_0,
							"org.xtext.example.Grammar.INT");
					}
				)
			)
		)
		(
			(
				otherlv_2='-'
				{
					newLeafNode(otherlv_2, grammarAccess.getArgument2Access().getHyphenMinusKeyword_1_0_0());
				}
				    |
				otherlv_3='+'
				{
					newLeafNode(otherlv_3, grammarAccess.getArgument2Access().getPlusSignKeyword_1_0_1());
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getArgument2Access().getVariableVariableParserRuleCall_1_1_0_0());
						}
						lv_variable_4_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArgument2Rule());
							}
							add(
								$current,
								"variable",
								lv_variable_4_0,
								"org.xtext.example.Grammar.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						lv_integerEnd1_5_0=RULE_INT
						{
							newLeafNode(lv_integerEnd1_5_0, grammarAccess.getArgument2Access().getIntegerEnd1INTTerminalRuleCall_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getArgument2Rule());
							}
							setWithLastConsumed(
								$current,
								"integerEnd1",
								lv_integerEnd1_5_0,
								"org.xtext.example.Grammar.INT");
						}
					)
				)
			)
		)?
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getArgument2Access().getCommaKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getArgument2Access().getVariableVariableParserRuleCall_3_0_0());
					}
					lv_variable_7_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getArgument2Rule());
						}
						add(
							$current,
							"variable",
							lv_variable_7_0,
							"org.xtext.example.Grammar.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_integerEnd2_8_0=RULE_INT
					{
						newLeafNode(lv_integerEnd2_8_0, grammarAccess.getArgument2Access().getIntegerEnd2INTTerminalRuleCall_3_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getArgument2Rule());
						}
						setWithLastConsumed(
							$current,
							"integerEnd2",
							lv_integerEnd2_8_0,
							"org.xtext.example.Grammar.INT");
					}
				)
			)
		)
		(
			(
				otherlv_9='-'
				{
					newLeafNode(otherlv_9, grammarAccess.getArgument2Access().getHyphenMinusKeyword_4_0_0());
				}
				    |
				otherlv_10='+'
				{
					newLeafNode(otherlv_10, grammarAccess.getArgument2Access().getPlusSignKeyword_4_0_1());
				}
			)
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getArgument2Access().getVariableVariableParserRuleCall_4_1_0_0());
						}
						lv_variable_11_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getArgument2Rule());
							}
							add(
								$current,
								"variable",
								lv_variable_11_0,
								"org.xtext.example.Grammar.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				(
					(
						lv_integerEnd3_12_0=RULE_INT
						{
							newLeafNode(lv_integerEnd3_12_0, grammarAccess.getArgument2Access().getIntegerEnd3INTTerminalRuleCall_4_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getArgument2Rule());
							}
							setWithLastConsumed(
								$current,
								"integerEnd3",
								lv_integerEnd3_12_0,
								"org.xtext.example.Grammar.INT");
						}
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleClassVariable
entryRuleClassVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassVariableRule()); }
	iv_ruleClassVariable=ruleClassVariable
	{ $current=$iv_ruleClassVariable.current; }
	EOF;

// Rule ClassVariable
ruleClassVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.'
		{
			newLeafNode(otherlv_0, grammarAccess.getClassVariableAccess().getFullStopKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getClassVariableAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassVariableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.Grammar.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleConditional
entryRuleConditional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionalRule()); }
	iv_ruleConditional=ruleConditional
	{ $current=$iv_ruleConditional.current; }
	EOF;

// Rule Conditional
ruleConditional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalAccess().getIfConditionIfConditionParserRuleCall_0_0());
				}
				lv_ifCondition_0_0=ruleIfCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalRule());
					}
					set(
						$current,
						"ifCondition",
						lv_ifCondition_0_0,
						"org.xtext.example.Grammar.IfCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConditionalAccess().getElseCondionElseConditionParserRuleCall_1_0());
				}
				lv_elseCondion_1_0=ruleElseCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConditionalRule());
					}
					add(
						$current,
						"elseCondion",
						lv_elseCondion_1_0,
						"org.xtext.example.Grammar.ElseCondition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleIfCondition
entryRuleIfCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfConditionRule()); }
	iv_ruleIfCondition=ruleIfCondition
	{ $current=$iv_ruleIfCondition.current; }
	EOF;

// Rule IfCondition
ruleIfCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfConditionAccess().getIfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIfConditionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfConditionAccess().getConditionCondition1ParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleCondition1
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfConditionRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"org.xtext.example.Grammar.Condition1");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfConditionAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='then'
		{
			newLeafNode(otherlv_4, grammarAccess.getIfConditionAccess().getThenKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getIfConditionAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfConditionAccess().getOtherElementOtherElementParserRuleCall_6_0());
				}
				lv_otherElement_6_0=ruleOtherElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfConditionRule());
					}
					add(
						$current,
						"otherElement",
						lv_otherElement_6_0,
						"org.xtext.example.Grammar.OtherElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getIfConditionAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleElseCondition
entryRuleElseCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElseConditionRule()); }
	iv_ruleElseCondition=ruleElseCondition
	{ $current=$iv_ruleElseCondition.current; }
	EOF;

// Rule ElseCondition
ruleElseCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='else'
		{
			newLeafNode(otherlv_0, grammarAccess.getElseConditionAccess().getElseKeyword_0());
		}
		(
			(
				otherlv_1='{'
				{
					newLeafNode(otherlv_1, grammarAccess.getElseConditionAccess().getLeftCurlyBracketKeyword_1_0_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getElseConditionAccess().getOtherElementOtherElementParserRuleCall_1_0_1_0());
						}
						lv_OtherElement_2_0=ruleOtherElement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getElseConditionRule());
							}
							add(
								$current,
								"OtherElement",
								lv_OtherElement_2_0,
								"org.xtext.example.Grammar.OtherElement");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3='}'
				{
					newLeafNode(otherlv_3, grammarAccess.getElseConditionAccess().getRightCurlyBracketKeyword_1_0_2());
				}
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getElseConditionAccess().getIfConditionIfConditionParserRuleCall_1_1_0());
					}
					lv_ifCondition_4_0=ruleIfCondition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getElseConditionRule());
						}
						set(
							$current,
							"ifCondition",
							lv_ifCondition_4_0,
							"org.xtext.example.Grammar.IfCondition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleCondition1
entryRuleCondition1 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCondition1Rule()); }
	iv_ruleCondition1=ruleCondition1
	{ $current=$iv_ruleCondition1.current; }
	EOF;

// Rule Condition1
ruleCondition1 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getCondition1Access().getFirstPartPartParserRuleCall_0_0());
				}
				lv_firstPart_0_0=rulePart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCondition1Rule());
					}
					set(
						$current,
						"firstPart",
						lv_firstPart_0_0,
						"org.xtext.example.Grammar.Part");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCondition1Access().getCompareCompareParserRuleCall_1_0());
				}
				lv_compare_1_0=ruleCompare
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCondition1Rule());
					}
					set(
						$current,
						"compare",
						lv_compare_1_0,
						"org.xtext.example.Grammar.Compare");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCondition1Access().getSecondPartPartParserRuleCall_2_0());
				}
				lv_secondPart_2_0=rulePart
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCondition1Rule());
					}
					set(
						$current,
						"secondPart",
						lv_secondPart_2_0,
						"org.xtext.example.Grammar.Part");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePart
entryRulePart returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPartRule()); }
	iv_rulePart=rulePart
	{ $current=$iv_rulePart.current; }
	EOF;

// Rule Part
rulePart returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPartAccess().getVariableVariableParserRuleCall_0_0_0());
					}
					lv_variable_0_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPartRule());
						}
						set(
							$current,
							"variable",
							lv_variable_0_0,
							"org.xtext.example.Grammar.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPartAccess().getObjectCObjectCParserRuleCall_0_1_0());
					}
					lv_objectC_1_0=ruleObjectC
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPartRule());
						}
						set(
							$current,
							"objectC",
							lv_objectC_1_0,
							"org.xtext.example.Grammar.ObjectC");
						afterParserOrEnumRuleCall();
					}
				)
			)?
			(
				(
					{
						newCompositeNode(grammarAccess.getPartAccess().getArrayCArrayCParserRuleCall_0_2_0());
					}
					lv_arrayC_2_0=ruleArrayC
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPartRule());
						}
						set(
							$current,
							"arrayC",
							lv_arrayC_2_0,
							"org.xtext.example.Grammar.ArrayC");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)
		    |
		(
			(
				lv_string_3_0=RULE_STRING
				{
					newLeafNode(lv_string_3_0, grammarAccess.getPartAccess().getStringSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPartRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_3_0,
						"org.xtext.example.Grammar.STRING");
				}
			)
		)
		    |
		(
			(
				lv_integer_4_0=RULE_INT
				{
					newLeafNode(lv_integer_4_0, grammarAccess.getPartAccess().getIntegerINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPartRule());
					}
					setWithLastConsumed(
						$current,
						"integer",
						lv_integer_4_0,
						"org.xtext.example.Grammar.INT");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getPartAccess().getSuperVariableSuperVariableParserRuleCall_3_0());
				}
				lv_superVariable_5_0=ruleSuperVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPartRule());
					}
					set(
						$current,
						"superVariable",
						lv_superVariable_5_0,
						"org.xtext.example.Grammar.SuperVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getPartAccess().getClassVariableClassVariableParserRuleCall_4_0());
				}
				lv_classVariable_6_0=ruleClassVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPartRule());
					}
					set(
						$current,
						"classVariable",
						lv_classVariable_6_0,
						"org.xtext.example.Grammar.ClassVariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCompare
entryRuleCompare returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCompareRule()); }
	iv_ruleCompare=ruleCompare
	{ $current=$iv_ruleCompare.current.getText(); }
	EOF;

// Rule Compare
ruleCompare returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCompareAccess().getEqualsSignEqualsSignKeyword_0());
		}
		    |
		kw='!='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCompareAccess().getExclamationMarkEqualsSignKeyword_1());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCompareAccess().getLessThanSignKeyword_2());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getCompareAccess().getGreaterThanSignKeyword_3());
		}
	)
;

// Entry rule entryRuleLoop
entryRuleLoop returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoopRule()); }
	iv_ruleLoop=ruleLoop
	{ $current=$iv_ruleLoop.current; }
	EOF;

// Rule Loop
ruleLoop returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopAccess().getWithLoopWithParserRuleCall_0_0());
				}
				lv_withLoop_0_0=ruleWith
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopRule());
					}
					set(
						$current,
						"withLoop",
						lv_withLoop_0_0,
						"org.xtext.example.Grammar.With");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLoopAccess().getForLoopForParserRuleCall_1_0());
				}
				lv_forLoop_1_0=ruleFor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoopRule());
					}
					set(
						$current,
						"forLoop",
						lv_forLoop_1_0,
						"org.xtext.example.Grammar.For");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleWith
entryRuleWith returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWithRule()); }
	iv_ruleWith=ruleWith
	{ $current=$iv_ruleWith.current; }
	EOF;

// Rule With
ruleWith returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='with'
		{
			newLeafNode(otherlv_0, grammarAccess.getWithAccess().getWithKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWithAccess().getInitVariableParserRuleCall_1_0());
				}
				lv_init_1_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWithRule());
					}
					set(
						$current,
						"init",
						lv_init_1_0,
						"org.xtext.example.Grammar.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='in'
		{
			newLeafNode(otherlv_2, grammarAccess.getWithAccess().getInKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWithAccess().getVariableVariableParserRuleCall_3_0());
				}
				lv_variable_3_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWithRule());
					}
					set(
						$current,
						"variable",
						lv_variable_3_0,
						"org.xtext.example.Grammar.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getWithAccess().getObjectCObjectCParserRuleCall_4_0());
				}
				lv_objectC_4_0=ruleObjectC
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWithRule());
					}
					set(
						$current,
						"objectC",
						lv_objectC_4_0,
						"org.xtext.example.Grammar.ObjectC");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getWithAccess().getArrayCArrayCParserRuleCall_5_0());
				}
				lv_arrayC_5_0=ruleArrayC
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWithRule());
					}
					set(
						$current,
						"arrayC",
						lv_arrayC_5_0,
						"org.xtext.example.Grammar.ArrayC");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getWithAccess().getLeftCurlyBracketKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWithAccess().getOtherElementOtherElementParserRuleCall_7_0());
				}
				lv_otherElement_7_0=ruleOtherElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWithRule());
					}
					add(
						$current,
						"otherElement",
						lv_otherElement_7_0,
						"org.xtext.example.Grammar.OtherElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getWithAccess().getRightCurlyBracketKeyword_8());
		}
	)
;

// Entry rule entryRuleFor
entryRuleFor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getForRule()); }
	iv_ruleFor=ruleFor
	{ $current=$iv_ruleFor.current; }
	EOF;

// Rule For
ruleFor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getForAccess().getIncrementVariableParserRuleCall_0_0());
				}
				lv_increment_0_0=ruleVariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForRule());
					}
					set(
						$current,
						"increment",
						lv_increment_0_0,
						"org.xtext.example.Grammar.Variable");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='from'
		{
			newLeafNode(otherlv_1, grammarAccess.getForAccess().getFromKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getForAccess().getInitWithVariableVariableParserRuleCall_2_0_0());
					}
					lv_initWithVariable_2_0=ruleVariable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getForRule());
						}
						set(
							$current,
							"initWithVariable",
							lv_initWithVariable_2_0,
							"org.xtext.example.Grammar.Variable");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					lv_initWithInteger_3_0=RULE_INT
					{
						newLeafNode(lv_initWithInteger_3_0, grammarAccess.getForAccess().getInitWithIntegerINTTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getForRule());
						}
						setWithLastConsumed(
							$current,
							"initWithInteger",
							lv_initWithInteger_3_0,
							"org.xtext.example.Grammar.INT");
					}
				)
			)
		)
		otherlv_4='to'
		{
			newLeafNode(otherlv_4, grammarAccess.getForAccess().getToKeyword_3());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getForAccess().getEndWithVariableVariableParserRuleCall_4_0_0_0());
						}
						lv_endWithVariable_5_0=ruleVariable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getForRule());
							}
							set(
								$current,
								"endWithVariable",
								lv_endWithVariable_5_0,
								"org.xtext.example.Grammar.Variable");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getForAccess().getObjectCObjectCParserRuleCall_4_0_1_0());
						}
						lv_objectC_6_0=ruleObjectC
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getForRule());
							}
							set(
								$current,
								"objectC",
								lv_objectC_6_0,
								"org.xtext.example.Grammar.ObjectC");
							afterParserOrEnumRuleCall();
						}
					)
				)?
			)
			    |
			(
				(
					lv_endWithInteger_7_0=RULE_INT
					{
						newLeafNode(lv_endWithInteger_7_0, grammarAccess.getForAccess().getEndWithIntegerINTTerminalRuleCall_4_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getForRule());
						}
						setWithLastConsumed(
							$current,
							"endWithInteger",
							lv_endWithInteger_7_0,
							"org.xtext.example.Grammar.INT");
					}
				)
			)
		)
		otherlv_8='{'
		{
			newLeafNode(otherlv_8, grammarAccess.getForAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getForAccess().getOtherElementOtherElementParserRuleCall_6_0());
				}
				lv_otherElement_9_0=ruleOtherElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getForRule());
					}
					add(
						$current,
						"otherElement",
						lv_otherElement_9_0,
						"org.xtext.example.Grammar.OtherElement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getForAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleOtherElement
entryRuleOtherElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOtherElementRule()); }
	iv_ruleOtherElement=ruleOtherElement
	{ $current=$iv_ruleOtherElement.current; }
	EOF;

// Rule OtherElement
ruleOtherElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOtherElementAccess().getPagePageParserRuleCall_0_0());
				}
				lv_page_0_0=rulePage
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOtherElementRule());
					}
					set(
						$current,
						"page",
						lv_page_0_0,
						"org.xtext.example.Grammar.Page");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getOtherElementAccess().getRowRowParserRuleCall_1_0());
				}
				lv_row_1_0=ruleRow
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOtherElementRule());
					}
					set(
						$current,
						"row",
						lv_row_1_0,
						"org.xtext.example.Grammar.Row");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getOtherElementAccess().getColColParserRuleCall_2_0());
				}
				lv_col_2_0=ruleCol
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOtherElementRule());
					}
					set(
						$current,
						"col",
						lv_col_2_0,
						"org.xtext.example.Grammar.Col");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getOtherElementAccess().getLoopLoopParserRuleCall_3_0());
				}
				lv_loop_3_0=ruleLoop
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOtherElementRule());
					}
					set(
						$current,
						"loop",
						lv_loop_3_0,
						"org.xtext.example.Grammar.Loop");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getOtherElementAccess().getConditionalConditionalParserRuleCall_4_0());
				}
				lv_conditional_4_0=ruleConditional
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOtherElementRule());
					}
					set(
						$current,
						"conditional",
						lv_conditional_4_0,
						"org.xtext.example.Grammar.Conditional");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStyle
entryRuleStyle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStyleRule()); }
	iv_ruleStyle=ruleStyle
	{ $current=$iv_ruleStyle.current; }
	EOF;

// Rule Style
ruleStyle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='style'
		{
			newLeafNode(otherlv_0, grammarAccess.getStyleAccess().getStyleKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getStyleAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStyleAccess().getCssCssParserRuleCall_2_0());
				}
				lv_css_2_0=ruleCss
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStyleRule());
					}
					set(
						$current,
						"css",
						lv_css_2_0,
						"org.xtext.example.Grammar.Css");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getStyleAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleCss
entryRuleCss returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCssRule()); }
	iv_ruleCss=ruleCss
	{ $current=$iv_ruleCss.current; }
	EOF;

// Rule Css
ruleCss returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getCssAccess().getRulesRuleParserRuleCall_0());
			}
			lv_rules_0_0=ruleRule
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getCssRule());
				}
				add(
					$current,
					"rules",
					lv_rules_0_0,
					"org.xtext.example.Grammar.Rule");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_ruleRule=ruleRule
	{ $current=$iv_ruleRule.current; }
	EOF;

// Rule Rule
ruleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getSelectorSelectorParserRuleCall_0_0());
				}
				lv_selector_0_0=ruleSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					set(
						$current,
						"selector",
						lv_selector_0_0,
						"org.xtext.example.Grammar.Selector");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getDeclarationsDeclarationParserRuleCall_2_0());
				}
				lv_declarations_2_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					add(
						$current,
						"declarations",
						lv_declarations_2_0,
						"org.xtext.example.Grammar.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleSelector
entryRuleSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectorRule()); }
	iv_ruleSelector=ruleSelector
	{ $current=$iv_ruleSelector.current; }
	EOF;

// Rule Selector
ruleSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectorAccess().getIdSelectorIDSelectorParserRuleCall_0_0());
				}
				lv_idSelector_0_0=ruleIDSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectorRule());
					}
					set(
						$current,
						"idSelector",
						lv_idSelector_0_0,
						"org.xtext.example.Grammar.IDSelector");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectorAccess().getClassSelectorClassSelectorParserRuleCall_1_0());
				}
				lv_classSelector_1_0=ruleClassSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectorRule());
					}
					set(
						$current,
						"classSelector",
						lv_classSelector_1_0,
						"org.xtext.example.Grammar.ClassSelector");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getSelectorAccess().getTypeSelectorTypeSelectorParserRuleCall_2_0());
				}
				lv_typeSelector_2_0=ruleTypeSelector
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSelectorRule());
					}
					set(
						$current,
						"typeSelector",
						lv_typeSelector_2_0,
						"org.xtext.example.Grammar.TypeSelector");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIDSelector
entryRuleIDSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIDSelectorRule()); }
	iv_ruleIDSelector=ruleIDSelector
	{ $current=$iv_ruleIDSelector.current; }
	EOF;

// Rule IDSelector
ruleIDSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='#'
		{
			newLeafNode(otherlv_0, grammarAccess.getIDSelectorAccess().getNumberSignKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getIDSelectorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIDSelectorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.Grammar.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleClassSelector
entryRuleClassSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClassSelectorRule()); }
	iv_ruleClassSelector=ruleClassSelector
	{ $current=$iv_ruleClassSelector.current; }
	EOF;

// Rule ClassSelector
ruleClassSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='.'
		{
			newLeafNode(otherlv_0, grammarAccess.getClassSelectorAccess().getFullStopKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getClassSelectorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClassSelectorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.Grammar.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleTypeSelector
entryRuleTypeSelector returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeSelectorRule()); }
	iv_ruleTypeSelector=ruleTypeSelector
	{ $current=$iv_ruleTypeSelector.current; }
	EOF;

// Rule TypeSelector
ruleTypeSelector returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getTypeSelectorAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTypeSelectorRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.xtext.example.Grammar.ID");
			}
		)
	)
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_property_0_0=RULE_ID
				{
					newLeafNode(lv_property_0_0, grammarAccess.getDeclarationAccess().getPropertyIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"property",
						lv_property_0_0,
						"org.xtext.example.Grammar.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeclarationAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getCssValueCssValueParserRuleCall_2_0());
				}
				lv_cssValue_2_0=ruleCssValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					add(
						$current,
						"cssValue",
						lv_cssValue_2_0,
						"org.xtext.example.Grammar.CssValue");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getDeclarationAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleCssValue
entryRuleCssValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCssValueRule()); }
	iv_ruleCssValue=ruleCssValue
	{ $current=$iv_ruleCssValue.current; }
	EOF;

// Rule CssValue
ruleCssValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCssValueAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCssValueRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.example.Grammar.ID");
				}
			)
		)
		    |
		(
			(
				lv_string_1_0=RULE_STRING
				{
					newLeafNode(lv_string_1_0, grammarAccess.getCssValueAccess().getStringSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCssValueRule());
					}
					setWithLastConsumed(
						$current,
						"string",
						lv_string_1_0,
						"org.xtext.example.Grammar.STRING");
				}
			)
		)
		    |
		(
			(
				lv_integer_2_0=RULE_INT
				{
					newLeafNode(lv_integer_2_0, grammarAccess.getCssValueAccess().getIntegerINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCssValueRule());
					}
					setWithLastConsumed(
						$current,
						"integer",
						lv_integer_2_0,
						"org.xtext.example.Grammar.INT");
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getCssValueAccess().getComaCOMAParserRuleCall_3_0());
				}
				lv_coma_3_0=ruleCOMA
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCssValueRule());
					}
					set(
						$current,
						"coma",
						lv_coma_3_0,
						"org.xtext.example.Grammar.COMA");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getCssValueAccess().getApostropheAPOSTROPHEParserRuleCall_4_0());
				}
				lv_apostrophe_4_0=ruleAPOSTROPHE
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCssValueRule());
					}
					set(
						$current,
						"apostrophe",
						lv_apostrophe_4_0,
						"org.xtext.example.Grammar.APOSTROPHE");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getCssValueAccess().getHashtagHASHTAGParserRuleCall_5_0());
				}
				lv_hashtag_5_0=ruleHASHTAG
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCssValueRule());
					}
					set(
						$current,
						"hashtag",
						lv_hashtag_5_0,
						"org.xtext.example.Grammar.HASHTAG");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getCssValueAccess().getPourcentPOURCENTParserRuleCall_6_0());
				}
				lv_pourcent_6_0=rulePOURCENT
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCssValueRule());
					}
					set(
						$current,
						"pourcent",
						lv_pourcent_6_0,
						"org.xtext.example.Grammar.POURCENT");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTRUE
entryRuleTRUE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTRUERule()); }
	iv_ruleTRUE=ruleTRUE
	{ $current=$iv_ruleTRUE.current.getText(); }
	EOF;

// Rule TRUE
ruleTRUE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='true'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getTRUEAccess().getTrueKeyword());
	}
;

// Entry rule entryRuleFALSE
entryRuleFALSE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getFALSERule()); }
	iv_ruleFALSE=ruleFALSE
	{ $current=$iv_ruleFALSE.current.getText(); }
	EOF;

// Rule FALSE
ruleFALSE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='false'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getFALSEAccess().getFalseKeyword());
	}
;

// Entry rule entryRuleHASHTAG
entryRuleHASHTAG returns [String current=null]:
	{ newCompositeNode(grammarAccess.getHASHTAGRule()); }
	iv_ruleHASHTAG=ruleHASHTAG
	{ $current=$iv_ruleHASHTAG.current.getText(); }
	EOF;

// Rule HASHTAG
ruleHASHTAG returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='#'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getHASHTAGAccess().getNumberSignKeyword());
	}
;

// Entry rule entryRulePOURCENT
entryRulePOURCENT returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPOURCENTRule()); }
	iv_rulePOURCENT=rulePOURCENT
	{ $current=$iv_rulePOURCENT.current.getText(); }
	EOF;

// Rule POURCENT
rulePOURCENT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='%'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getPOURCENTAccess().getPercentSignKeyword());
	}
;

// Entry rule entryRuleCOMA
entryRuleCOMA returns [String current=null]:
	{ newCompositeNode(grammarAccess.getCOMARule()); }
	iv_ruleCOMA=ruleCOMA
	{ $current=$iv_ruleCOMA.current.getText(); }
	EOF;

// Rule COMA
ruleCOMA returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=','
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getCOMAAccess().getCommaKeyword());
	}
;

// Entry rule entryRuleAPOSTROPHE
entryRuleAPOSTROPHE returns [String current=null]:
	{ newCompositeNode(grammarAccess.getAPOSTROPHERule()); }
	iv_ruleAPOSTROPHE=ruleAPOSTROPHE
	{ $current=$iv_ruleAPOSTROPHE.current.getText(); }
	EOF;

// Rule APOSTROPHE
ruleAPOSTROPHE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='\''
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getAPOSTROPHEAccess().getApostropheKeyword());
	}
;

// Entry rule entryRuleFloat
entryRuleFloat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFloatRule()); }
	iv_ruleFloat=ruleFloat
	{ $current=$iv_ruleFloat.current; }
	EOF;

// Rule Float
ruleFloat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_firstInt_0_0=RULE_INT
				{
					newLeafNode(lv_firstInt_0_0, grammarAccess.getFloatAccess().getFirstIntINTTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFloatRule());
					}
					setWithLastConsumed(
						$current,
						"firstInt",
						lv_firstInt_0_0,
						"org.xtext.example.Grammar.INT");
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getFloatAccess().getFullStopKeyword_1());
		}
		(
			(
				lv_secondInt_2_0=RULE_INT
				{
					newLeafNode(lv_secondInt_2_0, grammarAccess.getFloatAccess().getSecondIntINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFloatRule());
					}
					setWithLastConsumed(
						$current,
						"secondInt",
						lv_secondInt_2_0,
						"org.xtext.example.Grammar.INT");
				}
			)
		)
	)
;

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_INT : ('0'..'9')+;

RULE_ID : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'-'|'#')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
