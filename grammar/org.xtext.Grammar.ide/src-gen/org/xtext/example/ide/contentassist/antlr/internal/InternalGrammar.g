/*
 * generated by Xtext 2.35.0-SNAPSHOT
 */
grammar InternalGrammar;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.services.GrammarGrammarAccess;

}
@parser::members {
	private GrammarGrammarAccess grammarAccess;

	public void setGrammarAccess(GrammarGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getDocumentAssignment()); }
		(rule__Model__DocumentAssignment)
		{ after(grammarAccess.getModelAccess().getDocumentAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDocument
entryRuleDocument
:
{ before(grammarAccess.getDocumentRule()); }
	 ruleDocument
{ after(grammarAccess.getDocumentRule()); } 
	 EOF 
;

// Rule Document
ruleDocument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDocumentAccess().getGroup()); }
		(rule__Document__Group__0)
		{ after(grammarAccess.getDocumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleData
entryRuleData
:
{ before(grammarAccess.getDataRule()); }
	 ruleData
{ after(grammarAccess.getDataRule()); } 
	 EOF 
;

// Rule Data
ruleData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataAccess().getGroup()); }
		(rule__Data__Group__0)
		{ after(grammarAccess.getDataAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKeyValue
entryRuleKeyValue
:
{ before(grammarAccess.getKeyValueRule()); }
	 ruleKeyValue
{ after(grammarAccess.getKeyValueRule()); } 
	 EOF 
;

// Rule KeyValue
ruleKeyValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKeyValueAccess().getGroup()); }
		(rule__KeyValue__Group__0)
		{ after(grammarAccess.getKeyValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getAlternatives()); }
		(rule__Value__Alternatives)
		{ after(grammarAccess.getValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArray
entryRuleArray
:
{ before(grammarAccess.getArrayRule()); }
	 ruleArray
{ after(grammarAccess.getArrayRule()); } 
	 EOF 
;

// Rule Array
ruleArray 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayAccess().getGroup()); }
		(rule__Array__Group__0)
		{ after(grammarAccess.getArrayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNestedObject
entryRuleNestedObject
:
{ before(grammarAccess.getNestedObjectRule()); }
	 ruleNestedObject
{ after(grammarAccess.getNestedObjectRule()); } 
	 EOF 
;

// Rule NestedObject
ruleNestedObject 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNestedObjectAccess().getGroup()); }
		(rule__NestedObject__Group__0)
		{ after(grammarAccess.getNestedObjectAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBuild
entryRuleBuild
:
{ before(grammarAccess.getBuildRule()); }
	 ruleBuild
{ after(grammarAccess.getBuildRule()); } 
	 EOF 
;

// Rule Build
ruleBuild 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBuildAccess().getGroup()); }
		(rule__Build__Group__0)
		{ after(grammarAccess.getBuildAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExtensionList
entryRuleExtensionList
:
{ before(grammarAccess.getExtensionListRule()); }
	 ruleExtensionList
{ after(grammarAccess.getExtensionListRule()); } 
	 EOF 
;

// Rule ExtensionList
ruleExtensionList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExtensionListAccess().getGroup()); }
		(rule__ExtensionList__Group__0)
		{ after(grammarAccess.getExtensionListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSingleExtension
entryRuleSingleExtension
:
{ before(grammarAccess.getSingleExtensionRule()); }
	 ruleSingleExtension
{ after(grammarAccess.getSingleExtensionRule()); } 
	 EOF 
;

// Rule SingleExtension
ruleSingleExtension 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSingleExtensionAccess().getAlternatives()); }
		(rule__SingleExtension__Alternatives)
		{ after(grammarAccess.getSingleExtensionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementBuild
entryRuleElementBuild
:
{ before(grammarAccess.getElementBuildRule()); }
	 ruleElementBuild
{ after(grammarAccess.getElementBuildRule()); } 
	 EOF 
;

// Rule ElementBuild
ruleElementBuild 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementBuildAccess().getAlternatives()); }
		(rule__ElementBuild__Alternatives)
		{ after(grammarAccess.getElementBuildAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSuperVariable
entryRuleSuperVariable
:
{ before(grammarAccess.getSuperVariableRule()); }
	 ruleSuperVariable
{ after(grammarAccess.getSuperVariableRule()); } 
	 EOF 
;

// Rule SuperVariable
ruleSuperVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSuperVariableAccess().getNameAssignment()); }
		(rule__SuperVariable__NameAssignment)
		{ after(grammarAccess.getSuperVariableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableD
entryRuleVariableD
:
{ before(grammarAccess.getVariableDRule()); }
	 ruleVariableD
{ after(grammarAccess.getVariableDRule()); } 
	 EOF 
;

// Rule VariableD
ruleVariableD 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDAccess().getGroup()); }
		(rule__VariableD__Group__0)
		{ after(grammarAccess.getVariableDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePage
entryRulePage
:
{ before(grammarAccess.getPageRule()); }
	 rulePage
{ after(grammarAccess.getPageRule()); } 
	 EOF 
;

// Rule Page
rulePage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPageAccess().getGroup()); }
		(rule__Page__Group__0)
		{ after(grammarAccess.getPageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementPage
entryRuleElementPage
:
{ before(grammarAccess.getElementPageRule()); }
	 ruleElementPage
{ after(grammarAccess.getElementPageRule()); } 
	 EOF 
;

// Rule ElementPage
ruleElementPage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementPageAccess().getAlternatives()); }
		(rule__ElementPage__Alternatives)
		{ after(grammarAccess.getElementPageAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTitle
entryRuleTitle
:
{ before(grammarAccess.getTitleRule()); }
	 ruleTitle
{ after(grammarAccess.getTitleRule()); } 
	 EOF 
;

// Rule Title
ruleTitle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTitleAccess().getAlternatives()); }
		(rule__Title__Alternatives)
		{ after(grammarAccess.getTitleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBigTitle
entryRuleBigTitle
:
{ before(grammarAccess.getBigTitleRule()); }
	 ruleBigTitle
{ after(grammarAccess.getBigTitleRule()); } 
	 EOF 
;

// Rule BigTitle
ruleBigTitle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBigTitleAccess().getGroup()); }
		(rule__BigTitle__Group__0)
		{ after(grammarAccess.getBigTitleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubTitle
entryRuleSubTitle
:
{ before(grammarAccess.getSubTitleRule()); }
	 ruleSubTitle
{ after(grammarAccess.getSubTitleRule()); } 
	 EOF 
;

// Rule SubTitle
ruleSubTitle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubTitleAccess().getGroup()); }
		(rule__SubTitle__Group__0)
		{ after(grammarAccess.getSubTitleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubSubTitle
entryRuleSubSubTitle
:
{ before(grammarAccess.getSubSubTitleRule()); }
	 ruleSubSubTitle
{ after(grammarAccess.getSubSubTitleRule()); } 
	 EOF 
;

// Rule SubSubTitle
ruleSubSubTitle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubSubTitleAccess().getGroup()); }
		(rule__SubSubTitle__Group__0)
		{ after(grammarAccess.getSubSubTitleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRow
entryRuleRow
:
{ before(grammarAccess.getRowRule()); }
	 ruleRow
{ after(grammarAccess.getRowRule()); } 
	 EOF 
;

// Rule Row
ruleRow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRowAccess().getGroup()); }
		(rule__Row__Group__0)
		{ after(grammarAccess.getRowAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementRow
entryRuleElementRow
:
{ before(grammarAccess.getElementRowRule()); }
	 ruleElementRow
{ after(grammarAccess.getElementRowRule()); } 
	 EOF 
;

// Rule ElementRow
ruleElementRow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementRowAccess().getAlternatives()); }
		(rule__ElementRow__Alternatives)
		{ after(grammarAccess.getElementRowAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCol
entryRuleCol
:
{ before(grammarAccess.getColRule()); }
	 ruleCol
{ after(grammarAccess.getColRule()); } 
	 EOF 
;

// Rule Col
ruleCol 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColAccess().getGroup()); }
		(rule__Col__Group__0)
		{ after(grammarAccess.getColAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArrayC
entryRuleArrayC
:
{ before(grammarAccess.getArrayCRule()); }
	 ruleArrayC
{ after(grammarAccess.getArrayCRule()); } 
	 EOF 
;

// Rule ArrayC
ruleArrayC 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArrayCAccess().getGroup()); }
		(rule__ArrayC__Group__0)
		{ after(grammarAccess.getArrayCAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePosition
entryRulePosition
:
{ before(grammarAccess.getPositionRule()); }
	 rulePosition
{ after(grammarAccess.getPositionRule()); } 
	 EOF 
;

// Rule Position
rulePosition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPositionAccess().getAlternatives()); }
		(rule__Position__Alternatives)
		{ after(grammarAccess.getPositionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleObjectC
entryRuleObjectC
:
{ before(grammarAccess.getObjectCRule()); }
	 ruleObjectC
{ after(grammarAccess.getObjectCRule()); } 
	 EOF 
;

// Rule ObjectC
ruleObjectC 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getObjectCAccess().getGroup()); }
		(rule__ObjectC__Group__0)
		{ after(grammarAccess.getObjectCAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImg
entryRuleImg
:
{ before(grammarAccess.getImgRule()); }
	 ruleImg
{ after(grammarAccess.getImgRule()); } 
	 EOF 
;

// Rule Img
ruleImg 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImgAccess().getGroup()); }
		(rule__Img__Group__0)
		{ after(grammarAccess.getImgAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassD
entryRuleClassD
:
{ before(grammarAccess.getClassDRule()); }
	 ruleClassD
{ after(grammarAccess.getClassDRule()); } 
	 EOF 
;

// Rule ClassD
ruleClassD 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassDAccess().getGroup()); }
		(rule__ClassD__Group__0)?
		{ after(grammarAccess.getClassDAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFusion
entryRuleFusion
:
{ before(grammarAccess.getFusionRule()); }
	 ruleFusion
{ after(grammarAccess.getFusionRule()); } 
	 EOF 
;

// Rule Fusion
ruleFusion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFusionAccess().getAlternatives()); }
		(rule__Fusion__Alternatives)?
		{ after(grammarAccess.getFusionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColspan
entryRuleColspan
:
{ before(grammarAccess.getColspanRule()); }
	 ruleColspan
{ after(grammarAccess.getColspanRule()); } 
	 EOF 
;

// Rule Colspan
ruleColspan 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColspanAccess().getGroup()); }
		(rule__Colspan__Group__0)
		{ after(grammarAccess.getColspanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRowspan
entryRuleRowspan
:
{ before(grammarAccess.getRowspanRule()); }
	 ruleRowspan
{ after(grammarAccess.getRowspanRule()); } 
	 EOF 
;

// Rule Rowspan
ruleRowspan 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRowspanAccess().getGroup()); }
		(rule__Rowspan__Group__0)
		{ after(grammarAccess.getRowspanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getAlternatives()); }
		(rule__Function__Alternatives)
		{ after(grammarAccess.getFunctionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSumFunction
entryRuleSumFunction
:
{ before(grammarAccess.getSumFunctionRule()); }
	 ruleSumFunction
{ after(grammarAccess.getSumFunctionRule()); } 
	 EOF 
;

// Rule SumFunction
ruleSumFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSumFunctionAccess().getGroup()); }
		(rule__SumFunction__Group__0)
		{ after(grammarAccess.getSumFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProdFunction
entryRuleProdFunction
:
{ before(grammarAccess.getProdFunctionRule()); }
	 ruleProdFunction
{ after(grammarAccess.getProdFunctionRule()); } 
	 EOF 
;

// Rule ProdFunction
ruleProdFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProdFunctionAccess().getGroup()); }
		(rule__ProdFunction__Group__0)
		{ after(grammarAccess.getProdFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDivFunction
entryRuleDivFunction
:
{ before(grammarAccess.getDivFunctionRule()); }
	 ruleDivFunction
{ after(grammarAccess.getDivFunctionRule()); } 
	 EOF 
;

// Rule DivFunction
ruleDivFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDivFunctionAccess().getGroup()); }
		(rule__DivFunction__Group__0)
		{ after(grammarAccess.getDivFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgument1
entryRuleArgument1
:
{ before(grammarAccess.getArgument1Rule()); }
	 ruleArgument1
{ after(grammarAccess.getArgument1Rule()); } 
	 EOF 
;

// Rule Argument1
ruleArgument1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgument1Access().getAlternatives()); }
		(rule__Argument1__Alternatives)
		{ after(grammarAccess.getArgument1Access().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgument2
entryRuleArgument2
:
{ before(grammarAccess.getArgument2Rule()); }
	 ruleArgument2
{ after(grammarAccess.getArgument2Rule()); } 
	 EOF 
;

// Rule Argument2
ruleArgument2 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgument2Access().getGroup()); }
		(rule__Argument2__Group__0)
		{ after(grammarAccess.getArgument2Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassVariable
entryRuleClassVariable
:
{ before(grammarAccess.getClassVariableRule()); }
	 ruleClassVariable
{ after(grammarAccess.getClassVariableRule()); } 
	 EOF 
;

// Rule ClassVariable
ruleClassVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassVariableAccess().getGroup()); }
		(rule__ClassVariable__Group__0)
		{ after(grammarAccess.getClassVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditional
entryRuleConditional
:
{ before(grammarAccess.getConditionalRule()); }
	 ruleConditional
{ after(grammarAccess.getConditionalRule()); } 
	 EOF 
;

// Rule Conditional
ruleConditional 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionalAccess().getGroup()); }
		(rule__Conditional__Group__0)
		{ after(grammarAccess.getConditionalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfCondition
entryRuleIfCondition
:
{ before(grammarAccess.getIfConditionRule()); }
	 ruleIfCondition
{ after(grammarAccess.getIfConditionRule()); } 
	 EOF 
;

// Rule IfCondition
ruleIfCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfConditionAccess().getGroup()); }
		(rule__IfCondition__Group__0)
		{ after(grammarAccess.getIfConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElseCondition
entryRuleElseCondition
:
{ before(grammarAccess.getElseConditionRule()); }
	 ruleElseCondition
{ after(grammarAccess.getElseConditionRule()); } 
	 EOF 
;

// Rule ElseCondition
ruleElseCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElseConditionAccess().getGroup()); }
		(rule__ElseCondition__Group__0)
		{ after(grammarAccess.getElseConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition1
entryRuleCondition1
:
{ before(grammarAccess.getCondition1Rule()); }
	 ruleCondition1
{ after(grammarAccess.getCondition1Rule()); } 
	 EOF 
;

// Rule Condition1
ruleCondition1 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCondition1Access().getGroup()); }
		(rule__Condition1__Group__0)
		{ after(grammarAccess.getCondition1Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePart
entryRulePart
:
{ before(grammarAccess.getPartRule()); }
	 rulePart
{ after(grammarAccess.getPartRule()); } 
	 EOF 
;

// Rule Part
rulePart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPartAccess().getAlternatives()); }
		(rule__Part__Alternatives)
		{ after(grammarAccess.getPartAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompare
entryRuleCompare
:
{ before(grammarAccess.getCompareRule()); }
	 ruleCompare
{ after(grammarAccess.getCompareRule()); } 
	 EOF 
;

// Rule Compare
ruleCompare 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompareAccess().getAlternatives()); }
		(rule__Compare__Alternatives)
		{ after(grammarAccess.getCompareAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoop
entryRuleLoop
:
{ before(grammarAccess.getLoopRule()); }
	 ruleLoop
{ after(grammarAccess.getLoopRule()); } 
	 EOF 
;

// Rule Loop
ruleLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoopAccess().getAlternatives()); }
		(rule__Loop__Alternatives)
		{ after(grammarAccess.getLoopAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWith
entryRuleWith
:
{ before(grammarAccess.getWithRule()); }
	 ruleWith
{ after(grammarAccess.getWithRule()); } 
	 EOF 
;

// Rule With
ruleWith 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWithAccess().getGroup()); }
		(rule__With__Group__0)
		{ after(grammarAccess.getWithAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFor
entryRuleFor
:
{ before(grammarAccess.getForRule()); }
	 ruleFor
{ after(grammarAccess.getForRule()); } 
	 EOF 
;

// Rule For
ruleFor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getForAccess().getGroup()); }
		(rule__For__Group__0)
		{ after(grammarAccess.getForAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOtherElement
entryRuleOtherElement
:
{ before(grammarAccess.getOtherElementRule()); }
	 ruleOtherElement
{ after(grammarAccess.getOtherElementRule()); } 
	 EOF 
;

// Rule OtherElement
ruleOtherElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOtherElementAccess().getAlternatives()); }
		(rule__OtherElement__Alternatives)
		{ after(grammarAccess.getOtherElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStyle
entryRuleStyle
:
{ before(grammarAccess.getStyleRule()); }
	 ruleStyle
{ after(grammarAccess.getStyleRule()); } 
	 EOF 
;

// Rule Style
ruleStyle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStyleAccess().getGroup()); }
		(rule__Style__Group__0)
		{ after(grammarAccess.getStyleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCss
entryRuleCss
:
{ before(grammarAccess.getCssRule()); }
	 ruleCss
{ after(grammarAccess.getCssRule()); } 
	 EOF 
;

// Rule Css
ruleCss 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCssAccess().getRulesAssignment()); }
		(rule__Css__RulesAssignment)*
		{ after(grammarAccess.getCssAccess().getRulesAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRule
entryRuleRule
:
{ before(grammarAccess.getRuleRule()); }
	 ruleRule
{ after(grammarAccess.getRuleRule()); } 
	 EOF 
;

// Rule Rule
ruleRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRuleAccess().getGroup()); }
		(rule__Rule__Group__0)
		{ after(grammarAccess.getRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelector
entryRuleSelector
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleSelector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;

// Rule Selector
ruleSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectorAccess().getAlternatives()); }
		(rule__Selector__Alternatives)
		{ after(grammarAccess.getSelectorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIDSelector
entryRuleIDSelector
:
{ before(grammarAccess.getIDSelectorRule()); }
	 ruleIDSelector
{ after(grammarAccess.getIDSelectorRule()); } 
	 EOF 
;

// Rule IDSelector
ruleIDSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIDSelectorAccess().getGroup()); }
		(rule__IDSelector__Group__0)
		{ after(grammarAccess.getIDSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassSelector
entryRuleClassSelector
:
{ before(grammarAccess.getClassSelectorRule()); }
	 ruleClassSelector
{ after(grammarAccess.getClassSelectorRule()); } 
	 EOF 
;

// Rule ClassSelector
ruleClassSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassSelectorAccess().getGroup()); }
		(rule__ClassSelector__Group__0)
		{ after(grammarAccess.getClassSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeSelector
entryRuleTypeSelector
:
{ before(grammarAccess.getTypeSelectorRule()); }
	 ruleTypeSelector
{ after(grammarAccess.getTypeSelectorRule()); } 
	 EOF 
;

// Rule TypeSelector
ruleTypeSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeSelectorAccess().getNameAssignment()); }
		(rule__TypeSelector__NameAssignment)
		{ after(grammarAccess.getTypeSelectorAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeclaration
entryRuleDeclaration
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeclarationAccess().getGroup()); }
		(rule__Declaration__Group__0)
		{ after(grammarAccess.getDeclarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCssValue
entryRuleCssValue
:
{ before(grammarAccess.getCssValueRule()); }
	 ruleCssValue
{ after(grammarAccess.getCssValueRule()); } 
	 EOF 
;

// Rule CssValue
ruleCssValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCssValueAccess().getAlternatives()); }
		(rule__CssValue__Alternatives)
		{ after(grammarAccess.getCssValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTRUE
entryRuleTRUE
:
{ before(grammarAccess.getTRUERule()); }
	 ruleTRUE
{ after(grammarAccess.getTRUERule()); } 
	 EOF 
;

// Rule TRUE
ruleTRUE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTRUEAccess().getTrueKeyword()); }
		'true'
		{ after(grammarAccess.getTRUEAccess().getTrueKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFALSE
entryRuleFALSE
:
{ before(grammarAccess.getFALSERule()); }
	 ruleFALSE
{ after(grammarAccess.getFALSERule()); } 
	 EOF 
;

// Rule FALSE
ruleFALSE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFALSEAccess().getFalseKeyword()); }
		'false'
		{ after(grammarAccess.getFALSEAccess().getFalseKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHASHTAG
entryRuleHASHTAG
:
{ before(grammarAccess.getHASHTAGRule()); }
	 ruleHASHTAG
{ after(grammarAccess.getHASHTAGRule()); } 
	 EOF 
;

// Rule HASHTAG
ruleHASHTAG 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHASHTAGAccess().getNumberSignKeyword()); }
		'#'
		{ after(grammarAccess.getHASHTAGAccess().getNumberSignKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePOURCENT
entryRulePOURCENT
:
{ before(grammarAccess.getPOURCENTRule()); }
	 rulePOURCENT
{ after(grammarAccess.getPOURCENTRule()); } 
	 EOF 
;

// Rule POURCENT
rulePOURCENT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPOURCENTAccess().getPercentSignKeyword()); }
		'%'
		{ after(grammarAccess.getPOURCENTAccess().getPercentSignKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCOMA
entryRuleCOMA
:
{ before(grammarAccess.getCOMARule()); }
	 ruleCOMA
{ after(grammarAccess.getCOMARule()); } 
	 EOF 
;

// Rule COMA
ruleCOMA 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCOMAAccess().getCommaKeyword()); }
		','
		{ after(grammarAccess.getCOMAAccess().getCommaKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAPOSTROPHE
entryRuleAPOSTROPHE
:
{ before(grammarAccess.getAPOSTROPHERule()); }
	 ruleAPOSTROPHE
{ after(grammarAccess.getAPOSTROPHERule()); } 
	 EOF 
;

// Rule APOSTROPHE
ruleAPOSTROPHE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAPOSTROPHEAccess().getApostropheKeyword()); }
		'\''
		{ after(grammarAccess.getAPOSTROPHEAccess().getApostropheKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloat
entryRuleFloat
:
{ before(grammarAccess.getFloatRule()); }
	 ruleFloat
{ after(grammarAccess.getFloatRule()); } 
	 EOF 
;

// Rule Float
ruleFloat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatAccess().getGroup()); }
		(rule__Float__Group__0)
		{ after(grammarAccess.getFloatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getStringAssignment_0()); }
		(rule__Value__StringAssignment_0)
		{ after(grammarAccess.getValueAccess().getStringAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getIntegerAssignment_1()); }
		(rule__Value__IntegerAssignment_1)
		{ after(grammarAccess.getValueAccess().getIntegerAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getFloatValueAssignment_2()); }
		(rule__Value__FloatValueAssignment_2)
		{ after(grammarAccess.getValueAccess().getFloatValueAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getTrueVAssignment_3()); }
		(rule__Value__TrueVAssignment_3)
		{ after(grammarAccess.getValueAccess().getTrueVAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getFalseVAssignment_4()); }
		(rule__Value__FalseVAssignment_4)
		{ after(grammarAccess.getValueAccess().getFalseVAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getArrayAssignment_5()); }
		(rule__Value__ArrayAssignment_5)
		{ after(grammarAccess.getValueAccess().getArrayAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getNestedObjectAssignment_6()); }
		(rule__Value__NestedObjectAssignment_6)
		{ after(grammarAccess.getValueAccess().getNestedObjectAssignment_6()); }
	)
	|
	(
		{ before(grammarAccess.getValueAccess().getVariableAssignment_7()); }
		(rule__Value__VariableAssignment_7)
		{ after(grammarAccess.getValueAccess().getVariableAssignment_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Alternatives_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuildAccess().getTrueVAssignment_3_2_0()); }
		(rule__Build__TrueVAssignment_3_2_0)
		{ after(grammarAccess.getBuildAccess().getTrueVAssignment_3_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getBuildAccess().getFalseFAssignment_3_2_1()); }
		(rule__Build__FalseFAssignment_3_2_1)
		{ after(grammarAccess.getBuildAccess().getFalseFAssignment_3_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleExtension__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleExtensionAccess().getXlsxAssignment_0()); }
		(rule__SingleExtension__XlsxAssignment_0)
		{ after(grammarAccess.getSingleExtensionAccess().getXlsxAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSingleExtensionAccess().getHtmlAssignment_1()); }
		(rule__SingleExtension__HtmlAssignment_1)
		{ after(grammarAccess.getSingleExtensionAccess().getHtmlAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSingleExtensionAccess().getPdfAssignment_2()); }
		(rule__SingleExtension__PdfAssignment_2)
		{ after(grammarAccess.getSingleExtensionAccess().getPdfAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getSingleExtensionAccess().getDocAssignment_3()); }
		(rule__SingleExtension__DocAssignment_3)
		{ after(grammarAccess.getSingleExtensionAccess().getDocAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementBuild__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementBuildAccess().getVariableDAssignment_0()); }
		(rule__ElementBuild__VariableDAssignment_0)
		{ after(grammarAccess.getElementBuildAccess().getVariableDAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementBuildAccess().getPageAssignment_1()); }
		(rule__ElementBuild__PageAssignment_1)
		{ after(grammarAccess.getElementBuildAccess().getPageAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementBuildAccess().getLoopAssignment_2()); }
		(rule__ElementBuild__LoopAssignment_2)
		{ after(grammarAccess.getElementBuildAccess().getLoopAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementBuildAccess().getConditionalAssignment_3()); }
		(rule__ElementBuild__ConditionalAssignment_3)
		{ after(grammarAccess.getElementBuildAccess().getConditionalAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableD__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDAccess().getValueAssignment_2_0()); }
		(rule__VariableD__ValueAssignment_2_0)
		{ after(grammarAccess.getVariableDAccess().getValueAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDAccess().getClassVariableAssignment_2_1()); }
		(rule__VariableD__ClassVariableAssignment_2_1)
		{ after(grammarAccess.getVariableDAccess().getClassVariableAssignment_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableDAccess().getFunctionAssignment_2_2()); }
		(rule__VariableD__FunctionAssignment_2_2)
		{ after(grammarAccess.getVariableDAccess().getFunctionAssignment_2_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPageAccess().getGroup_2_0()); }
		(rule__Page__Group_2_0__0)
		{ after(grammarAccess.getPageAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getPageAccess().getStringAssignment_2_1()); }
		(rule__Page__StringAssignment_2_1)
		{ after(grammarAccess.getPageAccess().getStringAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPage__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementPageAccess().getRowAssignment_0()); }
		(rule__ElementPage__RowAssignment_0)
		{ after(grammarAccess.getElementPageAccess().getRowAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementPageAccess().getLoopAssignment_1()); }
		(rule__ElementPage__LoopAssignment_1)
		{ after(grammarAccess.getElementPageAccess().getLoopAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementPageAccess().getConditionalAssignment_2()); }
		(rule__ElementPage__ConditionalAssignment_2)
		{ after(grammarAccess.getElementPageAccess().getConditionalAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementPageAccess().getGroup_3()); }
		(rule__ElementPage__Group_3__0)
		{ after(grammarAccess.getElementPageAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTitleAccess().getBigTitleAssignment_0()); }
		(rule__Title__BigTitleAssignment_0)
		{ after(grammarAccess.getTitleAccess().getBigTitleAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTitleAccess().getSubTitleAssignment_1()); }
		(rule__Title__SubTitleAssignment_1)
		{ after(grammarAccess.getTitleAccess().getSubTitleAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getTitleAccess().getSubSubTitleAssignment_2()); }
		(rule__Title__SubSubTitleAssignment_2)
		{ after(grammarAccess.getTitleAccess().getSubSubTitleAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BigTitle__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBigTitleAccess().getGroup_2_0()); }
		(rule__BigTitle__Group_2_0__0)
		{ after(grammarAccess.getBigTitleAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getBigTitleAccess().getStringAssignment_2_1()); }
		(rule__BigTitle__StringAssignment_2_1)
		{ after(grammarAccess.getBigTitleAccess().getStringAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTitle__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubTitleAccess().getGroup_2_0()); }
		(rule__SubTitle__Group_2_0__0)
		{ after(grammarAccess.getSubTitleAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubTitleAccess().getStringAssignment_2_1()); }
		(rule__SubTitle__StringAssignment_2_1)
		{ after(grammarAccess.getSubTitleAccess().getStringAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSubTitle__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubSubTitleAccess().getGroup_2_0()); }
		(rule__SubSubTitle__Group_2_0__0)
		{ after(grammarAccess.getSubSubTitleAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSubSubTitleAccess().getStringAssignment_2_1()); }
		(rule__SubSubTitle__StringAssignment_2_1)
		{ after(grammarAccess.getSubSubTitleAccess().getStringAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRow__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementRowAccess().getVariableAssignment_0()); }
		(rule__ElementRow__VariableAssignment_0)
		{ after(grammarAccess.getElementRowAccess().getVariableAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementRowAccess().getVariableDAssignment_1()); }
		(rule__ElementRow__VariableDAssignment_1)
		{ after(grammarAccess.getElementRowAccess().getVariableDAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementRowAccess().getColAssignment_2()); }
		(rule__ElementRow__ColAssignment_2)
		{ after(grammarAccess.getElementRowAccess().getColAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementRowAccess().getConditionalAssignment_3()); }
		(rule__ElementRow__ConditionalAssignment_3)
		{ after(grammarAccess.getElementRowAccess().getConditionalAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getElementRowAccess().getLoopAssignment_4()); }
		(rule__ElementRow__LoopAssignment_4)
		{ after(grammarAccess.getElementRowAccess().getLoopAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColAccess().getImgAssignment_2_0()); }
		(rule__Col__ImgAssignment_2_0)
		{ after(grammarAccess.getColAccess().getImgAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getColAccess().getGroup_2_1()); }
		(rule__Col__Group_2_1__0)
		{ after(grammarAccess.getColAccess().getGroup_2_1()); }
	)
	|
	(
		{ before(grammarAccess.getColAccess().getVariableDAssignment_2_2()); }
		(rule__Col__VariableDAssignment_2_2)
		{ after(grammarAccess.getColAccess().getVariableDAssignment_2_2()); }
	)
	|
	(
		{ before(grammarAccess.getColAccess().getStringAssignment_2_3()); }
		(rule__Col__StringAssignment_2_3)
		{ after(grammarAccess.getColAccess().getStringAssignment_2_3()); }
	)
	|
	(
		{ before(grammarAccess.getColAccess().getIntegerAssignment_2_4()); }
		(rule__Col__IntegerAssignment_2_4)
		{ after(grammarAccess.getColAccess().getIntegerAssignment_2_4()); }
	)
	|
	(
		{ before(grammarAccess.getColAccess().getFloatValueAssignment_2_5()); }
		(rule__Col__FloatValueAssignment_2_5)
		{ after(grammarAccess.getColAccess().getFloatValueAssignment_2_5()); }
	)
	|
	(
		{ before(grammarAccess.getColAccess().getFunctionAssignment_2_6()); }
		(rule__Col__FunctionAssignment_2_6)
		{ after(grammarAccess.getColAccess().getFunctionAssignment_2_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionAccess().getIntegerAssignment_0()); }
		(rule__Position__IntegerAssignment_0)
		{ after(grammarAccess.getPositionAccess().getIntegerAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getPositionAccess().getVariableAssignment_1()); }
		(rule__Position__VariableAssignment_1)
		{ after(grammarAccess.getPositionAccess().getVariableAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImgAccess().getStringAssignment_4_0()); }
		(rule__Img__StringAssignment_4_0)
		{ after(grammarAccess.getImgAccess().getStringAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getImgAccess().getGroup_4_1()); }
		(rule__Img__Group_4_1__0)
		{ after(grammarAccess.getImgAccess().getGroup_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fusion__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFusionAccess().getColspanAssignment_0()); }
		(rule__Fusion__ColspanAssignment_0)
		{ after(grammarAccess.getFusionAccess().getColspanAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getFusionAccess().getRowspanAssignment_1()); }
		(rule__Fusion__RowspanAssignment_1)
		{ after(grammarAccess.getFusionAccess().getRowspanAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colspan__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColspanAccess().getIntegerAssignment_2_0()); }
		(rule__Colspan__IntegerAssignment_2_0)
		{ after(grammarAccess.getColspanAccess().getIntegerAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getColspanAccess().getVariableAssignment_2_1()); }
		(rule__Colspan__VariableAssignment_2_1)
		{ after(grammarAccess.getColspanAccess().getVariableAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rowspan__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowspanAccess().getIntegerAssignment_2_0()); }
		(rule__Rowspan__IntegerAssignment_2_0)
		{ after(grammarAccess.getRowspanAccess().getIntegerAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRowspanAccess().getVariableAssignment_2_1()); }
		(rule__Rowspan__VariableAssignment_2_1)
		{ after(grammarAccess.getRowspanAccess().getVariableAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getSumFunctionAssignment_0()); }
		(rule__Function__SumFunctionAssignment_0)
		{ after(grammarAccess.getFunctionAccess().getSumFunctionAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getProdFunctionAssignment_1()); }
		(rule__Function__ProdFunctionAssignment_1)
		{ after(grammarAccess.getFunctionAccess().getProdFunctionAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getDivFunctionAssignment_2()); }
		(rule__Function__DivFunctionAssignment_2)
		{ after(grammarAccess.getFunctionAccess().getDivFunctionAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumFunctionAccess().getGroup_2_0()); }
		(rule__SumFunction__Group_2_0__0)?
		{ after(grammarAccess.getSumFunctionAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSumFunctionAccess().getGroup_2_1()); }
		(rule__SumFunction__Group_2_1__0)
		{ after(grammarAccess.getSumFunctionAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProdFunctionAccess().getGroup_2_0()); }
		(rule__ProdFunction__Group_2_0__0)?
		{ after(grammarAccess.getProdFunctionAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getProdFunctionAccess().getGroup_2_1()); }
		(rule__ProdFunction__Group_2_1__0)
		{ after(grammarAccess.getProdFunctionAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument1__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument1Access().getIntegerAssignment_0()); }
		(rule__Argument1__IntegerAssignment_0)
		{ after(grammarAccess.getArgument1Access().getIntegerAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgument1Access().getFloatValueAssignment_1()); }
		(rule__Argument1__FloatValueAssignment_1)
		{ after(grammarAccess.getArgument1Access().getFloatValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getArgument1Access().getStringAssignment_2()); }
		(rule__Argument1__StringAssignment_2)
		{ after(grammarAccess.getArgument1Access().getStringAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getArgument1Access().getClassVariableAssignment_3()); }
		(rule__Argument1__ClassVariableAssignment_3)
		{ after(grammarAccess.getArgument1Access().getClassVariableAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getArgument1Access().getGroup_4()); }
		(rule__Argument1__Group_4__0)
		{ after(grammarAccess.getArgument1Access().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument2Access().getVariableAssignment_0_0()); }
		(rule__Argument2__VariableAssignment_0_0)
		{ after(grammarAccess.getArgument2Access().getVariableAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgument2Access().getIntegerAssignment_0_1()); }
		(rule__Argument2__IntegerAssignment_0_1)
		{ after(grammarAccess.getArgument2Access().getIntegerAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument2Access().getHyphenMinusKeyword_1_0_0()); }
		'-'
		{ after(grammarAccess.getArgument2Access().getHyphenMinusKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgument2Access().getPlusSignKeyword_1_0_1()); }
		'+'
		{ after(grammarAccess.getArgument2Access().getPlusSignKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument2Access().getVariableAssignment_1_1_0()); }
		(rule__Argument2__VariableAssignment_1_1_0)
		{ after(grammarAccess.getArgument2Access().getVariableAssignment_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgument2Access().getIntegerEnd1Assignment_1_1_1()); }
		(rule__Argument2__IntegerEnd1Assignment_1_1_1)
		{ after(grammarAccess.getArgument2Access().getIntegerEnd1Assignment_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument2Access().getVariableAssignment_3_0()); }
		(rule__Argument2__VariableAssignment_3_0)
		{ after(grammarAccess.getArgument2Access().getVariableAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgument2Access().getIntegerEnd2Assignment_3_1()); }
		(rule__Argument2__IntegerEnd2Assignment_3_1)
		{ after(grammarAccess.getArgument2Access().getIntegerEnd2Assignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Alternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument2Access().getHyphenMinusKeyword_4_0_0()); }
		'-'
		{ after(grammarAccess.getArgument2Access().getHyphenMinusKeyword_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgument2Access().getPlusSignKeyword_4_0_1()); }
		'+'
		{ after(grammarAccess.getArgument2Access().getPlusSignKeyword_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Alternatives_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument2Access().getVariableAssignment_4_1_0()); }
		(rule__Argument2__VariableAssignment_4_1_0)
		{ after(grammarAccess.getArgument2Access().getVariableAssignment_4_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getArgument2Access().getIntegerEnd3Assignment_4_1_1()); }
		(rule__Argument2__IntegerEnd3Assignment_4_1_1)
		{ after(grammarAccess.getArgument2Access().getIntegerEnd3Assignment_4_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseConditionAccess().getGroup_1_0()); }
		(rule__ElseCondition__Group_1_0__0)
		{ after(grammarAccess.getElseConditionAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getElseConditionAccess().getIfConditionAssignment_1_1()); }
		(rule__ElseCondition__IfConditionAssignment_1_1)
		{ after(grammarAccess.getElseConditionAccess().getIfConditionAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getGroup_0()); }
		(rule__Part__Group_0__0)
		{ after(grammarAccess.getPartAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPartAccess().getStringAssignment_1()); }
		(rule__Part__StringAssignment_1)
		{ after(grammarAccess.getPartAccess().getStringAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getPartAccess().getIntegerAssignment_2()); }
		(rule__Part__IntegerAssignment_2)
		{ after(grammarAccess.getPartAccess().getIntegerAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getPartAccess().getSuperVariableAssignment_3()); }
		(rule__Part__SuperVariableAssignment_3)
		{ after(grammarAccess.getPartAccess().getSuperVariableAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getPartAccess().getClassVariableAssignment_4()); }
		(rule__Part__ClassVariableAssignment_4)
		{ after(grammarAccess.getPartAccess().getClassVariableAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareAccess().getEqualsSignEqualsSignKeyword_0()); }
		'=='
		{ after(grammarAccess.getCompareAccess().getEqualsSignEqualsSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompareAccess().getExclamationMarkEqualsSignKeyword_1()); }
		'!='
		{ after(grammarAccess.getCompareAccess().getExclamationMarkEqualsSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompareAccess().getLessThanSignKeyword_2()); }
		'<'
		{ after(grammarAccess.getCompareAccess().getLessThanSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getCompareAccess().getGreaterThanSignKeyword_3()); }
		'>'
		{ after(grammarAccess.getCompareAccess().getGreaterThanSignKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopAccess().getWithLoopAssignment_0()); }
		(rule__Loop__WithLoopAssignment_0)
		{ after(grammarAccess.getLoopAccess().getWithLoopAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLoopAccess().getForLoopAssignment_1()); }
		(rule__Loop__ForLoopAssignment_1)
		{ after(grammarAccess.getLoopAccess().getForLoopAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getInitWithVariableAssignment_2_0()); }
		(rule__For__InitWithVariableAssignment_2_0)
		{ after(grammarAccess.getForAccess().getInitWithVariableAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getForAccess().getInitWithIntegerAssignment_2_1()); }
		(rule__For__InitWithIntegerAssignment_2_1)
		{ after(grammarAccess.getForAccess().getInitWithIntegerAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getGroup_4_0()); }
		(rule__For__Group_4_0__0)
		{ after(grammarAccess.getForAccess().getGroup_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getForAccess().getEndWithIntegerAssignment_4_1()); }
		(rule__For__EndWithIntegerAssignment_4_1)
		{ after(grammarAccess.getForAccess().getEndWithIntegerAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOtherElementAccess().getPageAssignment_0()); }
		(rule__OtherElement__PageAssignment_0)
		{ after(grammarAccess.getOtherElementAccess().getPageAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getOtherElementAccess().getRowAssignment_1()); }
		(rule__OtherElement__RowAssignment_1)
		{ after(grammarAccess.getOtherElementAccess().getRowAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getOtherElementAccess().getColAssignment_2()); }
		(rule__OtherElement__ColAssignment_2)
		{ after(grammarAccess.getOtherElementAccess().getColAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getOtherElementAccess().getLoopAssignment_3()); }
		(rule__OtherElement__LoopAssignment_3)
		{ after(grammarAccess.getOtherElementAccess().getLoopAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getOtherElementAccess().getConditionalAssignment_4()); }
		(rule__OtherElement__ConditionalAssignment_4)
		{ after(grammarAccess.getOtherElementAccess().getConditionalAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getIdSelectorAssignment_0()); }
		(rule__Selector__IdSelectorAssignment_0)
		{ after(grammarAccess.getSelectorAccess().getIdSelectorAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectorAccess().getClassSelectorAssignment_1()); }
		(rule__Selector__ClassSelectorAssignment_1)
		{ after(grammarAccess.getSelectorAccess().getClassSelectorAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSelectorAccess().getTypeSelectorAssignment_2()); }
		(rule__Selector__TypeSelectorAssignment_2)
		{ after(grammarAccess.getSelectorAccess().getTypeSelectorAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCssValueAccess().getNameAssignment_0()); }
		(rule__CssValue__NameAssignment_0)
		{ after(grammarAccess.getCssValueAccess().getNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getCssValueAccess().getStringAssignment_1()); }
		(rule__CssValue__StringAssignment_1)
		{ after(grammarAccess.getCssValueAccess().getStringAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getCssValueAccess().getIntegerAssignment_2()); }
		(rule__CssValue__IntegerAssignment_2)
		{ after(grammarAccess.getCssValueAccess().getIntegerAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getCssValueAccess().getComaAssignment_3()); }
		(rule__CssValue__ComaAssignment_3)
		{ after(grammarAccess.getCssValueAccess().getComaAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getCssValueAccess().getApostropheAssignment_4()); }
		(rule__CssValue__ApostropheAssignment_4)
		{ after(grammarAccess.getCssValueAccess().getApostropheAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getCssValueAccess().getHashtagAssignment_5()); }
		(rule__CssValue__HashtagAssignment_5)
		{ after(grammarAccess.getCssValueAccess().getHashtagAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getCssValueAccess().getPourcentAssignment_6()); }
		(rule__CssValue__PourcentAssignment_6)
		{ after(grammarAccess.getCssValueAccess().getPourcentAssignment_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Document__Group__0__Impl
	rule__Document__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentAccess().getDataAssignment_0()); }
	(rule__Document__DataAssignment_0)?
	{ after(grammarAccess.getDocumentAccess().getDataAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Document__Group__1__Impl
	rule__Document__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentAccess().getBuildAssignment_1()); }
	(rule__Document__BuildAssignment_1)
	{ after(grammarAccess.getDocumentAccess().getBuildAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Document__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDocumentAccess().getStyleAssignment_2()); }
	(rule__Document__StyleAssignment_2)?
	{ after(grammarAccess.getDocumentAccess().getStyleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__0__Impl
	rule__Data__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getDataKeyword_0()); }
	'data'
	{ after(grammarAccess.getDataAccess().getDataKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__1__Impl
	rule__Data__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getDataAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__2__Impl
	rule__Data__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getGroup_2()); }
	(rule__Data__Group_2__0)
	{ after(grammarAccess.getDataAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getDataAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group_2__0__Impl
	rule__Data__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getKeyValueAssignment_2_0()); }
	(rule__Data__KeyValueAssignment_2_0)
	{ after(grammarAccess.getDataAccess().getKeyValueAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getGroup_2_1()); }
	(rule__Data__Group_2_1__0)*
	{ after(grammarAccess.getDataAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Data__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group_2_1__0__Impl
	rule__Data__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getDataAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Data__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataAccess().getKeyValueAssignment_2_1_1()); }
	(rule__Data__KeyValueAssignment_2_1_1)
	{ after(grammarAccess.getDataAccess().getKeyValueAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__KeyValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyValue__Group__0__Impl
	rule__KeyValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyValueAccess().getStringAssignment_0()); }
	(rule__KeyValue__StringAssignment_0)
	{ after(grammarAccess.getKeyValueAccess().getStringAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyValue__Group__1__Impl
	rule__KeyValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyValueAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getKeyValueAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__KeyValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKeyValueAccess().getValueAssignment_2()); }
	(rule__KeyValue__ValueAssignment_2)
	{ after(grammarAccess.getKeyValueAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group__0__Impl
	rule__Array__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group__1__Impl
	rule__Array__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getGroup_1()); }
	(rule__Array__Group_1__0)?
	{ after(grammarAccess.getArrayAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group_1__0__Impl
	rule__Array__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getValuesAssignment_1_0()); }
	(rule__Array__ValuesAssignment_1_0)
	{ after(grammarAccess.getArrayAccess().getValuesAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getGroup_1_1()); }
	(rule__Array__Group_1_1__0)*
	{ after(grammarAccess.getArrayAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group_1_1__0__Impl
	rule__Array__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getCommaKeyword_1_1_0()); }
	','
	{ after(grammarAccess.getArrayAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Array__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayAccess().getValuesAssignment_1_1_1()); }
	(rule__Array__ValuesAssignment_1_1_1)
	{ after(grammarAccess.getArrayAccess().getValuesAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NestedObject__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedObject__Group__0__Impl
	rule__NestedObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedObjectAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getNestedObjectAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedObject__Group__1__Impl
	rule__NestedObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedObjectAccess().getGroup_1()); }
	(rule__NestedObject__Group_1__0)?
	{ after(grammarAccess.getNestedObjectAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedObject__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedObjectAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getNestedObjectAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NestedObject__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedObject__Group_1__0__Impl
	rule__NestedObject__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedObjectAccess().getKeyValueAssignment_1_0()); }
	(rule__NestedObject__KeyValueAssignment_1_0)
	{ after(grammarAccess.getNestedObjectAccess().getKeyValueAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedObject__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedObjectAccess().getGroup_1_1()); }
	(rule__NestedObject__Group_1_1__0)*
	{ after(grammarAccess.getNestedObjectAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NestedObject__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedObject__Group_1_1__0__Impl
	rule__NestedObject__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedObjectAccess().getCommaKeyword_1_1_0()); }
	','
	{ after(grammarAccess.getNestedObjectAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NestedObject__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNestedObjectAccess().getKeyValueAssignment_1_1_1()); }
	(rule__NestedObject__KeyValueAssignment_1_1_1)
	{ after(grammarAccess.getNestedObjectAccess().getKeyValueAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Build__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Build__Group__0__Impl
	rule__Build__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildAccess().getDocumentKeyword_0()); }
	'document'
	{ after(grammarAccess.getBuildAccess().getDocumentKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Build__Group__1__Impl
	rule__Build__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildAccess().getVariableAssignment_1()); }
	(rule__Build__VariableAssignment_1)
	{ after(grammarAccess.getBuildAccess().getVariableAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Build__Group__2__Impl
	rule__Build__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildAccess().getExtensionsAssignment_2()); }
	(rule__Build__ExtensionsAssignment_2)?
	{ after(grammarAccess.getBuildAccess().getExtensionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Build__Group__3__Impl
	rule__Build__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildAccess().getGroup_3()); }
	(rule__Build__Group_3__0)
	{ after(grammarAccess.getBuildAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Build__Group__4__Impl
	rule__Build__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getBuildAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Build__Group__5__Impl
	rule__Build__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildAccess().getElementBuildAssignment_5()); }
	(rule__Build__ElementBuildAssignment_5)*
	{ after(grammarAccess.getBuildAccess().getElementBuildAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Build__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getBuildAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Build__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Build__Group_3__0__Impl
	rule__Build__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildAccess().getAllInOneAssignment_3_0()); }
	(rule__Build__AllInOneAssignment_3_0)
	{ after(grammarAccess.getBuildAccess().getAllInOneAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Build__Group_3__1__Impl
	rule__Build__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildAccess().getEqualsSignKeyword_3_1()); }
	'='
	{ after(grammarAccess.getBuildAccess().getEqualsSignKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Build__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBuildAccess().getAlternatives_3_2()); }
	(rule__Build__Alternatives_3_2)
	{ after(grammarAccess.getBuildAccess().getAlternatives_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtensionList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionList__Group__0__Impl
	rule__ExtensionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionListAccess().getExtensionsKeyword_0()); }
	'extensions'
	{ after(grammarAccess.getExtensionListAccess().getExtensionsKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionList__Group__1__Impl
	rule__ExtensionList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionListAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getExtensionListAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionList__Group__2__Impl
	rule__ExtensionList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionListAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getExtensionListAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionList__Group__3__Impl
	rule__ExtensionList__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionListAccess().getGroup_3()); }
	(rule__ExtensionList__Group_3__0)?
	{ after(grammarAccess.getExtensionListAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionList__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionList__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionList__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionListAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getExtensionListAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtensionList__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionList__Group_3__0__Impl
	rule__ExtensionList__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionList__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionListAccess().getExtensionsAssignment_3_0()); }
	(rule__ExtensionList__ExtensionsAssignment_3_0)
	{ after(grammarAccess.getExtensionListAccess().getExtensionsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionList__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionList__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionList__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionListAccess().getGroup_3_1()); }
	(rule__ExtensionList__Group_3_1__0)*
	{ after(grammarAccess.getExtensionListAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExtensionList__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionList__Group_3_1__0__Impl
	rule__ExtensionList__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionList__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionListAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getExtensionListAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionList__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExtensionList__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionList__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExtensionListAccess().getExtensionsAssignment_3_1_1()); }
	(rule__ExtensionList__ExtensionsAssignment_3_1_1)
	{ after(grammarAccess.getExtensionListAccess().getExtensionsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getDollarSignKeyword_0()); }
	'$'
	{ after(grammarAccess.getVariableAccess().getDollarSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_1()); }
	(rule__Variable__NameAssignment_1)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableD__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableD__Group__0__Impl
	rule__VariableD__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableD__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDAccess().getSuperVariableAssignment_0()); }
	(rule__VariableD__SuperVariableAssignment_0)
	{ after(grammarAccess.getVariableDAccess().getSuperVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableD__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableD__Group__1__Impl
	rule__VariableD__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableD__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getVariableDAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableD__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableD__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableD__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDAccess().getAlternatives_2()); }
	(rule__VariableD__Alternatives_2)
	{ after(grammarAccess.getVariableDAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Page__Group__0__Impl
	rule__Page__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageAccess().getPageKeyword_0()); }
	'page'
	{ after(grammarAccess.getPageAccess().getPageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Page__Group__1__Impl
	rule__Page__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getPageAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Page__Group__2__Impl
	rule__Page__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageAccess().getAlternatives_2()); }
	(rule__Page__Alternatives_2)
	{ after(grammarAccess.getPageAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Page__Group__3__Impl
	rule__Page__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getPageAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Page__Group__4__Impl
	rule__Page__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getPageAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Page__Group__5__Impl
	rule__Page__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageAccess().getTitlesAssignment_5()); }
	(rule__Page__TitlesAssignment_5)*
	{ after(grammarAccess.getPageAccess().getTitlesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Page__Group__6__Impl
	rule__Page__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageAccess().getElementPageAssignment_6()); }
	(rule__Page__ElementPageAssignment_6)*
	{ after(grammarAccess.getPageAccess().getElementPageAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Page__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getPageAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Page__Group_2_0__0__Impl
	rule__Page__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageAccess().getVariableAssignment_2_0_0()); }
	(rule__Page__VariableAssignment_2_0_0)
	{ after(grammarAccess.getPageAccess().getVariableAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Page__Group_2_0__1__Impl
	rule__Page__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageAccess().getObjectCAssignment_2_0_1()); }
	(rule__Page__ObjectCAssignment_2_0_1)?
	{ after(grammarAccess.getPageAccess().getObjectCAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Page__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPageAccess().getArrayCAssignment_2_0_2()); }
	(rule__Page__ArrayCAssignment_2_0_2)?
	{ after(grammarAccess.getPageAccess().getArrayCAssignment_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementPage__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementPage__Group_3__0__Impl
	rule__ElementPage__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPage__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementPageAccess().getVariableAssignment_3_0()); }
	(rule__ElementPage__VariableAssignment_3_0)
	{ after(grammarAccess.getElementPageAccess().getVariableAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPage__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementPage__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPage__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementPageAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getElementPageAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BigTitle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BigTitle__Group__0__Impl
	rule__BigTitle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BigTitle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBigTitleAccess().getTitleKeyword_0()); }
	'title'
	{ after(grammarAccess.getBigTitleAccess().getTitleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BigTitle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BigTitle__Group__1__Impl
	rule__BigTitle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BigTitle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBigTitleAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getBigTitleAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BigTitle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BigTitle__Group__2__Impl
	rule__BigTitle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BigTitle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBigTitleAccess().getAlternatives_2()); }
	(rule__BigTitle__Alternatives_2)
	{ after(grammarAccess.getBigTitleAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BigTitle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BigTitle__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BigTitle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBigTitleAccess().getClassDAssignment_3()); }
	(rule__BigTitle__ClassDAssignment_3)
	{ after(grammarAccess.getBigTitleAccess().getClassDAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BigTitle__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BigTitle__Group_2_0__0__Impl
	rule__BigTitle__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BigTitle__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBigTitleAccess().getVariableAssignment_2_0_0()); }
	(rule__BigTitle__VariableAssignment_2_0_0)
	{ after(grammarAccess.getBigTitleAccess().getVariableAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BigTitle__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BigTitle__Group_2_0__1__Impl
	rule__BigTitle__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BigTitle__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBigTitleAccess().getObjectCAssignment_2_0_1()); }
	(rule__BigTitle__ObjectCAssignment_2_0_1)?
	{ after(grammarAccess.getBigTitleAccess().getObjectCAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BigTitle__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BigTitle__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BigTitle__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBigTitleAccess().getArrayCAssignment_2_0_2()); }
	(rule__BigTitle__ArrayCAssignment_2_0_2)?
	{ after(grammarAccess.getBigTitleAccess().getArrayCAssignment_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubTitle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubTitle__Group__0__Impl
	rule__SubTitle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTitle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubTitleAccess().getSubtitleKeyword_0()); }
	'subtitle'
	{ after(grammarAccess.getSubTitleAccess().getSubtitleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTitle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubTitle__Group__1__Impl
	rule__SubTitle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTitle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubTitleAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getSubTitleAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTitle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubTitle__Group__2__Impl
	rule__SubTitle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTitle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubTitleAccess().getAlternatives_2()); }
	(rule__SubTitle__Alternatives_2)
	{ after(grammarAccess.getSubTitleAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTitle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubTitle__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTitle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubTitleAccess().getClassDAssignment_3()); }
	(rule__SubTitle__ClassDAssignment_3)
	{ after(grammarAccess.getSubTitleAccess().getClassDAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubTitle__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubTitle__Group_2_0__0__Impl
	rule__SubTitle__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTitle__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubTitleAccess().getVariableAssignment_2_0_0()); }
	(rule__SubTitle__VariableAssignment_2_0_0)
	{ after(grammarAccess.getSubTitleAccess().getVariableAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTitle__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubTitle__Group_2_0__1__Impl
	rule__SubTitle__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTitle__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubTitleAccess().getObjectCAssignment_2_0_1()); }
	(rule__SubTitle__ObjectCAssignment_2_0_1)?
	{ after(grammarAccess.getSubTitleAccess().getObjectCAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTitle__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubTitle__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTitle__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubTitleAccess().getArrayCAssignment_2_0_2()); }
	(rule__SubTitle__ArrayCAssignment_2_0_2)?
	{ after(grammarAccess.getSubTitleAccess().getArrayCAssignment_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubSubTitle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubSubTitle__Group__0__Impl
	rule__SubSubTitle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSubTitle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubSubTitleAccess().getSubsubtitleKeyword_0()); }
	'subsubtitle'
	{ after(grammarAccess.getSubSubTitleAccess().getSubsubtitleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSubTitle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubSubTitle__Group__1__Impl
	rule__SubSubTitle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSubTitle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubSubTitleAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getSubSubTitleAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSubTitle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubSubTitle__Group__2__Impl
	rule__SubSubTitle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSubTitle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubSubTitleAccess().getAlternatives_2()); }
	(rule__SubSubTitle__Alternatives_2)
	{ after(grammarAccess.getSubSubTitleAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSubTitle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubSubTitle__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSubTitle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubSubTitleAccess().getClassDAssignment_3()); }
	(rule__SubSubTitle__ClassDAssignment_3)
	{ after(grammarAccess.getSubSubTitleAccess().getClassDAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubSubTitle__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubSubTitle__Group_2_0__0__Impl
	rule__SubSubTitle__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSubTitle__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubSubTitleAccess().getVariableAssignment_2_0_0()); }
	(rule__SubSubTitle__VariableAssignment_2_0_0)
	{ after(grammarAccess.getSubSubTitleAccess().getVariableAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSubTitle__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubSubTitle__Group_2_0__1__Impl
	rule__SubSubTitle__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSubTitle__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubSubTitleAccess().getObjectCAssignment_2_0_1()); }
	(rule__SubSubTitle__ObjectCAssignment_2_0_1)?
	{ after(grammarAccess.getSubSubTitleAccess().getObjectCAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSubTitle__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubSubTitle__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSubTitle__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubSubTitleAccess().getArrayCAssignment_2_0_2()); }
	(rule__SubSubTitle__ArrayCAssignment_2_0_2)?
	{ after(grammarAccess.getSubSubTitleAccess().getArrayCAssignment_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Row__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__0__Impl
	rule__Row__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getRowKeyword_0()); }
	'row'
	{ after(grammarAccess.getRowAccess().getRowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__1__Impl
	rule__Row__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getRowAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__2__Impl
	rule__Row__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getElementRowAssignment_2()); }
	(rule__Row__ElementRowAssignment_2)*
	{ after(grammarAccess.getRowAccess().getElementRowAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Row__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getRowAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Col__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Col__Group__0__Impl
	rule__Col__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColAccess().getColKeyword_0()); }
	'col'
	{ after(grammarAccess.getColAccess().getColKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Col__Group__1__Impl
	rule__Col__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColAccess().getFusionAssignment_1()); }
	(rule__Col__FusionAssignment_1)
	{ after(grammarAccess.getColAccess().getFusionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Col__Group__2__Impl
	rule__Col__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColAccess().getAlternatives_2()); }
	(rule__Col__Alternatives_2)
	{ after(grammarAccess.getColAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Col__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColAccess().getClassDAssignment_3()); }
	(rule__Col__ClassDAssignment_3)
	{ after(grammarAccess.getColAccess().getClassDAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Col__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Col__Group_2_1__0__Impl
	rule__Col__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColAccess().getVariableAssignment_2_1_0()); }
	(rule__Col__VariableAssignment_2_1_0)
	{ after(grammarAccess.getColAccess().getVariableAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Col__Group_2_1__1__Impl
	rule__Col__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColAccess().getObjectCAssignment_2_1_1()); }
	(rule__Col__ObjectCAssignment_2_1_1)?
	{ after(grammarAccess.getColAccess().getObjectCAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Col__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColAccess().getArrayCAssignment_2_1_2()); }
	(rule__Col__ArrayCAssignment_2_1_2)?
	{ after(grammarAccess.getColAccess().getArrayCAssignment_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ArrayC__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayC__Group__0__Impl
	rule__ArrayC__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayC__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayCAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getArrayCAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayC__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayC__Group__1__Impl
	rule__ArrayC__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayC__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayCAccess().getPositionAssignment_1()); }
	(rule__ArrayC__PositionAssignment_1)
	{ after(grammarAccess.getArrayCAccess().getPositionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayC__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ArrayC__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayC__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArrayCAccess().getRightSquareBracketKeyword_2()); }
	']'
	{ after(grammarAccess.getArrayCAccess().getRightSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ObjectC__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectC__Group__0__Impl
	rule__ObjectC__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectC__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectCAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getObjectCAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectC__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ObjectC__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectC__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getObjectCAccess().getNameAssignment_1()); }
	(rule__ObjectC__NameAssignment_1)
	{ after(grammarAccess.getObjectCAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Img__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Img__Group__0__Impl
	rule__Img__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImgAccess().getImgKeyword_0()); }
	'img'
	{ after(grammarAccess.getImgAccess().getImgKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Img__Group__1__Impl
	rule__Img__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImgAccess().getClassDAssignment_1()); }
	(rule__Img__ClassDAssignment_1)
	{ after(grammarAccess.getImgAccess().getClassDAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Img__Group__2__Impl
	rule__Img__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImgAccess().getSrcKeyword_2()); }
	'src'
	{ after(grammarAccess.getImgAccess().getSrcKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Img__Group__3__Impl
	rule__Img__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImgAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getImgAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Img__Group__4__Impl
	rule__Img__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImgAccess().getAlternatives_4()); }
	(rule__Img__Alternatives_4)
	{ after(grammarAccess.getImgAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Img__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImgAccess().getGroup_5()); }
	(rule__Img__Group_5__0)?
	{ after(grammarAccess.getImgAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Img__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Img__Group_4_1__0__Impl
	rule__Img__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImgAccess().getVariableAssignment_4_1_0()); }
	(rule__Img__VariableAssignment_4_1_0)
	{ after(grammarAccess.getImgAccess().getVariableAssignment_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Img__Group_4_1__1__Impl
	rule__Img__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImgAccess().getObjectCAssignment_4_1_1()); }
	(rule__Img__ObjectCAssignment_4_1_1)?
	{ after(grammarAccess.getImgAccess().getObjectCAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group_4_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Img__Group_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group_4_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImgAccess().getArrayCAssignment_4_1_2()); }
	(rule__Img__ArrayCAssignment_4_1_2)?
	{ after(grammarAccess.getImgAccess().getArrayCAssignment_4_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Img__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Img__Group_5__0__Impl
	rule__Img__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImgAccess().getAltKeyword_5_0()); }
	'alt'
	{ after(grammarAccess.getImgAccess().getAltKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Img__Group_5__1__Impl
	rule__Img__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImgAccess().getColonKeyword_5_1()); }
	':'
	{ after(grammarAccess.getImgAccess().getColonKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Img__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImgAccess().getStringAltAssignment_5_2()); }
	(rule__Img__StringAltAssignment_5_2)
	{ after(grammarAccess.getImgAccess().getStringAltAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassD__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassD__Group__0__Impl
	rule__ClassD__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassD__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDAccess().getClassKeyword_0()); }
	'class'
	{ after(grammarAccess.getClassDAccess().getClassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassD__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassD__Group__1__Impl
	rule__ClassD__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassD__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getClassDAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassD__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassD__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassD__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDAccess().getStringAssignment_2()); }
	(rule__ClassD__StringAssignment_2)
	{ after(grammarAccess.getClassDAccess().getStringAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Colspan__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Colspan__Group__0__Impl
	rule__Colspan__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Colspan__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColspanAccess().getColspanKeyword_0()); }
	'colspan'
	{ after(grammarAccess.getColspanAccess().getColspanKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colspan__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Colspan__Group__1__Impl
	rule__Colspan__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Colspan__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColspanAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getColspanAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colspan__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Colspan__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Colspan__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColspanAccess().getAlternatives_2()); }
	(rule__Colspan__Alternatives_2)
	{ after(grammarAccess.getColspanAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rowspan__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rowspan__Group__0__Impl
	rule__Rowspan__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rowspan__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowspanAccess().getRowspanKeyword_0()); }
	'rowspan'
	{ after(grammarAccess.getRowspanAccess().getRowspanKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rowspan__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rowspan__Group__1__Impl
	rule__Rowspan__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rowspan__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowspanAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getRowspanAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rowspan__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rowspan__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rowspan__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRowspanAccess().getAlternatives_2()); }
	(rule__Rowspan__Alternatives_2)
	{ after(grammarAccess.getRowspanAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SumFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumFunction__Group__0__Impl
	rule__SumFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumFunctionAccess().getSUMKeyword_0()); }
	'SUM'
	{ after(grammarAccess.getSumFunctionAccess().getSUMKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumFunction__Group__1__Impl
	rule__SumFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumFunctionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getSumFunctionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumFunction__Group__2__Impl
	rule__SumFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumFunctionAccess().getAlternatives_2()); }
	(rule__SumFunction__Alternatives_2)
	{ after(grammarAccess.getSumFunctionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumFunction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumFunctionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getSumFunctionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SumFunction__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumFunction__Group_2_0__0__Impl
	rule__SumFunction__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumFunctionAccess().getArgument1Assignment_2_0_0()); }
	(rule__SumFunction__Argument1Assignment_2_0_0)
	{ after(grammarAccess.getSumFunctionAccess().getArgument1Assignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumFunction__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumFunctionAccess().getGroup_2_0_1()); }
	(rule__SumFunction__Group_2_0_1__0)*
	{ after(grammarAccess.getSumFunctionAccess().getGroup_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SumFunction__Group_2_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumFunction__Group_2_0_1__0__Impl
	rule__SumFunction__Group_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group_2_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumFunctionAccess().getCommaKeyword_2_0_1_0()); }
	','
	{ after(grammarAccess.getSumFunctionAccess().getCommaKeyword_2_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group_2_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumFunction__Group_2_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group_2_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumFunctionAccess().getArgument1Assignment_2_0_1_1()); }
	(rule__SumFunction__Argument1Assignment_2_0_1_1)
	{ after(grammarAccess.getSumFunctionAccess().getArgument1Assignment_2_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SumFunction__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumFunction__Group_2_1__0__Impl
	rule__SumFunction__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumFunctionAccess().getLeftSquareBracketKeyword_2_1_0()); }
	'['
	{ after(grammarAccess.getSumFunctionAccess().getLeftSquareBracketKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumFunction__Group_2_1__1__Impl
	rule__SumFunction__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSumFunctionAccess().getArgument2Assignment_2_1_1()); }
		(rule__SumFunction__Argument2Assignment_2_1_1)
		{ after(grammarAccess.getSumFunctionAccess().getArgument2Assignment_2_1_1()); }
	)
	(
		{ before(grammarAccess.getSumFunctionAccess().getArgument2Assignment_2_1_1()); }
		(rule__SumFunction__Argument2Assignment_2_1_1)*
		{ after(grammarAccess.getSumFunctionAccess().getArgument2Assignment_2_1_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SumFunction__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSumFunctionAccess().getRightSquareBracketKeyword_2_1_2()); }
	']'
	{ after(grammarAccess.getSumFunctionAccess().getRightSquareBracketKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProdFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdFunction__Group__0__Impl
	rule__ProdFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdFunctionAccess().getPRODKeyword_0()); }
	'PROD'
	{ after(grammarAccess.getProdFunctionAccess().getPRODKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdFunction__Group__1__Impl
	rule__ProdFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdFunctionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getProdFunctionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdFunction__Group__2__Impl
	rule__ProdFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdFunctionAccess().getAlternatives_2()); }
	(rule__ProdFunction__Alternatives_2)
	{ after(grammarAccess.getProdFunctionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdFunction__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdFunctionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getProdFunctionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProdFunction__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdFunction__Group_2_0__0__Impl
	rule__ProdFunction__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdFunctionAccess().getArgument1Assignment_2_0_0()); }
	(rule__ProdFunction__Argument1Assignment_2_0_0)
	{ after(grammarAccess.getProdFunctionAccess().getArgument1Assignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdFunction__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdFunctionAccess().getGroup_2_0_1()); }
	(rule__ProdFunction__Group_2_0_1__0)*
	{ after(grammarAccess.getProdFunctionAccess().getGroup_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProdFunction__Group_2_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdFunction__Group_2_0_1__0__Impl
	rule__ProdFunction__Group_2_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Group_2_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdFunctionAccess().getCommaKeyword_2_0_1_0()); }
	','
	{ after(grammarAccess.getProdFunctionAccess().getCommaKeyword_2_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Group_2_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdFunction__Group_2_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Group_2_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdFunctionAccess().getArgument1Assignment_2_0_1_1()); }
	(rule__ProdFunction__Argument1Assignment_2_0_1_1)
	{ after(grammarAccess.getProdFunctionAccess().getArgument1Assignment_2_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProdFunction__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdFunction__Group_2_1__0__Impl
	rule__ProdFunction__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdFunctionAccess().getLeftSquareBracketKeyword_2_1_0()); }
	'['
	{ after(grammarAccess.getProdFunctionAccess().getLeftSquareBracketKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdFunction__Group_2_1__1__Impl
	rule__ProdFunction__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdFunctionAccess().getArgument2Assignment_2_1_1()); }
	(rule__ProdFunction__Argument2Assignment_2_1_1)
	{ after(grammarAccess.getProdFunctionAccess().getArgument2Assignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProdFunction__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProdFunctionAccess().getRightSquareBracketKeyword_2_1_2()); }
	']'
	{ after(grammarAccess.getProdFunctionAccess().getRightSquareBracketKeyword_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DivFunction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DivFunction__Group__0__Impl
	rule__DivFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivFunction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivFunctionAccess().getDIVKeyword_0()); }
	'DIV'
	{ after(grammarAccess.getDivFunctionAccess().getDIVKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DivFunction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DivFunction__Group__1__Impl
	rule__DivFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DivFunction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivFunctionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getDivFunctionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DivFunction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DivFunction__Group__2__Impl
	rule__DivFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DivFunction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivFunctionAccess().getArgument1Assignment_2()); }
	(rule__DivFunction__Argument1Assignment_2)
	{ after(grammarAccess.getDivFunctionAccess().getArgument1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DivFunction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DivFunction__Group__3__Impl
	rule__DivFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DivFunction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivFunctionAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getDivFunctionAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DivFunction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DivFunction__Group__4__Impl
	rule__DivFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DivFunction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivFunctionAccess().getArgument1Assignment_4()); }
	(rule__DivFunction__Argument1Assignment_4)
	{ after(grammarAccess.getDivFunctionAccess().getArgument1Assignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DivFunction__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DivFunction__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivFunction__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivFunctionAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getDivFunctionAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument1__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument1__Group_4__0__Impl
	rule__Argument1__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument1__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument1Access().getVariableAssignment_4_0()); }
	(rule__Argument1__VariableAssignment_4_0)
	{ after(grammarAccess.getArgument1Access().getVariableAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument1__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument1__Group_4__1__Impl
	rule__Argument1__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument1__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument1Access().getObjectCAssignment_4_1()); }
	(rule__Argument1__ObjectCAssignment_4_1)?
	{ after(grammarAccess.getArgument1Access().getObjectCAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument1__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument1__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument1__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument1Access().getArrayCAssignment_4_2()); }
	(rule__Argument1__ArrayCAssignment_4_2)?
	{ after(grammarAccess.getArgument1Access().getArrayCAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument2__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument2__Group__0__Impl
	rule__Argument2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument2Access().getAlternatives_0()); }
	(rule__Argument2__Alternatives_0)
	{ after(grammarAccess.getArgument2Access().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument2__Group__1__Impl
	rule__Argument2__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument2Access().getGroup_1()); }
	(rule__Argument2__Group_1__0)?
	{ after(grammarAccess.getArgument2Access().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument2__Group__2__Impl
	rule__Argument2__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument2Access().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getArgument2Access().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument2__Group__3__Impl
	rule__Argument2__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument2Access().getAlternatives_3()); }
	(rule__Argument2__Alternatives_3)
	{ after(grammarAccess.getArgument2Access().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument2__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument2Access().getGroup_4()); }
	(rule__Argument2__Group_4__0)?
	{ after(grammarAccess.getArgument2Access().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument2__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument2__Group_1__0__Impl
	rule__Argument2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument2Access().getAlternatives_1_0()); }
	(rule__Argument2__Alternatives_1_0)
	{ after(grammarAccess.getArgument2Access().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument2__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument2Access().getAlternatives_1_1()); }
	(rule__Argument2__Alternatives_1_1)
	{ after(grammarAccess.getArgument2Access().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Argument2__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument2__Group_4__0__Impl
	rule__Argument2__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument2Access().getAlternatives_4_0()); }
	(rule__Argument2__Alternatives_4_0)
	{ after(grammarAccess.getArgument2Access().getAlternatives_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Argument2__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgument2Access().getAlternatives_4_1()); }
	(rule__Argument2__Alternatives_4_1)
	{ after(grammarAccess.getArgument2Access().getAlternatives_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassVariable__Group__0__Impl
	rule__ClassVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassVariableAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getClassVariableAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassVariableAccess().getNameAssignment_1()); }
	(rule__ClassVariable__NameAssignment_1)
	{ after(grammarAccess.getClassVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Conditional__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional__Group__0__Impl
	rule__Conditional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAccess().getIfConditionAssignment_0()); }
	(rule__Conditional__IfConditionAssignment_0)
	{ after(grammarAccess.getConditionalAccess().getIfConditionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Conditional__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionalAccess().getElseCondionAssignment_1()); }
	(rule__Conditional__ElseCondionAssignment_1)*
	{ after(grammarAccess.getConditionalAccess().getElseCondionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__0__Impl
	rule__IfCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfConditionAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__1__Impl
	rule__IfCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIfConditionAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__2__Impl
	rule__IfCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getConditionAssignment_2()); }
	(rule__IfCondition__ConditionAssignment_2)
	{ after(grammarAccess.getIfConditionAccess().getConditionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__3__Impl
	rule__IfCondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getIfConditionAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__4__Impl
	rule__IfCondition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getThenKeyword_4()); }
	'then'
	{ after(grammarAccess.getIfConditionAccess().getThenKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__5__Impl
	rule__IfCondition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getIfConditionAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__6__Impl
	rule__IfCondition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getOtherElementAssignment_6()); }
	(rule__IfCondition__OtherElementAssignment_6)*
	{ after(grammarAccess.getIfConditionAccess().getOtherElementAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfCondition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfConditionAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getIfConditionAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseCondition__Group__0__Impl
	rule__ElseCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseConditionAccess().getElseKeyword_0()); }
	'else'
	{ after(grammarAccess.getElseConditionAccess().getElseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseConditionAccess().getAlternatives_1()); }
	(rule__ElseCondition__Alternatives_1)
	{ after(grammarAccess.getElseConditionAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseCondition__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseCondition__Group_1_0__0__Impl
	rule__ElseCondition__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseConditionAccess().getLeftCurlyBracketKeyword_1_0_0()); }
	'{'
	{ after(grammarAccess.getElseConditionAccess().getLeftCurlyBracketKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseCondition__Group_1_0__1__Impl
	rule__ElseCondition__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseConditionAccess().getOtherElementAssignment_1_0_1()); }
	(rule__ElseCondition__OtherElementAssignment_1_0_1)
	{ after(grammarAccess.getElseConditionAccess().getOtherElementAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseCondition__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseConditionAccess().getRightCurlyBracketKeyword_1_0_2()); }
	'}'
	{ after(grammarAccess.getElseConditionAccess().getRightCurlyBracketKeyword_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition1__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition1__Group__0__Impl
	rule__Condition1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition1__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondition1Access().getFirstPartAssignment_0()); }
	(rule__Condition1__FirstPartAssignment_0)
	{ after(grammarAccess.getCondition1Access().getFirstPartAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition1__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition1__Group__1__Impl
	rule__Condition1__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition1__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondition1Access().getCompareAssignment_1()); }
	(rule__Condition1__CompareAssignment_1)
	{ after(grammarAccess.getCondition1Access().getCompareAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition1__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition1__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition1__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCondition1Access().getSecondPartAssignment_2()); }
	(rule__Condition1__SecondPartAssignment_2)
	{ after(grammarAccess.getCondition1Access().getSecondPartAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Part__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_0__0__Impl
	rule__Part__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getVariableAssignment_0_0()); }
	(rule__Part__VariableAssignment_0_0)
	{ after(grammarAccess.getPartAccess().getVariableAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_0__1__Impl
	rule__Part__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getObjectCAssignment_0_1()); }
	(rule__Part__ObjectCAssignment_0_1)?
	{ after(grammarAccess.getPartAccess().getObjectCAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Part__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPartAccess().getArrayCAssignment_0_2()); }
	(rule__Part__ArrayCAssignment_0_2)?
	{ after(grammarAccess.getPartAccess().getArrayCAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__With__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__With__Group__0__Impl
	rule__With__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__With__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithAccess().getWithKeyword_0()); }
	'with'
	{ after(grammarAccess.getWithAccess().getWithKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__With__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__With__Group__1__Impl
	rule__With__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__With__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithAccess().getInitAssignment_1()); }
	(rule__With__InitAssignment_1)
	{ after(grammarAccess.getWithAccess().getInitAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__With__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__With__Group__2__Impl
	rule__With__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__With__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getWithAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__With__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__With__Group__3__Impl
	rule__With__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__With__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithAccess().getVariableAssignment_3()); }
	(rule__With__VariableAssignment_3)
	{ after(grammarAccess.getWithAccess().getVariableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__With__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__With__Group__4__Impl
	rule__With__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__With__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithAccess().getObjectCAssignment_4()); }
	(rule__With__ObjectCAssignment_4)?
	{ after(grammarAccess.getWithAccess().getObjectCAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__With__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__With__Group__5__Impl
	rule__With__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__With__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithAccess().getArrayCAssignment_5()); }
	(rule__With__ArrayCAssignment_5)?
	{ after(grammarAccess.getWithAccess().getArrayCAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__With__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__With__Group__6__Impl
	rule__With__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__With__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithAccess().getLeftCurlyBracketKeyword_6()); }
	'{'
	{ after(grammarAccess.getWithAccess().getLeftCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__With__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__With__Group__7__Impl
	rule__With__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__With__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithAccess().getOtherElementAssignment_7()); }
	(rule__With__OtherElementAssignment_7)*
	{ after(grammarAccess.getWithAccess().getOtherElementAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__With__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__With__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__With__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWithAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getWithAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__0__Impl
	rule__For__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getIncrementAssignment_0()); }
	(rule__For__IncrementAssignment_0)
	{ after(grammarAccess.getForAccess().getIncrementAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__1__Impl
	rule__For__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getFromKeyword_1()); }
	'from'
	{ after(grammarAccess.getForAccess().getFromKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__2__Impl
	rule__For__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getAlternatives_2()); }
	(rule__For__Alternatives_2)
	{ after(grammarAccess.getForAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__3__Impl
	rule__For__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getToKeyword_3()); }
	'to'
	{ after(grammarAccess.getForAccess().getToKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__4__Impl
	rule__For__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getAlternatives_4()); }
	(rule__For__Alternatives_4)
	{ after(grammarAccess.getForAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__5__Impl
	rule__For__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getForAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__6__Impl
	rule__For__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getOtherElementAssignment_6()); }
	(rule__For__OtherElementAssignment_6)*
	{ after(grammarAccess.getForAccess().getOtherElementAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getForAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__For__Group_4_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group_4_0__0__Impl
	rule__For__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group_4_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getEndWithVariableAssignment_4_0_0()); }
	(rule__For__EndWithVariableAssignment_4_0_0)
	{ after(grammarAccess.getForAccess().getEndWithVariableAssignment_4_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group_4_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__For__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__For__Group_4_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getForAccess().getObjectCAssignment_4_0_1()); }
	(rule__For__ObjectCAssignment_4_0_1)?
	{ after(grammarAccess.getForAccess().getObjectCAssignment_4_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Style__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Style__Group__0__Impl
	rule__Style__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStyleAccess().getStyleKeyword_0()); }
	'style'
	{ after(grammarAccess.getStyleAccess().getStyleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Style__Group__1__Impl
	rule__Style__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStyleAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getStyleAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Style__Group__2__Impl
	rule__Style__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStyleAccess().getCssAssignment_2()); }
	(rule__Style__CssAssignment_2)
	{ after(grammarAccess.getStyleAccess().getCssAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Style__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStyleAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getStyleAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Rule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__0__Impl
	rule__Rule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getSelectorAssignment_0()); }
	(rule__Rule__SelectorAssignment_0)
	{ after(grammarAccess.getRuleAccess().getSelectorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__1__Impl
	rule__Rule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getRuleAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__2__Impl
	rule__Rule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getDeclarationsAssignment_2()); }
	(rule__Rule__DeclarationsAssignment_2)*
	{ after(grammarAccess.getRuleAccess().getDeclarationsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Rule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getRuleAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IDSelector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IDSelector__Group__0__Impl
	rule__IDSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IDSelector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIDSelectorAccess().getNumberSignKeyword_0()); }
	'#'
	{ after(grammarAccess.getIDSelectorAccess().getNumberSignKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IDSelector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IDSelector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IDSelector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIDSelectorAccess().getNameAssignment_1()); }
	(rule__IDSelector__NameAssignment_1)
	{ after(grammarAccess.getIDSelectorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassSelector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSelector__Group__0__Impl
	rule__ClassSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSelector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSelectorAccess().getFullStopKeyword_0()); }
	'.'
	{ after(grammarAccess.getClassSelectorAccess().getFullStopKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSelector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassSelector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSelector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassSelectorAccess().getNameAssignment_1()); }
	(rule__ClassSelector__NameAssignment_1)
	{ after(grammarAccess.getClassSelectorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getPropertyAssignment_0()); }
	(rule__Declaration__PropertyAssignment_0)
	{ after(grammarAccess.getDeclarationAccess().getPropertyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__1__Impl
	rule__Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getDeclarationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__2__Impl
	rule__Declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getDeclarationAccess().getCssValueAssignment_2()); }
		(rule__Declaration__CssValueAssignment_2)
		{ after(grammarAccess.getDeclarationAccess().getCssValueAssignment_2()); }
	)
	(
		{ before(grammarAccess.getDeclarationAccess().getCssValueAssignment_2()); }
		(rule__Declaration__CssValueAssignment_2)*
		{ after(grammarAccess.getDeclarationAccess().getCssValueAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Declaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeclarationAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getDeclarationAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Float__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group__0__Impl
	rule__Float__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getFirstIntAssignment_0()); }
	(rule__Float__FirstIntAssignment_0)
	{ after(grammarAccess.getFloatAccess().getFirstIntAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group__1__Impl
	rule__Float__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getFloatAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Float__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatAccess().getSecondIntAssignment_2()); }
	(rule__Float__SecondIntAssignment_2)
	{ after(grammarAccess.getFloatAccess().getSecondIntAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__DocumentAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDocumentDocumentParserRuleCall_0()); }
		ruleDocument
		{ after(grammarAccess.getModelAccess().getDocumentDocumentParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__DataAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDocumentAccess().getDataDataParserRuleCall_0_0()); }
		ruleData
		{ after(grammarAccess.getDocumentAccess().getDataDataParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__BuildAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDocumentAccess().getBuildBuildParserRuleCall_1_0()); }
		ruleBuild
		{ after(grammarAccess.getDocumentAccess().getBuildBuildParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Document__StyleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDocumentAccess().getStyleStyleParserRuleCall_2_0()); }
		ruleStyle
		{ after(grammarAccess.getDocumentAccess().getStyleStyleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__KeyValueAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getKeyValueKeyValueParserRuleCall_2_0_0()); }
		ruleKeyValue
		{ after(grammarAccess.getDataAccess().getKeyValueKeyValueParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Data__KeyValueAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataAccess().getKeyValueKeyValueParserRuleCall_2_1_1_0()); }
		ruleKeyValue
		{ after(grammarAccess.getDataAccess().getKeyValueKeyValueParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValue__StringAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyValueAccess().getStringSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getKeyValueAccess().getStringSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValue__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKeyValueAccess().getValueValueParserRuleCall_2_0()); }
		ruleValue
		{ after(grammarAccess.getKeyValueAccess().getValueValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__StringAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getStringSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getValueAccess().getStringSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__IntegerAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getIntegerINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getValueAccess().getIntegerINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__FloatValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getFloatValueFloatParserRuleCall_2_0()); }
		ruleFloat
		{ after(grammarAccess.getValueAccess().getFloatValueFloatParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__TrueVAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getTrueVTRUEParserRuleCall_3_0()); }
		ruleTRUE
		{ after(grammarAccess.getValueAccess().getTrueVTRUEParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__FalseVAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getFalseVFALSEParserRuleCall_4_0()); }
		ruleFALSE
		{ after(grammarAccess.getValueAccess().getFalseVFALSEParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ArrayAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getArrayArrayParserRuleCall_5_0()); }
		ruleArray
		{ after(grammarAccess.getValueAccess().getArrayArrayParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__NestedObjectAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getNestedObjectNestedObjectParserRuleCall_6_0()); }
		ruleNestedObject
		{ after(grammarAccess.getValueAccess().getNestedObjectNestedObjectParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__VariableAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getVariableVariableParserRuleCall_7_0()); }
		ruleVariable
		{ after(grammarAccess.getValueAccess().getVariableVariableParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__ValuesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_1_0_0()); }
		ruleValue
		{ after(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__ValuesAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_1_1_1_0()); }
		ruleValue
		{ after(grammarAccess.getArrayAccess().getValuesValueParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__KeyValueAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedObjectAccess().getKeyValueKeyValueParserRuleCall_1_0_0()); }
		ruleKeyValue
		{ after(grammarAccess.getNestedObjectAccess().getKeyValueKeyValueParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__KeyValueAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNestedObjectAccess().getKeyValueKeyValueParserRuleCall_1_1_1_0()); }
		ruleKeyValue
		{ after(grammarAccess.getNestedObjectAccess().getKeyValueKeyValueParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuildAccess().getVariableVariableParserRuleCall_1_0()); }
		ruleVariable
		{ after(grammarAccess.getBuildAccess().getVariableVariableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__ExtensionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuildAccess().getExtensionsExtensionListParserRuleCall_2_0()); }
		ruleExtensionList
		{ after(grammarAccess.getBuildAccess().getExtensionsExtensionListParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__AllInOneAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuildAccess().getAllInOneAllInOneKeyword_3_0_0()); }
		(
			{ before(grammarAccess.getBuildAccess().getAllInOneAllInOneKeyword_3_0_0()); }
			'allInOne'
			{ after(grammarAccess.getBuildAccess().getAllInOneAllInOneKeyword_3_0_0()); }
		)
		{ after(grammarAccess.getBuildAccess().getAllInOneAllInOneKeyword_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__TrueVAssignment_3_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuildAccess().getTrueVTRUEParserRuleCall_3_2_0_0()); }
		ruleTRUE
		{ after(grammarAccess.getBuildAccess().getTrueVTRUEParserRuleCall_3_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__FalseFAssignment_3_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuildAccess().getFalseFFALSEParserRuleCall_3_2_1_0()); }
		ruleFALSE
		{ after(grammarAccess.getBuildAccess().getFalseFFALSEParserRuleCall_3_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Build__ElementBuildAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBuildAccess().getElementBuildElementBuildParserRuleCall_5_0()); }
		ruleElementBuild
		{ after(grammarAccess.getBuildAccess().getElementBuildElementBuildParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionList__ExtensionsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtensionListAccess().getExtensionsSingleExtensionParserRuleCall_3_0_0()); }
		ruleSingleExtension
		{ after(grammarAccess.getExtensionListAccess().getExtensionsSingleExtensionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionList__ExtensionsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtensionListAccess().getExtensionsSingleExtensionParserRuleCall_3_1_1_0()); }
		ruleSingleExtension
		{ after(grammarAccess.getExtensionListAccess().getExtensionsSingleExtensionParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleExtension__XlsxAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleExtensionAccess().getXlsxXlsxKeyword_0_0()); }
		(
			{ before(grammarAccess.getSingleExtensionAccess().getXlsxXlsxKeyword_0_0()); }
			'xlsx'
			{ after(grammarAccess.getSingleExtensionAccess().getXlsxXlsxKeyword_0_0()); }
		)
		{ after(grammarAccess.getSingleExtensionAccess().getXlsxXlsxKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleExtension__HtmlAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleExtensionAccess().getHtmlHtmlKeyword_1_0()); }
		(
			{ before(grammarAccess.getSingleExtensionAccess().getHtmlHtmlKeyword_1_0()); }
			'html'
			{ after(grammarAccess.getSingleExtensionAccess().getHtmlHtmlKeyword_1_0()); }
		)
		{ after(grammarAccess.getSingleExtensionAccess().getHtmlHtmlKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleExtension__PdfAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleExtensionAccess().getPdfPdfKeyword_2_0()); }
		(
			{ before(grammarAccess.getSingleExtensionAccess().getPdfPdfKeyword_2_0()); }
			'pdf'
			{ after(grammarAccess.getSingleExtensionAccess().getPdfPdfKeyword_2_0()); }
		)
		{ after(grammarAccess.getSingleExtensionAccess().getPdfPdfKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleExtension__DocAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSingleExtensionAccess().getDocDocxKeyword_3_0()); }
		(
			{ before(grammarAccess.getSingleExtensionAccess().getDocDocxKeyword_3_0()); }
			'docx'
			{ after(grammarAccess.getSingleExtensionAccess().getDocDocxKeyword_3_0()); }
		)
		{ after(grammarAccess.getSingleExtensionAccess().getDocDocxKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementBuild__VariableDAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementBuildAccess().getVariableDVariableDParserRuleCall_0_0()); }
		ruleVariableD
		{ after(grammarAccess.getElementBuildAccess().getVariableDVariableDParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementBuild__PageAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementBuildAccess().getPagePageParserRuleCall_1_0()); }
		rulePage
		{ after(grammarAccess.getElementBuildAccess().getPagePageParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementBuild__LoopAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementBuildAccess().getLoopLoopParserRuleCall_2_0()); }
		ruleLoop
		{ after(grammarAccess.getElementBuildAccess().getLoopLoopParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementBuild__ConditionalAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementBuildAccess().getConditionalConditionalParserRuleCall_3_0()); }
		ruleConditional
		{ after(grammarAccess.getElementBuildAccess().getConditionalConditionalParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperVariable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSuperVariableAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getSuperVariableAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableD__SuperVariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDAccess().getSuperVariableSuperVariableParserRuleCall_0_0()); }
		ruleSuperVariable
		{ after(grammarAccess.getVariableDAccess().getSuperVariableSuperVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableD__ValueAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDAccess().getValueValueParserRuleCall_2_0_0()); }
		ruleValue
		{ after(grammarAccess.getVariableDAccess().getValueValueParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableD__ClassVariableAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDAccess().getClassVariableClassVariableParserRuleCall_2_1_0()); }
		ruleClassVariable
		{ after(grammarAccess.getVariableDAccess().getClassVariableClassVariableParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableD__FunctionAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDAccess().getFunctionFunctionParserRuleCall_2_2_0()); }
		ruleFunction
		{ after(grammarAccess.getVariableDAccess().getFunctionFunctionParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__VariableAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPageAccess().getVariableVariableParserRuleCall_2_0_0_0()); }
		ruleVariable
		{ after(grammarAccess.getPageAccess().getVariableVariableParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__ObjectCAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPageAccess().getObjectCObjectCParserRuleCall_2_0_1_0()); }
		ruleObjectC
		{ after(grammarAccess.getPageAccess().getObjectCObjectCParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__ArrayCAssignment_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPageAccess().getArrayCArrayCParserRuleCall_2_0_2_0()); }
		ruleArrayC
		{ after(grammarAccess.getPageAccess().getArrayCArrayCParserRuleCall_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__StringAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPageAccess().getStringSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPageAccess().getStringSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__TitlesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPageAccess().getTitlesTitleParserRuleCall_5_0()); }
		ruleTitle
		{ after(grammarAccess.getPageAccess().getTitlesTitleParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__ElementPageAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPageAccess().getElementPageElementPageParserRuleCall_6_0()); }
		ruleElementPage
		{ after(grammarAccess.getPageAccess().getElementPageElementPageParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPage__RowAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementPageAccess().getRowRowParserRuleCall_0_0()); }
		ruleRow
		{ after(grammarAccess.getElementPageAccess().getRowRowParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPage__LoopAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementPageAccess().getLoopLoopParserRuleCall_1_0()); }
		ruleLoop
		{ after(grammarAccess.getElementPageAccess().getLoopLoopParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPage__ConditionalAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementPageAccess().getConditionalConditionalParserRuleCall_2_0()); }
		ruleConditional
		{ after(grammarAccess.getElementPageAccess().getConditionalConditionalParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementPage__VariableAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementPageAccess().getVariableVariableDParserRuleCall_3_0_0()); }
		ruleVariableD
		{ after(grammarAccess.getElementPageAccess().getVariableVariableDParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__BigTitleAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTitleAccess().getBigTitleBigTitleParserRuleCall_0_0()); }
		ruleBigTitle
		{ after(grammarAccess.getTitleAccess().getBigTitleBigTitleParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__SubTitleAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTitleAccess().getSubTitleSubTitleParserRuleCall_1_0()); }
		ruleSubTitle
		{ after(grammarAccess.getTitleAccess().getSubTitleSubTitleParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Title__SubSubTitleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTitleAccess().getSubSubTitleSubSubTitleParserRuleCall_2_0()); }
		ruleSubSubTitle
		{ after(grammarAccess.getTitleAccess().getSubSubTitleSubSubTitleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BigTitle__VariableAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBigTitleAccess().getVariableVariableParserRuleCall_2_0_0_0()); }
		ruleVariable
		{ after(grammarAccess.getBigTitleAccess().getVariableVariableParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BigTitle__ObjectCAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBigTitleAccess().getObjectCObjectCParserRuleCall_2_0_1_0()); }
		ruleObjectC
		{ after(grammarAccess.getBigTitleAccess().getObjectCObjectCParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BigTitle__ArrayCAssignment_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBigTitleAccess().getArrayCArrayCParserRuleCall_2_0_2_0()); }
		ruleArrayC
		{ after(grammarAccess.getBigTitleAccess().getArrayCArrayCParserRuleCall_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BigTitle__StringAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBigTitleAccess().getStringSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getBigTitleAccess().getStringSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BigTitle__ClassDAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBigTitleAccess().getClassDClassDParserRuleCall_3_0()); }
		ruleClassD
		{ after(grammarAccess.getBigTitleAccess().getClassDClassDParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTitle__VariableAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubTitleAccess().getVariableVariableParserRuleCall_2_0_0_0()); }
		ruleVariable
		{ after(grammarAccess.getSubTitleAccess().getVariableVariableParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTitle__ObjectCAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubTitleAccess().getObjectCObjectCParserRuleCall_2_0_1_0()); }
		ruleObjectC
		{ after(grammarAccess.getSubTitleAccess().getObjectCObjectCParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTitle__ArrayCAssignment_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubTitleAccess().getArrayCArrayCParserRuleCall_2_0_2_0()); }
		ruleArrayC
		{ after(grammarAccess.getSubTitleAccess().getArrayCArrayCParserRuleCall_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTitle__StringAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubTitleAccess().getStringSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSubTitleAccess().getStringSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubTitle__ClassDAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubTitleAccess().getClassDClassDParserRuleCall_3_0()); }
		ruleClassD
		{ after(grammarAccess.getSubTitleAccess().getClassDClassDParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSubTitle__VariableAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubSubTitleAccess().getVariableVariableParserRuleCall_2_0_0_0()); }
		ruleVariable
		{ after(grammarAccess.getSubSubTitleAccess().getVariableVariableParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSubTitle__ObjectCAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubSubTitleAccess().getObjectCObjectCParserRuleCall_2_0_1_0()); }
		ruleObjectC
		{ after(grammarAccess.getSubSubTitleAccess().getObjectCObjectCParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSubTitle__ArrayCAssignment_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubSubTitleAccess().getArrayCArrayCParserRuleCall_2_0_2_0()); }
		ruleArrayC
		{ after(grammarAccess.getSubSubTitleAccess().getArrayCArrayCParserRuleCall_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSubTitle__StringAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubSubTitleAccess().getStringSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSubSubTitleAccess().getStringSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSubTitle__ClassDAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubSubTitleAccess().getClassDClassDParserRuleCall_3_0()); }
		ruleClassD
		{ after(grammarAccess.getSubSubTitleAccess().getClassDClassDParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Row__ElementRowAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowAccess().getElementRowElementRowParserRuleCall_2_0()); }
		ruleElementRow
		{ after(grammarAccess.getRowAccess().getElementRowElementRowParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRow__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementRowAccess().getVariableVariableParserRuleCall_0_0()); }
		ruleVariable
		{ after(grammarAccess.getElementRowAccess().getVariableVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRow__VariableDAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementRowAccess().getVariableDVariableDParserRuleCall_1_0()); }
		ruleVariableD
		{ after(grammarAccess.getElementRowAccess().getVariableDVariableDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRow__ColAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementRowAccess().getColColParserRuleCall_2_0()); }
		ruleCol
		{ after(grammarAccess.getElementRowAccess().getColColParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRow__ConditionalAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementRowAccess().getConditionalConditionalParserRuleCall_3_0()); }
		ruleConditional
		{ after(grammarAccess.getElementRowAccess().getConditionalConditionalParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementRow__LoopAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementRowAccess().getLoopLoopParserRuleCall_4_0()); }
		ruleLoop
		{ after(grammarAccess.getElementRowAccess().getLoopLoopParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__FusionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColAccess().getFusionFusionParserRuleCall_1_0()); }
		ruleFusion
		{ after(grammarAccess.getColAccess().getFusionFusionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__ImgAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColAccess().getImgImgParserRuleCall_2_0_0()); }
		ruleImg
		{ after(grammarAccess.getColAccess().getImgImgParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__VariableAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColAccess().getVariableVariableParserRuleCall_2_1_0_0()); }
		ruleVariable
		{ after(grammarAccess.getColAccess().getVariableVariableParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__ObjectCAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColAccess().getObjectCObjectCParserRuleCall_2_1_1_0()); }
		ruleObjectC
		{ after(grammarAccess.getColAccess().getObjectCObjectCParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__ArrayCAssignment_2_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColAccess().getArrayCArrayCParserRuleCall_2_1_2_0()); }
		ruleArrayC
		{ after(grammarAccess.getColAccess().getArrayCArrayCParserRuleCall_2_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__VariableDAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColAccess().getVariableDVariableDParserRuleCall_2_2_0()); }
		ruleVariableD
		{ after(grammarAccess.getColAccess().getVariableDVariableDParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__StringAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColAccess().getStringSTRINGTerminalRuleCall_2_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getColAccess().getStringSTRINGTerminalRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__IntegerAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColAccess().getIntegerINTTerminalRuleCall_2_4_0()); }
		RULE_INT
		{ after(grammarAccess.getColAccess().getIntegerINTTerminalRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__FloatValueAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColAccess().getFloatValueFloatParserRuleCall_2_5_0()); }
		ruleFloat
		{ after(grammarAccess.getColAccess().getFloatValueFloatParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__FunctionAssignment_2_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColAccess().getFunctionFunctionParserRuleCall_2_6_0()); }
		ruleFunction
		{ after(grammarAccess.getColAccess().getFunctionFunctionParserRuleCall_2_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Col__ClassDAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColAccess().getClassDClassDParserRuleCall_3_0()); }
		ruleClassD
		{ after(grammarAccess.getColAccess().getClassDClassDParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ArrayC__PositionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArrayCAccess().getPositionPositionParserRuleCall_1_0()); }
		rulePosition
		{ after(grammarAccess.getArrayCAccess().getPositionPositionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__IntegerAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionAccess().getIntegerINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getPositionAccess().getIntegerINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Position__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPositionAccess().getVariableVariableParserRuleCall_1_0()); }
		ruleVariable
		{ after(grammarAccess.getPositionAccess().getVariableVariableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ObjectC__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getObjectCAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getObjectCAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__ClassDAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImgAccess().getClassDClassDParserRuleCall_1_0()); }
		ruleClassD
		{ after(grammarAccess.getImgAccess().getClassDClassDParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__StringAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImgAccess().getStringSTRINGTerminalRuleCall_4_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getImgAccess().getStringSTRINGTerminalRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__VariableAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImgAccess().getVariableVariableParserRuleCall_4_1_0_0()); }
		ruleVariable
		{ after(grammarAccess.getImgAccess().getVariableVariableParserRuleCall_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__ObjectCAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImgAccess().getObjectCObjectCParserRuleCall_4_1_1_0()); }
		ruleObjectC
		{ after(grammarAccess.getImgAccess().getObjectCObjectCParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__ArrayCAssignment_4_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImgAccess().getArrayCArrayCParserRuleCall_4_1_2_0()); }
		ruleArrayC
		{ after(grammarAccess.getImgAccess().getArrayCArrayCParserRuleCall_4_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Img__StringAltAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImgAccess().getStringAltSTRINGTerminalRuleCall_5_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getImgAccess().getStringAltSTRINGTerminalRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassD__StringAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDAccess().getStringSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getClassDAccess().getStringSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fusion__ColspanAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFusionAccess().getColspanColspanParserRuleCall_0_0()); }
		ruleColspan
		{ after(grammarAccess.getFusionAccess().getColspanColspanParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fusion__RowspanAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFusionAccess().getRowspanRowspanParserRuleCall_1_0()); }
		ruleRowspan
		{ after(grammarAccess.getFusionAccess().getRowspanRowspanParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colspan__IntegerAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColspanAccess().getIntegerINTTerminalRuleCall_2_0_0()); }
		RULE_INT
		{ after(grammarAccess.getColspanAccess().getIntegerINTTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Colspan__VariableAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColspanAccess().getVariableVariableParserRuleCall_2_1_0()); }
		ruleVariable
		{ after(grammarAccess.getColspanAccess().getVariableVariableParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rowspan__IntegerAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowspanAccess().getIntegerINTTerminalRuleCall_2_0_0()); }
		RULE_INT
		{ after(grammarAccess.getRowspanAccess().getIntegerINTTerminalRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rowspan__VariableAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRowspanAccess().getVariableVariableParserRuleCall_2_1_0()); }
		ruleVariable
		{ after(grammarAccess.getRowspanAccess().getVariableVariableParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__SumFunctionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getSumFunctionSumFunctionParserRuleCall_0_0()); }
		ruleSumFunction
		{ after(grammarAccess.getFunctionAccess().getSumFunctionSumFunctionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ProdFunctionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getProdFunctionProdFunctionParserRuleCall_1_0()); }
		ruleProdFunction
		{ after(grammarAccess.getFunctionAccess().getProdFunctionProdFunctionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__DivFunctionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getDivFunctionDivFunctionParserRuleCall_2_0()); }
		ruleDivFunction
		{ after(grammarAccess.getFunctionAccess().getDivFunctionDivFunctionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Argument1Assignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumFunctionAccess().getArgument1Argument1ParserRuleCall_2_0_0_0()); }
		ruleArgument1
		{ after(grammarAccess.getSumFunctionAccess().getArgument1Argument1ParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Argument1Assignment_2_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumFunctionAccess().getArgument1Argument1ParserRuleCall_2_0_1_1_0()); }
		ruleArgument1
		{ after(grammarAccess.getSumFunctionAccess().getArgument1Argument1ParserRuleCall_2_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SumFunction__Argument2Assignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSumFunctionAccess().getArgument2Argument2ParserRuleCall_2_1_1_0()); }
		ruleArgument2
		{ after(grammarAccess.getSumFunctionAccess().getArgument2Argument2ParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Argument1Assignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProdFunctionAccess().getArgument1Argument1ParserRuleCall_2_0_0_0()); }
		ruleArgument1
		{ after(grammarAccess.getProdFunctionAccess().getArgument1Argument1ParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Argument1Assignment_2_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProdFunctionAccess().getArgument1Argument1ParserRuleCall_2_0_1_1_0()); }
		ruleArgument1
		{ after(grammarAccess.getProdFunctionAccess().getArgument1Argument1ParserRuleCall_2_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProdFunction__Argument2Assignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProdFunctionAccess().getArgument2Argument2ParserRuleCall_2_1_1_0()); }
		ruleArgument2
		{ after(grammarAccess.getProdFunctionAccess().getArgument2Argument2ParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DivFunction__Argument1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDivFunctionAccess().getArgument1Argument1ParserRuleCall_2_0()); }
		ruleArgument1
		{ after(grammarAccess.getDivFunctionAccess().getArgument1Argument1ParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DivFunction__Argument1Assignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDivFunctionAccess().getArgument1Argument1ParserRuleCall_4_0()); }
		ruleArgument1
		{ after(grammarAccess.getDivFunctionAccess().getArgument1Argument1ParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument1__IntegerAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument1Access().getIntegerINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getArgument1Access().getIntegerINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument1__FloatValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument1Access().getFloatValueFloatParserRuleCall_1_0()); }
		ruleFloat
		{ after(grammarAccess.getArgument1Access().getFloatValueFloatParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument1__StringAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument1Access().getStringSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getArgument1Access().getStringSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument1__ClassVariableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument1Access().getClassVariableClassVariableParserRuleCall_3_0()); }
		ruleClassVariable
		{ after(grammarAccess.getArgument1Access().getClassVariableClassVariableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument1__VariableAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument1Access().getVariableVariableParserRuleCall_4_0_0()); }
		ruleVariable
		{ after(grammarAccess.getArgument1Access().getVariableVariableParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument1__ObjectCAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument1Access().getObjectCObjectCParserRuleCall_4_1_0()); }
		ruleObjectC
		{ after(grammarAccess.getArgument1Access().getObjectCObjectCParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument1__ArrayCAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument1Access().getArrayCArrayCParserRuleCall_4_2_0()); }
		ruleArrayC
		{ after(grammarAccess.getArgument1Access().getArrayCArrayCParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__VariableAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument2Access().getVariableVariableParserRuleCall_0_0_0()); }
		ruleVariable
		{ after(grammarAccess.getArgument2Access().getVariableVariableParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__IntegerAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument2Access().getIntegerINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getArgument2Access().getIntegerINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__VariableAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument2Access().getVariableVariableParserRuleCall_1_1_0_0()); }
		ruleVariable
		{ after(grammarAccess.getArgument2Access().getVariableVariableParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__IntegerEnd1Assignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument2Access().getIntegerEnd1INTTerminalRuleCall_1_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getArgument2Access().getIntegerEnd1INTTerminalRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__VariableAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument2Access().getVariableVariableParserRuleCall_3_0_0()); }
		ruleVariable
		{ after(grammarAccess.getArgument2Access().getVariableVariableParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__IntegerEnd2Assignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument2Access().getIntegerEnd2INTTerminalRuleCall_3_1_0()); }
		RULE_INT
		{ after(grammarAccess.getArgument2Access().getIntegerEnd2INTTerminalRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__VariableAssignment_4_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument2Access().getVariableVariableParserRuleCall_4_1_0_0()); }
		ruleVariable
		{ after(grammarAccess.getArgument2Access().getVariableVariableParserRuleCall_4_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument2__IntegerEnd3Assignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgument2Access().getIntegerEnd3INTTerminalRuleCall_4_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getArgument2Access().getIntegerEnd3INTTerminalRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassVariable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getClassVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__IfConditionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalAccess().getIfConditionIfConditionParserRuleCall_0_0()); }
		ruleIfCondition
		{ after(grammarAccess.getConditionalAccess().getIfConditionIfConditionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Conditional__ElseCondionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionalAccess().getElseCondionElseConditionParserRuleCall_1_0()); }
		ruleElseCondition
		{ after(grammarAccess.getConditionalAccess().getElseCondionElseConditionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__ConditionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfConditionAccess().getConditionCondition1ParserRuleCall_2_0()); }
		ruleCondition1
		{ after(grammarAccess.getIfConditionAccess().getConditionCondition1ParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfCondition__OtherElementAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfConditionAccess().getOtherElementOtherElementParserRuleCall_6_0()); }
		ruleOtherElement
		{ after(grammarAccess.getIfConditionAccess().getOtherElementOtherElementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__OtherElementAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseConditionAccess().getOtherElementOtherElementParserRuleCall_1_0_1_0()); }
		ruleOtherElement
		{ after(grammarAccess.getElseConditionAccess().getOtherElementOtherElementParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseCondition__IfConditionAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseConditionAccess().getIfConditionIfConditionParserRuleCall_1_1_0()); }
		ruleIfCondition
		{ after(grammarAccess.getElseConditionAccess().getIfConditionIfConditionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition1__FirstPartAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondition1Access().getFirstPartPartParserRuleCall_0_0()); }
		rulePart
		{ after(grammarAccess.getCondition1Access().getFirstPartPartParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition1__CompareAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondition1Access().getCompareCompareParserRuleCall_1_0()); }
		ruleCompare
		{ after(grammarAccess.getCondition1Access().getCompareCompareParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition1__SecondPartAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCondition1Access().getSecondPartPartParserRuleCall_2_0()); }
		rulePart
		{ after(grammarAccess.getCondition1Access().getSecondPartPartParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__VariableAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getVariableVariableParserRuleCall_0_0_0()); }
		ruleVariable
		{ after(grammarAccess.getPartAccess().getVariableVariableParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__ObjectCAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getObjectCObjectCParserRuleCall_0_1_0()); }
		ruleObjectC
		{ after(grammarAccess.getPartAccess().getObjectCObjectCParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__ArrayCAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getArrayCArrayCParserRuleCall_0_2_0()); }
		ruleArrayC
		{ after(grammarAccess.getPartAccess().getArrayCArrayCParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__StringAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getStringSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPartAccess().getStringSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__IntegerAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getIntegerINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getPartAccess().getIntegerINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__SuperVariableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getSuperVariableSuperVariableParserRuleCall_3_0()); }
		ruleSuperVariable
		{ after(grammarAccess.getPartAccess().getSuperVariableSuperVariableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Part__ClassVariableAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPartAccess().getClassVariableClassVariableParserRuleCall_4_0()); }
		ruleClassVariable
		{ after(grammarAccess.getPartAccess().getClassVariableClassVariableParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__WithLoopAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopAccess().getWithLoopWithParserRuleCall_0_0()); }
		ruleWith
		{ after(grammarAccess.getLoopAccess().getWithLoopWithParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__ForLoopAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoopAccess().getForLoopForParserRuleCall_1_0()); }
		ruleFor
		{ after(grammarAccess.getLoopAccess().getForLoopForParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__With__InitAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWithAccess().getInitVariableParserRuleCall_1_0()); }
		ruleVariable
		{ after(grammarAccess.getWithAccess().getInitVariableParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__With__VariableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWithAccess().getVariableVariableParserRuleCall_3_0()); }
		ruleVariable
		{ after(grammarAccess.getWithAccess().getVariableVariableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__With__ObjectCAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWithAccess().getObjectCObjectCParserRuleCall_4_0()); }
		ruleObjectC
		{ after(grammarAccess.getWithAccess().getObjectCObjectCParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__With__ArrayCAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWithAccess().getArrayCArrayCParserRuleCall_5_0()); }
		ruleArrayC
		{ after(grammarAccess.getWithAccess().getArrayCArrayCParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__With__OtherElementAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWithAccess().getOtherElementOtherElementParserRuleCall_7_0()); }
		ruleOtherElement
		{ after(grammarAccess.getWithAccess().getOtherElementOtherElementParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__IncrementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getIncrementVariableParserRuleCall_0_0()); }
		ruleVariable
		{ after(grammarAccess.getForAccess().getIncrementVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__InitWithVariableAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getInitWithVariableVariableParserRuleCall_2_0_0()); }
		ruleVariable
		{ after(grammarAccess.getForAccess().getInitWithVariableVariableParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__InitWithIntegerAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getInitWithIntegerINTTerminalRuleCall_2_1_0()); }
		RULE_INT
		{ after(grammarAccess.getForAccess().getInitWithIntegerINTTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__EndWithVariableAssignment_4_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getEndWithVariableVariableParserRuleCall_4_0_0_0()); }
		ruleVariable
		{ after(grammarAccess.getForAccess().getEndWithVariableVariableParserRuleCall_4_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__ObjectCAssignment_4_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getObjectCObjectCParserRuleCall_4_0_1_0()); }
		ruleObjectC
		{ after(grammarAccess.getForAccess().getObjectCObjectCParserRuleCall_4_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__EndWithIntegerAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getEndWithIntegerINTTerminalRuleCall_4_1_0()); }
		RULE_INT
		{ after(grammarAccess.getForAccess().getEndWithIntegerINTTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__For__OtherElementAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getForAccess().getOtherElementOtherElementParserRuleCall_6_0()); }
		ruleOtherElement
		{ after(grammarAccess.getForAccess().getOtherElementOtherElementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherElement__PageAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOtherElementAccess().getPagePageParserRuleCall_0_0()); }
		rulePage
		{ after(grammarAccess.getOtherElementAccess().getPagePageParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherElement__RowAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOtherElementAccess().getRowRowParserRuleCall_1_0()); }
		ruleRow
		{ after(grammarAccess.getOtherElementAccess().getRowRowParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherElement__ColAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOtherElementAccess().getColColParserRuleCall_2_0()); }
		ruleCol
		{ after(grammarAccess.getOtherElementAccess().getColColParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherElement__LoopAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOtherElementAccess().getLoopLoopParserRuleCall_3_0()); }
		ruleLoop
		{ after(grammarAccess.getOtherElementAccess().getLoopLoopParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OtherElement__ConditionalAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOtherElementAccess().getConditionalConditionalParserRuleCall_4_0()); }
		ruleConditional
		{ after(grammarAccess.getOtherElementAccess().getConditionalConditionalParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Style__CssAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStyleAccess().getCssCssParserRuleCall_2_0()); }
		ruleCss
		{ after(grammarAccess.getStyleAccess().getCssCssParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Css__RulesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCssAccess().getRulesRuleParserRuleCall_0()); }
		ruleRule
		{ after(grammarAccess.getCssAccess().getRulesRuleParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__SelectorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getSelectorSelectorParserRuleCall_0_0()); }
		ruleSelector
		{ after(grammarAccess.getRuleAccess().getSelectorSelectorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Rule__DeclarationsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRuleAccess().getDeclarationsDeclarationParserRuleCall_2_0()); }
		ruleDeclaration
		{ after(grammarAccess.getRuleAccess().getDeclarationsDeclarationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__IdSelectorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getIdSelectorIDSelectorParserRuleCall_0_0()); }
		ruleIDSelector
		{ after(grammarAccess.getSelectorAccess().getIdSelectorIDSelectorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__ClassSelectorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getClassSelectorClassSelectorParserRuleCall_1_0()); }
		ruleClassSelector
		{ after(grammarAccess.getSelectorAccess().getClassSelectorClassSelectorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__TypeSelectorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getTypeSelectorTypeSelectorParserRuleCall_2_0()); }
		ruleTypeSelector
		{ after(grammarAccess.getSelectorAccess().getTypeSelectorTypeSelectorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IDSelector__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIDSelectorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getIDSelectorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSelector__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassSelectorAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getClassSelectorAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeSelector__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeSelectorAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeSelectorAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__PropertyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getPropertyIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getDeclarationAccess().getPropertyIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__CssValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeclarationAccess().getCssValueCssValueParserRuleCall_2_0()); }
		ruleCssValue
		{ after(grammarAccess.getDeclarationAccess().getCssValueCssValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssValue__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCssValueAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getCssValueAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssValue__StringAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCssValueAccess().getStringSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getCssValueAccess().getStringSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssValue__IntegerAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCssValueAccess().getIntegerINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getCssValueAccess().getIntegerINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssValue__ComaAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCssValueAccess().getComaCOMAParserRuleCall_3_0()); }
		ruleCOMA
		{ after(grammarAccess.getCssValueAccess().getComaCOMAParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssValue__ApostropheAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCssValueAccess().getApostropheAPOSTROPHEParserRuleCall_4_0()); }
		ruleAPOSTROPHE
		{ after(grammarAccess.getCssValueAccess().getApostropheAPOSTROPHEParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssValue__HashtagAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCssValueAccess().getHashtagHASHTAGParserRuleCall_5_0()); }
		ruleHASHTAG
		{ after(grammarAccess.getCssValueAccess().getHashtagHASHTAGParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CssValue__PourcentAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCssValueAccess().getPourcentPOURCENTParserRuleCall_6_0()); }
		rulePOURCENT
		{ after(grammarAccess.getCssValueAccess().getPourcentPOURCENTParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__FirstIntAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatAccess().getFirstIntINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getFloatAccess().getFirstIntINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Float__SecondIntAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatAccess().getSecondIntINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getFloatAccess().getSecondIntINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_INT : ('0'..'9')+;

RULE_ID : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'_'|'-'|'#')*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
